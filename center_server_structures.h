#ifndef _STRUCTURES_H
#define _STRUCTURES_H

// File generated by PDBRipper ver 1.13 (http://www.ntinfo.biz)
// Bugreports : horsicq@gmail.com


// Typedefs

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR64 MINIDUMP_MEMORY_DESCRIPTOR64;
typedef struct tagMSGBOXPARAMSW * PMSGBOXPARAMSW;
typedef struct _MESSAGE_RESOURCE_ENTRY * PMESSAGE_RESOURCE_ENTRY;
typedef void ( * WAITORTIMERCALLBACKFUNC)(void *,unsigned char);
typedef struct HDC__ * HDC;
typedef struct tagHIGHCONTRASTA HIGHCONTRASTA;
typedef struct tagAUXCAPS2A * NPAUXCAPS2A;
typedef struct tagMIXERCAPSA * PMIXERCAPS;
typedef struct tagMDICREATESTRUCTA MDICREATESTRUCTA;
typedef struct tagEMRSELECTCLIPPATH * PEMRSELECTCLIPPATH;
typedef struct tagAUXCAPS2A * LPAUXCAPS2A;
typedef struct tagMIDIOUTCAPSA MIDIOUTCAPS;
typedef struct _PORT_INFO_1W * LPPORT_INFO_1W;
typedef struct _SPC_PE_IMAGE_DATA SPC_PE_IMAGE_DATA;
typedef enum _ACTIVATION_CONTEXT_INFO_CLASS ACTIVATION_CONTEXT_INFO_CLASS;
typedef struct _IMAGE_DEBUG_DIRECTORY * PIMAGE_DEBUG_DIRECTORY;
typedef struct _PORT_INFO_3W * LPPORT_INFO_3W;
typedef struct _PRINTER_INFO_1A * LPPRINTER_INFO_1A;
typedef int ( * PFN_CERT_STORE_PROV_FIND_CERT)(void *,struct _CERT_STORE_PROV_FIND_INFO *,struct _CERT_CONTEXT *,unsigned long,void * *,struct _CERT_CONTEXT * *);
typedef struct _PORT_INFO_2W * LPPORT_INFO_2W;
typedef int ( * PSYM_ENUMSYMBOLS_CALLBACK64)(char *,unsigned __int64,unsigned long,void *);
typedef struct _CTL_ENTRY * PCTL_ENTRY;
typedef struct tagAUXCAPS2W * LPAUXCAPS2W;
typedef struct tagMIXERCONTROLA MIXERCONTROL;
typedef struct _DOC_INFO_3A * PDOC_INFO_3A;
typedef struct tagEVENTMSG * PEVENTMSGMSG;
typedef struct tagEMREOF EMREOF;
typedef struct _LOADED_IMAGE * PLOADED_IMAGE;
typedef unsigned short wchar_t;
typedef struct tagAUXCAPS2W * NPAUXCAPS2W;
typedef unsigned char * LPBYTE;
typedef struct IUnknown * LPUNKNOWN;
typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;
typedef struct tagRGBTRIPLE RGBTRIPLE;
typedef struct tagHIGHCONTRASTW HIGHCONTRASTW;
typedef struct _NON_PAGED_DEBUG_INFO * PNON_PAGED_DEBUG_INFO;
typedef struct tagMIXERCAPS2A * PMIXERCAPS2;
typedef struct _PRINTER_NOTIFY_INFO PRINTER_NOTIFY_INFO;
typedef void (RPCNOTIFICATION_ROUTINE)(struct _RPC_ASYNC_STATE *,void *,enum _RPC_ASYNC_EVENT);
typedef unsigned long HCRYPTHASH;
typedef unsigned int ( * LPOFNHOOKPROC)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct SCARD_READERSTATEA * LPSCARD_READERSTATEA;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY * PIMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _PROV_ENUMALGS_EX PROV_ENUMALGS_EX;
typedef struct _PRINTER_INFO_1W * LPPRINTER_INFO_1W;
typedef struct tagIMEMENUITEMINFOA * PIMEMENUITEMINFO;
typedef struct tagEMRPOLYLINE EMRPOLYBEZIER;
typedef struct sockaddr * PSOCKADDR;
typedef struct tagEMRLINETO * PEMRLINETO;
typedef struct tagEVENTMSG * PEVENTMSG;
typedef struct IAddrExclusionControl * LPADDREXCLUSIONCONTROL;
typedef struct HKEY__ * * PHKEY;
typedef struct _CMC_PEND_INFO CMC_PEND_INFO;
typedef struct tagMCI_LOAD_PARMSW * LPMCI_LOAD_PARMSW;
typedef struct _DISK_GEOMETRY * PDISK_GEOMETRY;
typedef struct tagHIGHCONTRASTA * LPHIGHCONTRASTA;
typedef unsigned short PROPVAR_PAD2;
typedef struct _RIP_INFO * LPRIP_INFO;
typedef struct tagKERNINGPAIR * LPKERNINGPAIR;
typedef struct _OSVERSIONINFOW * POSVERSIONINFOW;
typedef struct _BIN_COUNT BIN_COUNT;
typedef struct tagMCI_OVLY_LOAD_PARMSA * LPMCI_OVLY_LOAD_PARMS;
typedef struct tagVARDESC * LPVARDESC;
typedef struct tagMCI_WAVE_DELETE_PARMS * PMCI_WAVE_DELETE_PARMS;
typedef long * LPFXPT16DOT16;
typedef enum tagXMLEMEM_TYPE XMLELEM_TYPE;
typedef struct _PRINTER_ENUM_VALUESW * LPPRINTER_ENUM_VALUESW;
typedef struct _DOC_INFO_2A * PDOC_INFO_2A;
typedef struct _PROVIDOR_INFO_2W * LPPROVIDOR_INFO_2W;
typedef struct _PORT_INFO_3A * PPORT_INFO_3;
typedef struct _FLAGGED_WORD_BLOB FLAGGED_WORD_BLOB;
typedef struct _PROVIDOR_INFO_1W * LPPROVIDOR_INFO_1W;
typedef struct tagHIGHCONTRASTW * LPHIGHCONTRASTW;
typedef enum _ELEMENT_TYPE ELEMENT_TYPE;
typedef struct _RPC_ASYNC_STATE RPC_ASYNC_STATE;
typedef struct tagMCI_LOAD_PARMSA * LPMCI_LOAD_PARMSA;
typedef enum tagOLEGETMONIKER OLEGETMONIKER;
typedef struct tagEMRPOLYLINE * PEMRPOLYBEZIER;
typedef struct _RPC_VERSION RPC_VERSION;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS JOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct _MINIDUMP_HEADER * PMINIDUMP_HEADER;
typedef void ( * PIMAGE_TLS_CALLBACK)(void *,unsigned long,void *);
typedef struct _MINIDUMP_SYSTEM_INFO MINIDUMP_SYSTEM_INFO;
typedef struct HWINSTA__ * HWINSTA;
typedef struct _CRYPT_HASH_MESSAGE_PARA * PCRYPT_HASH_MESSAGE_PARA;
typedef struct _OSVERSIONINFOA * POSVERSIONINFOA;
typedef unsigned __int64 * PDWORDLONG;
typedef struct _IMAGE_FUNCTION_ENTRY * PIMAGE_FUNCTION_ENTRY;
typedef enum tagCALLCONV CALLCONV;
typedef struct tagMINMAXINFO * LPMINMAXINFO;
typedef struct _currencyfmtA * LPCURRENCYFMTA;
typedef struct _ADDJOB_INFO_1A * LPADDJOB_INFO_1;
typedef struct _EXCEPTION_RECORD32 EXCEPTION_RECORD32;
typedef struct _RPC_PROTSEQ_ENDPOINT * PRPC_PROTSEQ_ENDPOINT;
typedef struct tagHIGHCONTRASTA HIGHCONTRAST;
typedef struct ITypeLib2 * LPTYPELIB2;
typedef struct tagMIXERCAPSA * PMIXERCAPSA;
typedef struct tagMIXERLINEA * LPMIXERLINEA;
typedef struct _CTL_ENTRY CTL_ENTRY;
typedef struct tagAUXCAPS2A * NPAUXCAPS2;
typedef struct tagEMREXTFLOODFILL * PEMREXTFLOODFILL;
typedef struct tagAUXCAPS2A * LPAUXCAPS2;
typedef struct tagMIXERCONTROLW MIXERCONTROLW;
typedef struct _BIDI_RESPONSE_CONTAINER * PBIDI_RESPONSE_CONTAINER;
typedef struct _REPARSE_GUID_DATA_BUFFER REPARSE_GUID_DATA_BUFFER;
typedef struct _CRYPT_RETRIEVE_AUX_INFO CRYPT_RETRIEVE_AUX_INFO;
typedef struct _TRIVERTEX * PTRIVERTEX;
typedef struct _BIN_RANGE * PBIN_RANGE;
typedef struct tagIMEMENUITEMINFOW * PIMEMENUITEMINFOW;
typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER * PFSCTL_QUERY_FAT_BPB_BUFFER;
typedef void * LOCALHANDLE;
typedef struct _PRINTER_INFO_1A * LPPRINTER_INFO_1;
typedef struct _CRYPT_HASH_MESSAGE_PARA CRYPT_HASH_MESSAGE_PARA;
typedef int ( * FARPROC)();
typedef struct _IMAGE_EXPORT_DIRECTORY * PIMAGE_EXPORT_DIRECTORY;
typedef struct tagEMRPLGBLT EMRPLGBLT;
typedef struct tagMIXERCONTROLA MIXERCONTROLA;
typedef struct tagMIXERCAPSW * PMIXERCAPSW;
typedef struct _DOC_INFO_1A * PDOC_INFO_1A;
typedef struct _BINARY_CONTAINER * PBINARY_CONTAINER;
typedef enum tagDVASPECT DVASPECT;
typedef struct _SYSTEM_INFO * LPSYSTEM_INFO;
typedef struct DLGTEMPLATE * LPDLGTEMPLATEA;
typedef struct _EXCEPTION_RECORD * LPEXCEPTION_RECORD;
typedef struct _DERBY_HISTORY_INFO_ * LP_DERBY_HISTORY_INFO;
typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES NDR_CS_SIZE_CONVERT_ROUTINES;
typedef struct OPENCARDNAMEA OPENCARDNAME;
typedef struct _BIDI_RESPONSE_CONTAINER * LPBIDI_RESPONSE_CONTAINER;
typedef struct tagContextProperty ContextProperty;
typedef struct tagIMEMENUITEMINFOA * PIMEMENUITEMINFOA;
typedef enum tagOLERENDER * LPOLERENDER;
typedef struct _MIDL_STUBLESS_PROXY_INFO MIDL_STUBLESS_PROXY_INFO;
typedef int ( * PIMAGEHLP_STATUS_ROUTINE32)(enum _IMAGEHLP_STATUS_REASON,char *,char *,unsigned long,unsigned long);
typedef struct tagMCI_OVLY_WINDOW_PARMSA * LPMCI_OVLY_WINDOW_PARMSA;
typedef enum POWER_ACTION * PPOWER_ACTION;
typedef struct tagGUITHREADINFO * LPGUITHREADINFO;
typedef struct _POINTL POINTL;
typedef struct tagHIGHCONTRASTA * LPHIGHCONTRAST;
typedef struct _PORT_INFO_3W * PPORT_INFO_3W;
typedef struct _PRINTER_INFO_8A * PPRINTER_INFO_8;
typedef struct _PRINTER_INFO_9A * PPRINTER_INFO_9;
typedef struct _PRINTER_INFO_6 * PPRINTER_INFO_6;
typedef void * HCERTSTOREPROV;
typedef struct _PRINTER_INFO_7A * PPRINTER_INFO_7;
typedef struct _PRINTER_INFO_4A * PPRINTER_INFO_4;
typedef enum tagPENDINGMSG PENDINGMSG;
typedef struct _PRINTER_INFO_5A * PPRINTER_INFO_5;
typedef struct _PRINTER_INFO_2A * PPRINTER_INFO_2;
typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_RESOURCE_DEBUG;
typedef struct _PRINTER_INFO_3 * PPRINTER_INFO_3;
typedef struct tagGCP_RESULTSW * LPGCP_RESULTSW;
typedef struct tagHELPINFO * LPHELPINFO;
typedef struct _PRINTER_INFO_1A * PPRINTER_INFO_1;
typedef char * PTCH;
typedef struct tagLOGFONTA LOGFONTA;
typedef struct tagCANDIDATELIST * PCANDIDATELIST;
typedef struct _NCB * PNCB;
typedef struct _STARTUPINFOA * LPSTARTUPINFOA;
typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST ENCRYPTION_CERTIFICATE_HASH_LIST;
typedef struct _PORT_INFO_3A * PPORT_INFO_3A;
typedef struct _EVENTLOGRECORD EVENTLOGRECORD;
typedef struct tagMCI_LOAD_PARMSA * LPMCI_LOAD_PARMS;
typedef struct tagNEWTEXTMETRICW NEWTEXTMETRICW;
typedef struct _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES;
typedef unsigned __int64 * PUINT64;
typedef struct tagBITMAP * NPBITMAP;
typedef struct tagBITMAP * LPBITMAP;
typedef struct _FLAG_STGMEDIUM FLAG_STGMEDIUM;
typedef struct tagMCI_SYSINFO_PARMSW * LPMCI_SYSINFO_PARMSW;
typedef struct _OSVERSIONINFOA * POSVERSIONINFO;
typedef struct _CERT_SIGNED_CONTENT_INFO CERT_SIGNED_CONTENT_INFO;
typedef struct tagDDEML_MSG_HOOK_DATA * PDDEML_MSG_HOOK_DATA;
typedef long ( * DRIVERPROC)(unsigned long,struct HDRVR__ *,unsigned int,long,long);
typedef void * HGDIOBJ;
typedef struct tagABORTPATH EMRABORTPATH;
typedef struct tagBITMAPCOREINFO BITMAPCOREINFO;
typedef struct tagTEXTMETRICW TEXTMETRICW;
typedef enum _THDTYPE THDTYPE;
typedef struct _userHMETAFILE * wireHMETAFILE;
typedef struct _CMSG_CTRL_DECRYPT_PARA * PCMSG_CTRL_DECRYPT_PARA;
typedef struct _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;
typedef struct _CMSG_CONTENT_ENCRYPT_INFO * PCMSG_CONTENT_ENCRYPT_INFO;
typedef struct _ImageArchitectureHeader IMAGE_ARCHITECTURE_HEADER;
typedef struct _PERF_OBJECT_TYPE PERF_OBJECT_TYPE;
typedef enum __MIDL_IBindStatusCallback_0003 BINDF;
typedef struct tagEMRINVERTRGN EMRPAINTRGN;
typedef struct _GET_CHANGER_PARAMETERS * PGET_CHANGER_PARAMETERS;
typedef struct tagMCI_GENERIC_PARMS MCI_GENERIC_PARMS;
typedef struct _ENUM_SERVICE_STATUSW ENUM_SERVICE_STATUSW;
typedef struct tagEMRSTRETCHDIBITS * PEMRSTRETCHDIBITS;
typedef struct _WSAServiceClassInfoA * LPWSASERVICECLASSINFOA;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION * PJOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct tagMIXERCAPS2A * LPMIXERCAPS2;
typedef struct _OSVERSIONINFOEXA * POSVERSIONINFOEX;
typedef struct _CERT_CHAIN_ENGINE_CONFIG * PCERT_CHAIN_ENGINE_CONFIG;
typedef int ( * PFN_CERT_STORE_PROV_FREE_FIND_CTL)(void *,struct _CTL_CONTEXT *,void *,unsigned long);
typedef enum _WSACOMPLETIONTYPE * PWSACOMPLETIONTYPE;
typedef struct tagTEXTMETRICA TEXTMETRICA;
typedef struct _PUBKEYVER3 DSSPUBKEY_VER3;
typedef struct tagSCROLLBARINFO * PSCROLLBARINFO;
typedef struct IInternetProtocol * LPIINTERNETPROTOCOL;
typedef struct _CRYPT_PROVIDER_PRIVDATA * PCRYPT_PROVIDER_PRIVDATA;
typedef struct _CRYPT_CONTENT_INFO CRYPT_CONTENT_INFO;
typedef struct _HTTPSPolicyCallbackData * PHTTPSPolicyCallbackData;
typedef struct fd_set * PFD_SET;
typedef struct _CERT_X942_DH_VALIDATION_PARAMS * PCERT_X942_DH_VALIDATION_PARAMS;
typedef enum __MIDL_IMonikerProp_0001 MONIKERPROPERTY;
typedef struct _CRYPTOAPI_BLOB CRYPT_OBJID_BLOB;
typedef struct tagMDICREATESTRUCTA * LPMDICREATESTRUCTA;
typedef struct _CERT_ALT_NAME_INFO * PCERT_ALT_NAME_INFO;
typedef struct _MONITOR_INFO_2W * LPMONITOR_INFO_2W;
typedef struct _COMSTAT COMSTAT;
typedef unsigned long (PM_QUERY_PROC)(unsigned long *,void * *,unsigned long *,unsigned long *);
typedef struct _currencyfmtA CURRENCYFMTA;
typedef struct HMIXEROBJ__ * * LPHMIXEROBJ;
typedef struct _REASSIGN_BLOCKS * PREASSIGN_BLOCKS;
typedef unsigned int * PULONG32;
typedef struct _OSVERSIONINFOEXW RTL_OSVERSIONINFOEXW;
typedef struct _DRAGINFOA DRAGINFOA;
typedef void ( * LPSERVICE_MAIN_FUNCTIONW)(unsigned long,unsigned short * *);
typedef struct tagHeader * PHEADER;
typedef struct timeval TIMEVAL;
typedef struct _COORD COORD;
typedef struct IAddrTrackingControl * LPADDRTRACKINGCONTROL;
typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY * PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
typedef struct tagPARAMDESC * LPPARAMDESC;
typedef struct _PRINTER_INFO_8A PRINTER_INFO_8A;
typedef struct IErrorLog * LPERRORLOG;
typedef struct _SHELLEXECUTEINFOW SHELLEXECUTEINFOW;
typedef struct HCONV__ * HCONV;
typedef struct tagLOGCOLORSPACEW * LPLOGCOLORSPACEW;
typedef struct tagSAFEARRAYBOUND * LPSAFEARRAYBOUND;
typedef struct WINTRUST_FILE_INFO_ * PWINTRUST_FILE_INFO;
typedef struct tagEMRTEXT * PEMRTEXT;
typedef struct _MINIDUMP_THREAD_EX MINIDUMP_THREAD_EX;
typedef int * PBOOL;
typedef struct _MONITOR_INFO_2A * LPMONITOR_INFO_2A;
typedef struct tagEMRALPHABLEND EMRALPHABLEND;
typedef HRESULT ( * PFN_PROVIDER_FINALPOLICY_CALL)(struct _CRYPT_PROVIDER_DATA *);
typedef struct ARRAY_INFO * PARRAY_INFO;
typedef struct _UNIVERSAL_NAME_INFOA * LPUNIVERSAL_NAME_INFO;
typedef struct HICON__ * HCURSOR;
typedef struct tagPOINT * PPOINT;
typedef union _IMAGE_AUX_SYMBOL * PIMAGE_AUX_SYMBOL;
typedef struct _SHELLEXECUTEINFOA SHELLEXECUTEINFOA;
typedef struct protoent * LPPROTOENT;
typedef struct tagMULTI_QI MULTI_QI;
typedef struct _PRINTER_INFO_8W PRINTER_INFO_8W;
typedef float FLOAT;
typedef bool _Bool;
typedef struct _PERF_BIN * PPERF_BIN;
typedef struct _OUTLINETEXTMETRICW * NPOUTLINETEXTMETRICW;
typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR * PRTL_VERIFIER_DLL_DESCRIPTOR;
typedef struct _CHAR_INFO CHAR_INFO;
typedef struct _SHFILEINFOA SHFILEINFO;
typedef struct _HYPER_SIZEDARR HYPER_SIZEDARR;
typedef struct _DRAGINFOW DRAGINFOW;
typedef struct tagVARIANT * LPVARIANT;
typedef struct _OUTLINETEXTMETRICW * LPOUTLINETEXTMETRICW;
typedef unsigned char UINT8;
typedef struct _ACCESS_DENIED_ACE ACCESS_DENIED_ACE;
typedef struct _CERT_ISSUER_SERIAL_NUMBER CERT_ISSUER_SERIAL_NUMBER;
typedef signed char * PINT8;
typedef struct tagMIXERCAPS2W * LPMIXERCAPS2W;
typedef struct _RemotableHandle RemotableHandle;
typedef struct _OSVERSIONINFOEXW * POSVERSIONINFOEXW;
typedef void ( * PFN_RPCNOTIFICATION_ROUTINE)(struct _RPC_ASYNC_STATE *,void *,enum _RPC_ASYNC_EVENT);
typedef unsigned long ( * USER_MARSHAL_SIZING_ROUTINE)(unsigned long *,unsigned long,void *);
typedef struct tagFINDREPLACEA FINDREPLACE;
typedef struct tagINTERFACEDATA INTERFACEDATA;
typedef union doubleint DINT;
typedef enum tagBINDSTRING BINDSTRING;
typedef struct _CRL_ENTRY * PCRL_ENTRY;
typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
typedef struct _CONSOLE_CURSOR_INFO CONSOLE_CURSOR_INFO;
typedef struct DLGITEMTEMPLATE * LPDLGITEMTEMPLATEW;
typedef struct IClassFactory * LPCLASSFACTORY;
typedef struct _OSVERSIONINFOEXW * LPOSVERSIONINFOEXW;
typedef struct tagMCI_ANIM_WINDOW_PARMSW MCI_ANIM_WINDOW_PARMSW;
typedef struct tagEMRSETARCDIRECTION * PEMRSETARCDIRECTION;
typedef struct tagMIXERCAPS2A * LPMIXERCAPS2A;
typedef struct _OSVERSIONINFOEXA * POSVERSIONINFOEXA;
typedef struct tagTEXTMETRICA TEXTMETRIC;
typedef struct tagEMRGRADIENTFILL * PEMRGRADIENTFILL;
typedef struct _CMSG_SIGNER_INFO CMSG_SIGNER_INFO;
typedef struct _TOKEN_DEFAULT_DACL * PTOKEN_DEFAULT_DACL;
typedef int ( * PREAD_PROCESS_MEMORY_ROUTINE64)(void *,unsigned __int64,void *,unsigned long,unsigned long *);
typedef float * PFLOAT;
typedef unsigned int UINT;
typedef void ( * LPDRVCALLBACK)(struct HDRVR__ *,unsigned int,unsigned long,unsigned long,unsigned long);
typedef unsigned long * PULONG;
typedef struct _CTL_FIND_USAGE_PARA CTL_FIND_USAGE_PARA;
typedef struct tagLOCALESIGNATURE * PLOCALESIGNATURE;
typedef unsigned short BAD_TRACK_NUMBER;
typedef struct _ACCESS_DENIED_CALLBACK_ACE * PACCESS_DENIED_CALLBACK_ACE;
typedef int * PINT;
typedef struct _EFS_HASH_BLOB EFS_HASH_BLOB;
typedef struct tagMINIMIZEDMETRICS * PMINIMIZEDMETRICS;
typedef struct _CMSG_SIGNER_ENCODE_INFO * PCMSG_SIGNER_ENCODE_INFO;
typedef char[1] __C_ASSERT__;
typedef struct _GLYPHMETRICS GLYPHMETRICS;
typedef struct tagEMRPOLYLINE * PEMRPOLYLINE;
typedef enum _THREAD_WRITE_FLAGS THREAD_WRITE_FLAGS;
typedef struct tagDROPSTRUCT DROPSTRUCT;
typedef struct tagMCI_WAVE_SET_PARMS * LPMCI_WAVE_SET_PARMS;
typedef struct tagEMRROUNDRECT EMRROUNDRECT;
typedef struct tagLC_STRINGS * LPLC_STRINGS;
typedef struct _MIDL_FORMAT_STRING MIDL_FORMAT_STRING;
typedef struct hostent * LPHOSTENT;
typedef struct _EFS_HASH_BLOB * PEFS_HASH_BLOB;
typedef struct _GLYPHMETRICS * LPGLYPHMETRICS;
typedef struct _DRAGINFOA DRAGINFO;
typedef struct _SHFILEINFOW SHFILEINFOW;
typedef struct _QOS_SD_MODE * LPQOS_SD_MODE;
typedef unsigned int ( * PFNRECONCILEPROFILEA)(char *,char *,unsigned long);
typedef struct _CAT_NAMEVALUE CAT_NAMEVALUE;
typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO * PCMSG_KEY_AGREE_RECIPIENT_INFO;
typedef struct tagPOINTS * PPOINTS;
typedef struct HRGN__ * HRGN;
typedef struct _PRINTER_INFO_8A PRINTER_INFO_8;
typedef unsigned long EXECUTION_STATE;
typedef unsigned long RPC_LENGTH;
typedef struct _MONITOR_INFO_2A * LPMONITOR_INFO_2;
typedef struct _POINTL * PPOINTL;
typedef struct tagWNDCLASSEXW * PWNDCLASSEXW;
typedef struct _IMAGEHLP_MODULE64W IMAGEHLP_MODULEW64;
typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
typedef int ( * PFN_CERT_STORE_PROV_CONTROL)(void *,unsigned long,unsigned long,void *);
typedef struct _WSAQuerySetW WSAQUERYSETW;
typedef struct WINTRUST_CATALOG_INFO_ WINTRUST_CATALOG_INFO;
typedef struct _SHELLEXECUTEINFOA SHELLEXECUTEINFO;
typedef struct _SERVICE_DESCRIPTIONW * LPSERVICE_DESCRIPTIONW;
typedef struct _PRINTPROCESSOR_CAPS_1 * PPRINTPROCESSOR_CAPS_1;
typedef struct _numberfmtW * LPNUMBERFMTW;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN * PMIXERCONTROLDETAILS_BOOLEAN;
typedef struct _SOCKET_ADDRESS * PSOCKET_ADDRESS;
typedef unsigned long FOURCC;
typedef struct _FORM_INFO_1W FORM_INFO_1W;
typedef struct _PERF_INSTANCE_DEFINITION PERF_INSTANCE_DEFINITION;
typedef enum _WSAEcomparator WSAECOMPARATOR;
typedef struct midihdr_tag * LPMIDIHDR;
typedef struct _FLOAT128 * PFLOAT128;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U * PIMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_THUNK_DATA32 * PIMAGE_THUNK_DATA;
typedef enum _CHANGER_DEVICE_PROBLEM_TYPE * PCHANGER_DEVICE_PROBLEM_TYPE;
typedef struct midihdr_tag * NPMIDIHDR;
typedef struct _SHFILEINFOA SHFILEINFOA;
typedef long * LPFXPT2DOT30;
typedef struct HMONITOR__ * HMONITOR;
typedef struct tagHELPWININFOA * PHELPWININFOA;
typedef struct midistrmbuffver_tag MIDISTRMBUFFVER;
typedef struct HBRUSH__ * HBRUSH;
typedef struct _RGNDATAHEADER * PRGNDATAHEADER;
typedef struct tagGUITHREADINFO GUITHREADINFO;
typedef struct tagIMECHARPOSITION * PIMECHARPOSITION;
typedef struct _ENCRYPTION_CERTIFICATE_HASH ENCRYPTION_CERTIFICATE_HASH;
typedef struct _SCONTEXT_QUEUE SCONTEXT_QUEUE;
typedef struct _CONNECTDLGSTRUCTW CONNECTDLGSTRUCTW;
typedef struct _QUERY_SERVICE_LOCK_STATUSA * LPQUERY_SERVICE_LOCK_STATUS;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE * PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct tagGCP_RESULTSW GCP_RESULTSW;
typedef struct _COSERVERINFO COSERVERINFO;
typedef struct _CROSS_CERT_DIST_POINTS_INFO * PCROSS_CERT_DIST_POINTS_INFO;
typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIER16;
typedef struct IGlobalInterfaceTable * LPGLOBALINTERFACETABLE;
typedef struct _SE_IMPERSONATION_STATE * PSE_IMPERSONATION_STATE;
typedef struct tagEMRARC EMRARC;
typedef struct _RPC_SECURITY_QOS_V3_W RPC_SECURITY_QOS_V3_W;
typedef struct tagEMRARC EMRCHORD;
typedef struct tagMETAHEADER * PMETAHEADER;
typedef struct _DISK_GEOMETRY DISK_GEOMETRY;
typedef struct _DISCDLGSTRUCTA * LPDISCDLGSTRUCTA;
typedef long LCSCSTYPE;
typedef struct tagVersionedStream VERSIONEDSTREAM;
typedef int ( * PSYM_ENUMSYMBOLS_CALLBACKW)(unsigned short *,unsigned long,unsigned long,void *);
typedef struct _CONNECTDLGSTRUCTA CONNECTDLGSTRUCTA;
typedef struct _TAPE_ERASE TAPE_ERASE;
typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO * PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
typedef struct _RSAPUBKEY RSAPUBKEY;
typedef struct _CMSG_CTRL_DECRYPT_PARA CMSG_CTRL_DECRYPT_PARA;
typedef int ( * PFN_IMPORT_PRIV_KEY_FUNC)(unsigned long,struct _CRYPT_PRIVATE_KEY_INFO *,unsigned long,void *);
typedef struct tagABORTPATH EMRENDPATH;
typedef struct tagHELPWININFOW * PHELPWININFOW;
typedef struct _PROVIDOR_INFO_2A * PPROVIDOR_INFO_2;
typedef long LCSGAMUTMATCH;
typedef struct tagCLIENTCREATESTRUCT * LPCLIENTCREATESTRUCT;
typedef long ( * HOOKPROC)(int,unsigned int,long);
typedef struct _RPC_SECURITY_QOS_V3_A RPC_SECURITY_QOS_V3_A;
typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD * PIMAGEHLP_DEFERRED_SYMBOL_LOAD;
typedef struct _SPC_IMAGE SPC_IMAGE;
typedef struct _DISPLAY_DEVICEW * PDISPLAY_DEVICEW;
typedef struct tagAUXCAPS2A AUXCAPS2A;
typedef struct tagEMRFILLRGN * PEMRFILLRGN;
typedef struct _HTTPSPolicyCallbackData SSL_EXTRA_CERT_CHAIN_POLICY_PARA;
typedef struct tagNEWTEXTMETRICA * PNEWTEXTMETRICA;
typedef struct _KEY_EVENT_RECORD * PKEY_EVENT_RECORD;
typedef struct RPC_DISPATCH_TABLE * PRPC_DISPATCH_TABLE;
typedef struct tagMCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMSA;
typedef struct _COMMCONFIG * LPCOMMCONFIG;
typedef struct tagMCI_OVLY_LOAD_PARMSA * LPMCI_OVLY_LOAD_PARMSA;
typedef unsigned short PROPVAR_PAD3;
typedef struct _PRINTPROCESSOR_INFO_1A * PPRINTPROCESSOR_INFO_1;
typedef struct _TAPE_WMI_OPERATIONS TAPE_WMI_OPERATIONS;
typedef struct _CERT_NAME_VALUE * PCERT_NAME_VALUE;
typedef struct _SPC_SP_AGENCY_INFO SPC_SP_AGENCY_INFO;
typedef enum _STORAGE_MEDIA_TYPE * PSTORAGE_MEDIA_TYPE;
typedef struct _CERT_TEMPLATE_EXT CERT_TEMPLATE_EXT;
typedef long (RPC_IF_CALLBACK_FN)(void *,void *);
typedef struct _SHNAMEMAPPINGW * LPSHNAMEMAPPINGW;
typedef struct _RPC_SECURITY_QOS_V2_W RPC_SECURITY_QOS_V2_W;
typedef struct tagSERIALKEYSW SERIALKEYSW;
typedef struct _RGNDATA * LPRGNDATA;
typedef enum tagOLECONTF OLECONTF;
typedef struct _RGNDATA * NPRGNDATA;
typedef struct _PORT_INFO_2A * PPORT_INFO_2;
typedef unsigned long * LPSCARDCONTEXT;
typedef struct tagNEWTEXTMETRICW * PNEWTEXTMETRICW;
typedef struct tagAUXCAPS2W AUXCAPS2W;
typedef struct _JOBOBJECT_JOBSET_INFORMATION * PJOBOBJECT_JOBSET_INFORMATION;
typedef struct ICreateErrorInfo * LPCREATEERRORINFO;
typedef struct IParseDisplayName * LPPARSEDISPLAYNAME;
typedef struct _MINIDUMP_MISC_INFO MINIDUMP_MISC_INFO;
typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_CRITICAL_SECTION_DEBUG;
typedef struct tagSERIALKEYSA SERIALKEYSA;
typedef struct tagMONCONVSTRUCT * PMONCONVSTRUCT;
typedef struct tagMCI_SAVE_PARMSW * PMCI_SAVE_PARMSW;
typedef unsigned long COLORREF;
typedef void * ( * GENERIC_BINDING_ROUTINE)(void *);
typedef int ( * PFN_CERT_STORE_PROV_WRITE_CTL)(void *,struct _CTL_CONTEXT *,unsigned long);
typedef unsigned short * PWCHAR;
typedef struct _RPC_SECURITY_QOS_V2_A RPC_SECURITY_QOS_V2_A;
typedef struct _CERT_CONTEXT * PCERT_CONTEXT;
typedef struct ICodeInstall * LPCODEINSTALL;
typedef struct tagMULTIKEYHELPW * PMULTIKEYHELPW;
typedef struct tagHELPWININFOA * PHELPWININFO;
typedef struct _SOCKET_ADDRESS_LIST * LPSOCKET_ADDRESS_LIST;
typedef struct OPENCARDNAMEW * POPENCARDNAMEW;
typedef struct tagEMRPIXELFORMAT * PEMRPIXELFORMAT;
typedef struct _currencyfmtA * LPCURRENCYFMT;
typedef struct tagHELPINFO HELPINFO;
typedef struct _CRYPTOAPI_BLOB * PCRYPT_HASH_BLOB;
typedef struct tagEMRBITBLT EMRBITBLT;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY * PIMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _PROVIDOR_INFO_2W * PPROVIDOR_INFO_2W;
typedef struct _WGLSWAP * LPWGLSWAP;
typedef struct _CONNECTDLGSTRUCTA CONNECTDLGSTRUCT;
typedef int ( * PFN_CERT_STORE_PROV_READ_CRL)(void *,struct _CRL_CONTEXT *,unsigned long,struct _CRL_CONTEXT * *);
typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYLINE;
typedef struct _EVENTSFORLOGFILE * PEVENTSFORLOGFILE;
typedef unsigned __int64 _ULonglong;
typedef struct tagMONLINKSTRUCT MONLINKSTRUCT;
typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION * PASSEMBLY_FILE_DETAILED_INFORMATION;
typedef unsigned char * ( * USER_MARSHAL_MARSHALLING_ROUTINE)(unsigned long *,unsigned char *,void *);
typedef struct _PROVIDOR_INFO_2A * PPROVIDOR_INFO_2A;
typedef unsigned __int64 * PULONGLONG;
typedef struct tagSAFEARRAY * LPSAFEARRAY;
typedef struct IPersistFile * LPPERSISTFILE;
typedef struct DLGTEMPLATE * LPDLGTEMPLATE;
typedef struct _CRYPT_KEY_PROV_INFO * PCRYPT_KEY_PROV_INFO;
typedef struct _PRINTER_NOTIFY_OPTIONS PRINTER_NOTIFY_OPTIONS;
typedef struct tagAUXCAPS2A AUXCAPS2;
typedef struct tagNEWTEXTMETRICA * PNEWTEXTMETRIC;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION * PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct _PORT_INFO_2W * PPORT_INFO_2W;
typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION * PCASSEMBLY_FILE_DETAILED_INFORMATION;
typedef struct _PRINTPROCESSOR_INFO_1A * PPRINTPROCESSOR_INFO_1A;
typedef struct tagMCI_OPEN_PARMSA * PMCI_OPEN_PARMS;
typedef struct _CERT_PUBLIC_KEY_INFO CERT_PUBLIC_KEY_INFO;
typedef struct _SYMBOL_INFO * PSYMBOL_INFO;
typedef struct _QualityOfService * LPQOS;
typedef struct tagEMRCREATEBRUSHINDIRECT * PEMRCREATEBRUSHINDIRECT;
typedef struct tagEMRPOLYDRAW EMRPOLYDRAW;
typedef struct tagDEC DECIMAL;
typedef struct _CRYPT_PRIVATE_KEY_INFO * PCRYPT_PRIVATE_KEY_INFO;
typedef unsigned short * PUSHORT;
typedef struct _PRINTPROCESSOR_INFO_1W * PPRINTPROCESSOR_INFO_1W;
typedef struct _ACL * PACL;
typedef enum tagTYPEFLAGS TYPEFLAGS;
typedef struct tagMCI_OVLY_OPEN_PARMSW * LPMCI_OVLY_OPEN_PARMSW;
typedef enum tagMSHLFLAGS MSHLFLAGS;
typedef struct _PORT_INFO_2A * PPORT_INFO_2A;
typedef struct _NETCONNECTINFOSTRUCT NETCONNECTINFOSTRUCT;
typedef struct tagTEXTMETRICA * PTEXTMETRICA;
typedef struct tagEMRGDICOMMENT * PEMRGDICOMMENT;
typedef int ( * ICMENUMPROCA)(char *,long);
typedef struct tagSERIALKEYSA SERIALKEYS;
typedef struct IOleContainer * LPOLECONTAINER;
typedef struct _OBJECT_TYPE_LIST OBJECT_TYPE_LIST;
typedef struct _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;
typedef struct IWindowForBindingUI * LPWINDOWFORBINDINGUI;
typedef struct _STARTUPINFOA * LPSTARTUPINFO;
typedef enum tagOLERENDER OLERENDER;
typedef struct _SCARD_ATRMASK * PSCARD_ATRMASK;
typedef struct _NDR_USER_MARSHAL_INFO NDR_USER_MARSHAL_INFO;
typedef short INT16;
typedef struct HMIXEROBJ__ * HMIXEROBJ;
typedef struct tagMENUITEMINFOW * LPCMENUITEMINFOW;
typedef unsigned long (PM_COLLECT_PROC)(unsigned short *,void * *,unsigned long *,unsigned long *);
typedef unsigned long * PSECURITY_INFORMATION;
typedef struct _iobuf FILE;
typedef struct _WSANSClassInfoW WSANSCLASSINFOW;
typedef struct linger LINGER;
typedef struct joyinfoex_tag * LPJOYINFOEX;
typedef struct tagMONITORINFO MONITORINFO;
typedef long _off_t;
typedef struct _DISPLAY_DEVICEW DISPLAY_DEVICEW;
typedef struct joyinfoex_tag * NPJOYINFOEX;
typedef struct _IMAGE_ROM_HEADERS IMAGE_ROM_HEADERS;
typedef struct _CMSG_SIGNER_ENCODE_INFO CMSG_SIGNER_ENCODE_INFO;
typedef struct tagCAFLT CAFLT;
typedef struct tagPOLYTEXTA POLYTEXT;
typedef struct tagABORTPATH EMRCLOSEFIGURE;
typedef struct _PATHNAME_BUFFER PATHNAME_BUFFER;
typedef struct tagMCI_INFO_PARMSA MCI_INFO_PARMS;
typedef struct _TOKEN_GROUPS_AND_PRIVILEGES TOKEN_GROUPS_AND_PRIVILEGES;
typedef struct tagBIND_OPTS BIND_OPTS;
typedef struct _IMAGEHLP_MODULE64 * PIMAGEHLP_MODULE64;
typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
typedef struct _WORD_BLOB WORD_BLOB;
typedef struct tagHANDLETABLE * LPHANDLETABLE;
typedef int ( * PFN_CERT_STORE_PROV_READ_CTL)(void *,struct _CTL_CONTEXT *,unsigned long,struct _CTL_CONTEXT * *);
typedef struct _MINIDUMP_DIRECTORY MINIDUMP_DIRECTORY;
typedef struct _CMS_KEY_INFO * PCMS_KEY_INFO;
typedef struct _WSAServiceClassInfoA * LPWSASERVICECLASSINFO;
typedef struct _INPUT_RECORD * PINPUT_RECORD;
typedef struct _DISPLAY_DEVICEA DISPLAY_DEVICEA;
typedef struct tagSCROLLBARINFO SCROLLBARINFO;
typedef struct _WSANSClassInfoA WSANSCLASSINFOA;
typedef void ( * _inconsistency_function)();
typedef struct _CMSG_STREAM_INFO CMSG_STREAM_INFO;
typedef struct _WSANSClassInfoA * PWSANSCLASSINFOA;
typedef long LRESULT;
typedef struct tagWNDCLASSEXA WNDCLASSEX;
typedef struct tagRPC_CALL_ATTRIBUTES_V1_W RPC_CALL_ATTRIBUTES_V1_W;
typedef struct _userSTGMEDIUM * wireASYNC_STGMEDIUM;
typedef long HRESULT;
typedef enum tagDCOM_CALL_STATE DCOM_CALL_STATE;
typedef unsigned long * PKAFFINITY;
typedef struct tagCBTACTIVATESTRUCT * LPCBTACTIVATESTRUCT;
typedef struct tagPARAMDESC PARAMDESC;
typedef struct tagMDICREATESTRUCTA * LPMDICREATESTRUCT;
typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR CRYPT_ENROLLMENT_NAME_VALUE_PAIR;
typedef struct _CERT_CONTEXT CERT_CONTEXT;
typedef long GEOID;
typedef struct _PRINTER_INFO_9A PRINTER_INFO_9A;
typedef unsigned long ( * PGET_MODULE_BASE_ROUTINE)(void *,unsigned long);
typedef struct _DRAGINFOA * LPDRAGINFOA;
typedef struct _CMC_STATUS_INFO CMC_STATUS_INFO;
typedef struct _ENCRYPTION_CERTIFICATE ENCRYPTION_CERTIFICATE;
typedef struct tagBIND_OPTS * LPBIND_OPTS;
typedef struct _s__CatchableTypeArray _CatchableTypeArray;
typedef struct tagEMRPOLYTEXTOUTA * PEMRPOLYTEXTOUTA;
typedef int ( * CODEPAGE_ENUMPROCW)(unsigned short *);
typedef struct _CTL_VERIFY_USAGE_PARA CTL_VERIFY_USAGE_PARA;
typedef struct _DRAGINFOW * LPDRAGINFOW;
typedef struct _MINIDUMP_EXCEPTION MINIDUMP_EXCEPTION;
typedef struct _PRINTER_INFO_9W PRINTER_INFO_9W;
typedef unsigned long * PDWORD;
typedef struct tagEMRSETVIEWPORTORGEX * PEMRSETWINDOWORGEX;
typedef struct LIST_ENTRY32 * PLIST_ENTRY32;
typedef struct _UNIVERSAL_NAME_INFOA * LPUNIVERSAL_NAME_INFOA;
typedef struct _IMAGE_DEBUG_INFORMATION IMAGE_DEBUG_INFORMATION;
typedef struct tagDVTARGETDEVICE DVTARGETDEVICE;
typedef struct _WIN_CERTIFICATE * LPWIN_CERTIFICATE;
typedef unsigned long LCTYPE;
typedef int ( * PFN_CMSG_IMPORT_MAIL_LIST)(struct _CRYPT_ALGORITHM_IDENTIFIER *,struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA *,unsigned long,void *,unsigned long *);
typedef struct tagMCI_INFO_PARMSW MCI_INFO_PARMSW;
typedef struct tagPOLYTEXTW POLYTEXTW;
typedef struct waveformat_tag * PWAVEFORMAT;
typedef struct _TAPE_GET_DRIVE_PARAMETERS TAPE_GET_DRIVE_PARAMETERS;
typedef unsigned int * PDWORD32;
typedef struct tagEMRGDICOMMENT EMRGDICOMMENT;
typedef int ( * PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK)(struct _CERT_CONTEXT *,void *);
typedef struct tagINTERFACEDATA * LPINTERFACEDATA;
typedef struct _RIP_INFO RIP_INFO;
typedef unsigned int uintptr_t;
typedef struct tagMCI_INFO_PARMSA MCI_INFO_PARMSA;
typedef struct tagPOLYTEXTA POLYTEXTA;
typedef struct _WSANAMESPACE_INFOW * LPWSANAMESPACE_INFOW;
typedef struct tagRECONVERTSTRING * PRECONVERTSTRING;
typedef struct tagENUMLOGFONTEXW * LPENUMLOGFONTEXW;
typedef struct tagEMREXCLUDECLIPRECT EMRINTERSECTCLIPRECT;
typedef struct _NAME_BUFFER * PNAME_BUFFER;
typedef __int64 LONG64;
typedef struct tagELEMDESC ELEMDESC;
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA * PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
typedef struct _SYSTEM_AUDIT_ACE SYSTEM_AUDIT_ACE;
typedef struct _DISPLAY_DEVICEA DISPLAY_DEVICE;
typedef struct _WSANSClassInfoA WSANSCLASSINFO;
typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION * PCACTIVATION_CONTEXT_DETAILED_INFORMATION;
typedef struct _tagADDRESS * LPADDRESS;
typedef struct tagSAFEARRAY SAFEARRAY;
typedef struct tagWINDOWPLACEMENT * LPWINDOWPLACEMENT;
typedef struct tagWNDCLASSEXA WNDCLASSEXA;
typedef struct tagLOGBRUSH * LPPATTERN;
typedef struct tagEMRLINETO EMRMOVETOEX;
typedef struct _CRL_CONTEXT * PCCRL_CONTEXT;
typedef struct tagLOGBRUSH * NPPATTERN;
typedef struct tagCWPSTRUCT CWPSTRUCT;
typedef struct _PRINTER_NOTIFY_INFO * PPRINTER_NOTIFY_INFO;
typedef struct tagCURSORSHAPE * LPCURSORSHAPE;
typedef struct _RTL_CRITICAL_SECTION_DEBUG * PCRITICAL_SECTION_DEBUG;
typedef void ( * CS_TYPE_TO_NETCS_ROUTINE)(void *,unsigned long,void *,unsigned long,unsigned char *,unsigned long *,unsigned long *);
typedef struct _DWORD_BLOB DWORD_BLOB;
typedef struct _RECTL * PRECTL;
typedef unsigned long RPCOLEDATAREP;
typedef struct _PRINTER_INFO_9A PRINTER_INFO_9;
typedef struct _DRAGINFOA * LPDRAGINFO;
typedef void * WIN_TRUST_SUBJECT;
typedef void ( * WORKERCALLBACKFUNC)(void *);
typedef struct tagMONITORINFOEXW * LPMONITORINFOEXW;
typedef int ( * PSYM_ENUMMODULES_CALLBACK)(char *,unsigned long,void *);
typedef struct tagDEVNAMES * LPDEVNAMES;
typedef struct tagEXTLOGFONTA * PEXTLOGFONT;
typedef struct _wireSAFEARR_UNKNOWN SAFEARR_UNKNOWN;
typedef struct IDispatch * LPDISPATCH;
typedef struct tagJOYCAPS2W * PJOYCAPS2W;
typedef struct _SCONTEXT_QUEUE * PSCONTEXT_QUEUE;
typedef struct tagWNDCLASSEXW WNDCLASSEXW;
typedef struct _CERT_POLICY_QUALIFIER_INFO CERT_POLICY_QUALIFIER_INFO;
typedef struct _CERTIFICATE_BLOB * PEFS_CERTIFICATE_BLOB;
typedef struct IOleClientSite * LPOLECLIENTSITE;
typedef struct SCARD_T0_COMMAND * LPSCARD_T0_COMMAND;
typedef enum tagTYMED TYMED;
typedef char * va_list;
typedef struct tagMETAHEADER METAHEADER;
typedef void ( * WINEVENTPROC)(struct HWINEVENTHOOK__ *,unsigned long,struct HWND__ *,long,long,unsigned long,unsigned long);
typedef struct _LOTTO_LOG_DATA_ * LPLOTTO_LOG_DATA;
typedef struct tagVS_FIXEDFILEINFO VS_FIXEDFILEINFO;
typedef long OFF;
typedef struct _DATATYPES_INFO_1A * PDATATYPES_INFO_1;
typedef struct _EXCEPTION_POINTERS * LPEXCEPTION_POINTERS;
typedef struct _DOCINFOW * LPDOCINFOW;
typedef struct _s_FuncInfo FuncInfo;
typedef struct _userHPALETTE userHPALETTE;
typedef struct _MODULE_TYPE_INFO MODULE_TYPE_INFO;
typedef struct tagBLOB * LPBLOB;
typedef struct tagEMRINVERTRGN EMRINVERTRGN;
typedef short HALF_PTR;
typedef struct tagWINDOWPOS * LPWINDOWPOS;
typedef struct _CRYPT_PASSWORD_CREDENTIALSW * PCRYPT_PASSWORD_CREDENTIALSW;
typedef struct tagBITMAPINFOHEADER * PBITMAPINFOHEADER;
typedef struct tagMCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMS;
typedef struct _NAME_BUFFER NAME_BUFFER;
typedef struct tagMCI_ANIM_OPEN_PARMSA * PMCI_ANIM_OPEN_PARMS;
typedef struct _IMAGEHLP_SYMBOL64 IMAGEHLP_SYMBOL64;
typedef struct _WSAServiceClassInfoA WSASERVICECLASSINFOA;
typedef struct tagCBT_CREATEWNDA * LPCBT_CREATEWNDA;
typedef struct _PROVIDOR_INFO_1A * PPROVIDOR_INFO_1;
typedef unsigned long RVA;
typedef struct _BIDI_REQUEST_DATA * PBIDI_REQUEST_DATA;
typedef struct _CERT_STORE_PROV_INFO * PCERT_STORE_PROV_INFO;
typedef struct _FILE_PREFETCH FILE_PREFETCH;
typedef struct tagPOLYTEXTW * PPOLYTEXTW;
typedef int ( * _CRT_ALLOC_HOOK)(int,void *,unsigned int,int,long,unsigned char *,int);
typedef struct _IMAGEHLP_SYMBOL64_PACKAGE IMAGEHLP_SYMBOL64_PACKAGE;
typedef struct _SOURCEFILE SOURCEFILE;
typedef struct tagSOUNDSENTRYA * LPSOUNDSENTRY;
typedef struct HACCEL__ * HACCEL;
typedef struct tagICEXYZTRIPLE * LPCIEXYZTRIPLE;
typedef struct IWinInetHttpInfo * LPWININETHTTPINFO;
typedef struct _PROPSHEETHEADERW * LPPROPSHEETHEADERW;
typedef struct tagSOUNDSENTRYA SOUNDSENTRYA;
typedef struct tagSIZE * LPSIZE;
typedef struct _CERT_PHYSICAL_STORE_INFO CERT_PHYSICAL_STORE_INFO;
typedef struct tagNEWTEXTMETRICEXA NEWTEXTMETRICEX;
typedef unsigned int ( * LPFNPSPCALLBACKW)(struct HWND__ *,unsigned int,struct _PROPSHEETPAGEW *);
typedef struct _PROPSHEETPAGEW PROPSHEETPAGEW;
typedef void ( * CS_TYPE_FROM_NETCS_ROUTINE)(void *,unsigned long,unsigned char *,unsigned long,unsigned long,void *,unsigned long *,unsigned long *);
typedef struct _PORT_INFO_1A * PPORT_INFO_1;
typedef struct _MINIDUMP_EXCEPTION_INFORMATION MINIDUMP_EXCEPTION_INFORMATION;
typedef char _TCHAR;
typedef struct tagLOGFONTA * NPLOGFONTA;
typedef struct _RPC_SECURITY_QOS_V2_W * PRPC_SECURITY_QOS_V2_W;
typedef struct tagLOGFONTA * LPLOGFONTA;
typedef struct _LDT_ENTRY * LPLDT_ENTRY;
typedef struct tagMIXERCONTROLA * LPMIXERCONTROL;
typedef void * handle_t;
typedef struct _OSVERSIONINFOEXW OSVERSIONINFOEXW;
typedef struct WINTRUST_BLOB_INFO_ * PWINTRUST_BLOB_INFO;
typedef char * PTCHAR;
typedef struct tagCURSORINFO CURSORINFO;
typedef struct tagABORTPATH * PEMRBEGINPATH;
typedef struct _MINIDUMP_CALLBACK_OUTPUT MINIDUMP_CALLBACK_OUTPUT;
typedef struct tagABORTPATH * PEMRFLATTENPATH;
typedef struct _LUID_AND_ATTRIBUTES[1] LUID_AND_ATTRIBUTES_ARRAY;
typedef struct _GDI_NONREMOTE GDI_NONREMOTE;
typedef struct tagMCI_ANIM_OPEN_PARMSW * PMCI_ANIM_OPEN_PARMSW;
typedef struct _CERT_CRL_CONTEXT_PAIR * PCERT_CRL_CONTEXT_PAIR;
typedef struct tagAUXCAPSA * LPAUXCAPS;
typedef struct ITypeLib * LPTYPELIB;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct tagAUXCAPSA * NPAUXCAPS;
typedef struct tagEMRELLIPSE EMRRECTANGLE;
typedef struct tagENUMLOGFONTA ENUMLOGFONT;
typedef struct IViewObject2 * LPVIEWOBJECT2;
typedef struct _TRANSMIT_FILE_BUFFERS * PTRANSMIT_FILE_BUFFERS;
typedef struct _IMAGE_TLS_DIRECTORY64 * PIMAGE_TLS_DIRECTORY64;
typedef struct _QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUSA;
typedef struct tagABORTPATH * PEMRWIDENPATH;
typedef struct _PRINTER_INFO_3 * LPPRINTER_INFO_3;
typedef struct _CERT_KEY_CONTEXT * PCERT_KEY_CONTEXT;
typedef struct tagEMROFFSETCLIPRGN EMROFFSETCLIPRGN;
typedef struct _PRINTER_INFO_9A * PPRINTER_INFO_9A;
typedef struct _PROVIDOR_INFO_1W * PPROVIDOR_INFO_1W;
typedef int ( * PIMAGEHLP_STATUS_ROUTINE)(enum _IMAGEHLP_STATUS_REASON,char *,char *,unsigned long,unsigned long);
typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;
typedef struct _IMAGE_SYMBOL * PIMAGE_SYMBOL;
typedef struct _WIN32_FIND_DATAW * LPWIN32_FIND_DATAW;
typedef struct tagMCI_ANIM_OPEN_PARMSA * PMCI_ANIM_OPEN_PARMSA;
typedef struct _READ_ELEMENT_ADDRESS_INFO * PREAD_ELEMENT_ADDRESS_INFO;
typedef struct _MENU_EVENT_RECORD MENU_EVENT_RECORD;
typedef struct _MINIDUMP_CALLBACK_INPUT MINIDUMP_CALLBACK_INPUT;
typedef struct _CMC_ADD_ATTRIBUTES_INFO * PCMC_ADD_ATTRIBUTES_INFO;
typedef void ( * PRPC_RUNDOWN)(void *);
typedef struct _PROVIDOR_INFO_1A * PPROVIDOR_INFO_1A;
typedef struct IViewObject * LPVIEWOBJECT;
typedef struct tagMCI_ANIM_PLAY_PARMS * LPMCI_ANIM_PLAY_PARMS;
typedef struct _CERT_POLICY95_QUALIFIER1 * PCERT_POLICY95_QUALIFIER1;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY * _PIMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _CRYPT_OBJID_TABLE CRYPT_OBJID_TABLE;
typedef void ( * RTL_VERIFIER_DLL_UNLOAD_CALLBACK)(unsigned short *,void *,unsigned long,void *);
typedef struct POWER_ACTION_POLICY * PPOWER_ACTION_POLICY;
typedef struct tagMIXERCONTROLW * LPMIXERCONTROLW;
typedef struct tagSIZE * LPSIZEL;
typedef struct _CERT_CHAIN_POLICY_PARA * PCERT_CHAIN_POLICY_PARA;
typedef struct _PORT_INFO_1W * PPORT_INFO_1W;
typedef struct _userHENHMETAFILE userHENHMETAFILE;
typedef enum tagSYSKIND SYSKIND;
typedef struct _PROCESSOR_POWER_POLICY_INFO * PPROCESSOR_POWER_POLICY_INFO;
typedef struct tagAUXCAPSA AUXCAPSA;
typedef struct _CMC_DATA_INFO CMC_DATA_INFO;
typedef struct tagEMRINVERTRGN * PEMRINVERTRGN;
typedef struct _PRINTER_INFO_8A * PPRINTER_INFO_8A;
typedef void ( * NDR_NOTIFY2_ROUTINE)(unsigned char);
typedef struct _IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY32;
typedef int ( * PSYMBOLSERVERCALLBACKPROC)(unsigned int,unsigned __int64,unsigned __int64);
typedef struct IPersist * LPPERSIST;
typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTW;
typedef struct _WSAQuerySetW * LPWSAQUERYSETW;
typedef struct _PORT_INFO_1A * PPORT_INFO_1A;
typedef struct _GUID * LPCGUID;
typedef struct _TOKEN_SOURCE TOKEN_SOURCE;
typedef struct tagMIXERCONTROLA * LPMIXERCONTROLA;
typedef struct _CRYPT_RC2_CBC_PARAMETERS * PCRYPT_RC2_CBC_PARAMETERS;
typedef struct _BIDI_RESPONSE_DATA * PBIDI_RESPONSE_DATA;
typedef struct tagEMRMASKBLT EMRMASKBLT;
typedef unsigned long * LPCOLORREF;
typedef struct tagMENUBARINFO * LPMENUBARINFO;
typedef struct _IMAGE_DEBUG_INFORMATION * PIMAGE_DEBUG_INFORMATION;
typedef struct _SERVICE_STATUS SERVICE_STATUS;
typedef void ( * MSGBOXCALLBACK)(struct tagHELPINFO *);
typedef struct _DOCINFOW DOCINFOW;
typedef struct IInternetProtocolSinkStackable * LPIINTERNETPROTOCOLSINKStackable;
typedef struct _ADDJOB_INFO_1A ADDJOB_INFO_1;
typedef struct SCARD_READERSTATEA * PSCARD_READERSTATEA;
typedef struct _REPARSE_GUID_DATA_BUFFER * PREPARSE_GUID_DATA_BUFFER;
typedef struct tagMCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMSA;
typedef long FXPT16DOT16;
typedef struct tagMIDIINCAPS2A * LPMIDIINCAPS2;
typedef struct tagMIDIINCAPS2A * NPMIDIINCAPS2;
typedef void DispatcherContext;
typedef struct tagWINDOWPOS * PWINDOWPOS;
typedef struct SCARD_READERSTATEW * PSCARD_READERSTATEW;
typedef struct tMIXERCONTROLDETAILS MIXERCONTROLDETAILS;
typedef unsigned char byte;
typedef struct _PRINTER_ENUM_VALUESW PRINTER_ENUM_VALUESW;
typedef struct tagWINDOWPOS WINDOWPOS;
typedef struct SHELLHOOKINFO * LPSHELLHOOKINFO;
typedef struct _UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFOA;
typedef struct _CMSG_RECIPIENT_ENCODE_INFO CMSG_RECIPIENT_ENCODE_INFO;
typedef unsigned int ( * LPPAGEPAINTHOOK)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct tagMIDIINCAPSA * NPMIDIINCAPS;
typedef int ( * PFNPROPSHEETCALLBACK)(struct HWND__ *,unsigned int,long);
typedef enum _GET_FILEEX_INFO_LEVELS GET_FILEEX_INFO_LEVELS;
typedef struct tagMIDIINCAPSA * LPMIDIINCAPS;
typedef struct _CRYPT_KEY_PROV_PARAM * PCRYPT_KEY_PROV_PARAM;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION * PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct _PROCESSOR_POWER_POLICY_INFO PROCESSOR_POWER_POLICY_INFO;
typedef struct tagMCI_VD_ESCAPE_PARMSA * LPMCI_VD_ESCAPE_PARMS;
typedef struct _RTL_CRITICAL_SECTION * PRTL_CRITICAL_SECTION;
typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS * PCHANGER_INITIALIZE_ELEMENT_STATUS;
typedef struct tagDRAWTEXTPARAMS * LPDRAWTEXTPARAMS;
typedef struct _WIN_TRUST_SUBJECT_FILE * LPWIN_TRUST_SUBJECT_FILE;
typedef struct HMIXER__ * * LPHMIXER;
typedef struct tagARRAYDESC ARRAYDESC;
typedef struct tagIMEMENUITEMINFOA IMEMENUITEMINFO;
typedef struct HPEN__ * HPEN;
typedef struct _IMAGE_BASE_RELOCATION * PIMAGE_BASE_RELOCATION;
typedef int ( * PSYMBOLSERVERCLOSEPROC)();
typedef struct IMessageFilter * LPMESSAGEFILTER;
typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO CRYPT_TIME_STAMP_REQUEST_INFO;
typedef struct _CRYPT_X942_OTHER_INFO CRYPT_X942_OTHER_INFO;
typedef struct _ENCRYPTION_CERTIFICATE_HASH * PENCRYPTION_CERTIFICATE_HASH;
typedef struct _CMC_TAGGED_OTHER_MSG CMC_TAGGED_OTHER_MSG;
typedef struct _ENUM_SERVICE_STATUSW * LPENUM_SERVICE_STATUSW;
typedef struct _CERT_OTHER_NAME * PCERT_OTHER_NAME;
typedef void * PVOID;
typedef unsigned short OLECHAR;
typedef struct tagEMRSETWORLDTRANSFORM EMRSETWORLDTRANSFORM;
typedef struct _SERVICE_STATUS_PROCESS * LPSERVICE_STATUS_PROCESS;
typedef void ( * GENERIC_UNBIND_ROUTINE)(void *,unsigned char *);
typedef struct _CMC_TAGGED_CERT_REQUEST CMC_TAGGED_CERT_REQUEST;
typedef struct _CERT_STORE_PROV_FIND_INFO CCERT_STORE_PROV_FIND_INFO;
typedef struct tagEXTLOGPEN EXTLOGPEN;
typedef struct _FILE_PREFETCH * PFILE_PREFETCH;
typedef struct tagEMREXTESCAPE EMRDRAWESCAPE;
typedef struct _CERT_CHAIN_POLICY_PARA CERT_CHAIN_POLICY_PARA;
typedef struct _userHGLOBAL * wireHGLOBAL;
typedef struct SCARD_READERSTATEA * PSCARD_READERSTATE;
typedef unsigned int UINT32;
typedef struct tagMIDIINCAPSW * LPMIDIINCAPSW;
typedef struct _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;
typedef struct BITMAPV4HEADER * PBITMAPV4HEADER;
typedef struct tagMIDIINCAPSW * NPMIDIINCAPSW;
typedef struct BITMAPV5HEADER * PBITMAPV5HEADER;
typedef int * PINT32;
typedef struct tagWAVEINCAPS2W * NPWAVEINCAPS2W;
typedef struct _FAT_STATISTICS * PFAT_STATISTICS;
typedef struct tagWAVEINCAPS2W * LPWAVEINCAPS2W;
typedef struct _CERT_EXTENSION * PCERT_EXTENSION;
typedef struct _CERT_CREATE_CONTEXT_PARA * PCERT_CREATE_CONTEXT_PARA;
typedef struct _devicemodeA DEVMODE;
typedef struct tagMONERRSTRUCT MONERRSTRUCT;
typedef struct tagBITMAPINFOHEADER * LPBITMAPINFOHEADER;
typedef struct _MINIDUMP_MEMORY64_LIST * PMINIDUMP_MEMORY64_LIST;
typedef struct _CERT_STORE_PROV_FIND_INFO * PCERT_STORE_PROV_FIND_INFO;
typedef struct tagEMRTRANSPARENTBLT EMRTRANSPARENTBLT;
typedef struct _STARTUPINFOA STARTUPINFOA;
typedef struct IMonikerProp * LPMONIKERPROP;
typedef int ( * EDITWORDBREAKPROC)(char *,int,int,int);
typedef unsigned int BITVEC;
typedef int ( * ENHMFENUMPROC)(struct HDC__ *,struct tagHANDLETABLE *,struct tagENHMETARECORD *,int,long);
typedef unsigned long MCIERROR;
typedef struct tagEMRSELECTCLIPPATH * PEMRSETICMMODE;
typedef struct tagMIDIINCAPSA * NPMIDIINCAPSA;
typedef struct _CRYPTOAPI_BLOB * PCRYPT_UINT_BLOB;
typedef struct _AFPROTOCOLS * PAFPROTOCOLS;
typedef struct tagEMREXTCREATEFONTINDIRECTW EMREXTCREATEFONTINDIRECTW;
typedef struct tagMIDIINCAPSA * LPMIDIINCAPSA;
typedef struct _CRL_REVOCATION_INFO * PCRL_REVOCATION_INFO;
typedef struct _VIDEOPARAMETERS * LPVIDEOPARAMETERS;
typedef struct _WSANETWORKEVENTS WSANETWORKEVENTS;
typedef struct _PUBLICKEYSTRUC PUBLICKEYSTRUC;
typedef struct _CMC_DATA_INFO * PCMC_DATA_INFO;
typedef struct _WSANETWORKEVENTS * LPWSANETWORKEVENTS;
typedef struct _CRYPT_OID_FUNC_ENTRY * PCRYPT_OID_FUNC_ENTRY;
typedef struct _MODULEINFO * LPMODULEINFO;
typedef int ( * MFENUMPROC)(struct HDC__ *,struct tagHANDLETABLE *,struct tagMETARECORD *,int,long);
typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA CERT_SYSTEM_STORE_RELOCATE_PARA;
typedef unsigned short * LPCUWSTR;
typedef struct tagCWPSTRUCT * PCWPSTRUCT;
typedef struct tagCBTACTIVATESTRUCT CBTACTIVATESTRUCT;
typedef char * LPCUTSTR;
typedef struct _RTL_CRITICAL_SECTION_DEBUG * PRTL_RESOURCE_DEBUG;
typedef struct tagEMRSTRETCHBLT EMRSTRETCHBLT;
typedef struct ITypeChangeEvents * LPTYPECHANGEEVENTS;
typedef struct tagBITMAPINFO BITMAPINFO;
typedef struct midiproptimediv_tag * LPMIDIPROPTIMEDIV;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETWINDOWORGEX;
typedef struct _PERF_COUNTER_DEFINITION * PPERF_COUNTER_DEFINITION;
typedef struct tagEMRPOLYLINE16 * PEMRPOLYGON16;
typedef struct _LIST_ENTRY LIST_ENTRY;
typedef struct _CERT_POLICIES_INFO CERT_POLICIES_INFO;
typedef enum tagDISCARDCACHE DISCARDCACHE;
typedef unsigned long SERVICETYPE;
typedef void ( * LINEDDAPROC)(int,int,long);
typedef struct tagABORTPATH EMRBEGINPATH;
typedef struct _RPC_SECURITY_QOS * PRPC_SECURITY_QOS;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW * PMIXERCONTROLDETAILS_LISTTEXTW;
typedef struct _CONNECTDLGSTRUCTW * LPCONNECTDLGSTRUCTW;
typedef struct tagFONTSIGNATURE * PFONTSIGNATURE;
typedef struct tagSIZE SIZEL;
typedef struct tagICONMETRICSW ICONMETRICSW;
typedef struct _DATATYPES_INFO_1A * PDATATYPES_INFO_1A;
typedef struct _ADAPTER_STATUS ADAPTER_STATUS;
typedef struct _PRINTER_INFO_2A * LPPRINTER_INFO_2A;
typedef struct tagMCI_GENERIC_PARMS * LPMCI_GENERIC_PARMS;
typedef struct _CRYPT_PROVIDER_DEFUSAGE * PCRYPT_PROVIDER_DEFUSAGE;
typedef struct _CERT_NAME_INFO CERT_NAME_INFO;
typedef struct DRVCONFIGINFOEX * PDRVCONFIGINFOEX;
typedef int ( * DATEFMT_ENUMPROCA)(char *);
typedef int ( * PENUMDIRTREE_CALLBACK)(char *,void *);
typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W RPC_HTTP_TRANSPORT_CREDENTIALS_W;
typedef struct IBindHost * LPBINDHOST;
typedef enum _TOKEN_TYPE * PTOKEN_TYPE;
typedef void ( * USER_MARSHAL_FREEING_ROUTINE)(unsigned long *,void *);
typedef struct _PRIVKEYVER3 DSSPRIVKEY_VER3;
typedef struct _IMAGE_DOS_HEADER IMAGE_DOS_HEADER;
typedef struct _ACCESS_ALLOWED_ACE * PACCESS_ALLOWED_ACE;
typedef struct _CONNECTDLGSTRUCTA * LPCONNECTDLGSTRUCTA;
typedef int ( * DATEFMT_ENUMPROCW)(unsigned short *);
typedef struct tagCOMPAREITEMSTRUCT * PCOMPAREITEMSTRUCT;
typedef struct _WIN32_FILE_ATTRIBUTE_DATA WIN32_FILE_ATTRIBUTE_DATA;
typedef struct tagRGLOCINFO RGLOCINFO;
typedef struct _PRINTER_INFO_2W * LPPRINTER_INFO_2W;
typedef struct _SPC_FINANCIAL_CRITERIA SPC_FINANCIAL_CRITERIA;
typedef struct OPENCARDNAMEA * LPOPENCARDNAME;
typedef struct _TAPE_GET_MEDIA_PARAMETERS TAPE_GET_MEDIA_PARAMETERS;
typedef struct _PRINTER_INFO_2A * PPRINTER_INFO_2A;
typedef unsigned short * LPCWCH;
typedef unsigned short PROPVAR_PAD1;
typedef struct tagJOYCAPSA JOYCAPS;
typedef struct tagLAYERPLANEDESCRIPTOR * PLAYERPLANEDESCRIPTOR;
typedef struct _CHANGER_ELEMENT_STATUS CHANGER_ELEMENT_STATUS;
typedef struct _CRYPT_ATTRIBUTE CRYPT_ATTRIBUTE;
typedef struct _tagSTACKFRAME STACKFRAME;
typedef struct tagEntryEnd * PENTRYEND;
typedef struct tagSOUNDSENTRYA * LPSOUNDSENTRYA;
typedef struct pvalueA PVALUEA;
typedef unsigned long (QUERYHANDLER)(void *,struct val_context *,unsigned long,void *,unsigned long *,unsigned long);
typedef long DISPID;
typedef struct _RPC_SECURITY_QOS_V3_W * PRPC_SECURITY_QOS_V3_W;
typedef long ( * RPC_NEW_HTTP_PROXY_CHANNEL)(unsigned short *,unsigned short *,unsigned char *,unsigned short * *);
typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR RTL_VERIFIER_THUNK_DESCRIPTOR;
typedef struct pvalueW PVALUEW;
typedef struct _IMAGE_NT_HEADERS * ( * ImageNtHeaderProc)(void *);
typedef unsigned char * PUCHAR;
typedef struct _tagRemBINDINFO RemBINDINFO;
typedef struct protoent PROTOENT;
typedef struct tagLOGFONTA * NPLOGFONT;
typedef struct _ACCESS_DENIED_CALLBACK_ACE ACCESS_DENIED_CALLBACK_ACE;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT EMRCREATEDIBPATTERNBRUSHPT;
typedef struct tagLOGFONTA * LPLOGFONT;
typedef struct _QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUS;
typedef struct _CHANGER_ELEMENT_STATUS_EX * PCHANGER_ELEMENT_STATUS_EX;
typedef struct tagEXTLOGPEN * LPEXTLOGPEN;
typedef struct _SECURITY_ATTRIBUTES * LPSECURITY_ATTRIBUTES;
typedef struct tagEXTLOGPEN * NPEXTLOGPEN;
typedef unsigned __int64 DWORDLONG;
typedef struct _PRINTER_INFO_1A * PPRINTER_INFO_1A;
typedef struct tagSIZE SIZE;
typedef struct _tagPROTOCOLFILTERDATA PROTOCOLFILTERDATA;
typedef int ( * PFN_CMSG_STREAM_OUTPUT)(void *,unsigned char *,unsigned long,int);
typedef struct OPENCARDNAMEW * LPOPENCARDNAMEW;
typedef int ( * PFN_CERT_STORE_PROV_SET_CRL_PROPERTY)(void *,struct _CRL_CONTEXT *,unsigned long,unsigned long,void *);
typedef struct _PRINTER_INFO_2A * LPPRINTER_INFO_2;
typedef struct tagAUXCAPSA * LPAUXCAPSA;
typedef struct _CRL_DIST_POINT CRL_DIST_POINT;
typedef struct _CRL_DIST_POINT_NAME * PCRL_DIST_POINT_NAME;
typedef int ( * LOCALE_ENUMPROCA)(char *);
typedef struct _WSABUF * LPWSABUF;
typedef struct tagAUXCAPSA * NPAUXCAPSA;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT * PEMRCREATEDIBPATTERNBRUSHPT;
typedef struct _PUBKEY DSSPUBKEY;
typedef struct _LDT_ENTRY LDT_ENTRY;
typedef struct _ImageArchitectureEntry * PIMAGE_ARCHITECTURE_ENTRY;
typedef struct tagEMRSELECTCLIPPATH EMRSETROP2;
typedef struct tagACCESSTIMEOUT ACCESSTIMEOUT;
typedef struct _CERT_CONTEXT * PCCERT_CONTEXT;
typedef class std::basic_istream<unsigned short,std::char_traits<unsigned short> > wistream;
typedef struct _CONNECTDLGSTRUCTA * LPCONNECTDLGSTRUCT;
typedef struct tagSTGMEDIUM uSTGMEDIUM;
typedef struct _FORMAT_EX_PARAMETERS FORMAT_EX_PARAMETERS;
typedef struct _CERT_ALT_NAME_ENTRY CERT_ALT_NAME_ENTRY;
typedef struct _CMSG_SIGNED_ENCODE_INFO CMSG_SIGNED_ENCODE_INFO;
typedef struct _ACL_SIZE_INFORMATION * PACL_SIZE_INFORMATION;
typedef struct _REMSECURITY_ATTRIBUTES REMSECURITY_ATTRIBUTES;
typedef struct _FIXED FIXED;
typedef struct servent SERVENT;
typedef struct OPENCARDNAMEA * LPOPENCARDNAMEA;
typedef int ( * PSYM_ENUMSOURCFILES_CALLBACK)(struct _SOURCEFILE *,void *);
typedef struct _SERVICE_DESCRIPTIONW SERVICE_DESCRIPTIONW;
typedef int ( * PFN_CERT_STORE_PROV_GET_CRL_PROPERTY)(void *,struct _CRL_CONTEXT *,unsigned long,unsigned long,void *,unsigned long *);
typedef struct tagMIXERCAPS2A * PMIXERCAPS2A;
typedef struct _CERT_KEYGEN_REQUEST_INFO CERT_KEYGEN_REQUEST_INFO;
typedef struct _CERT_USAGE_MATCH * PCERT_USAGE_MATCH;
typedef struct _CERT_PRIVATE_KEY_VALIDITY CERT_PRIVATE_KEY_VALIDITY;
typedef struct _AFPROTOCOLS * LPAFPROTOCOLS;
typedef struct _nlsversioninfo NLSVERSIONINFO;
typedef struct _IMAGE_DOS_HEADER * PIMAGE_DOS_HEADER;
typedef long LPARAM;
typedef struct _ADDJOB_INFO_1A * LPADDJOB_INFO_1A;
typedef struct tagEMRFILLPATH EMRSTROKEANDFILLPATH;
typedef struct _PREVENT_MEDIA_REMOVAL PREVENT_MEDIA_REMOVAL;
typedef enum _HEAP_INFORMATION_CLASS HEAP_INFORMATION_CLASS;
typedef struct _MIDL_SYNTAX_INFO MIDL_SYNTAX_INFO;
typedef void * LPCVOID;
typedef struct _OBJECTID OBJECTID;
typedef struct _userBITMAP userBITMAP;
typedef struct _CRYPTOAPI_BLOB CRYPT_UINT_BLOB;
typedef unsigned long ( * PQUERYHANDLER)(void *,struct val_context *,unsigned long,void *,unsigned long *,unsigned long);
typedef struct pvalueA PVALUE;
typedef struct pvalueA * PPVALUEA;
typedef unsigned short * PWCH;
typedef struct _ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESS;
typedef struct tagELEMDESC * LPELEMDESC;
typedef int * LPINT;
typedef struct _SYSTEMTIME * LPSYSTEMTIME;
typedef struct _IMAGEHLP_CBA_EVENT IMAGEHLP_CBA_EVENT;
typedef struct tagDEVNAMES DEVNAMES;
typedef struct tagPAINTSTRUCT * NPPAINTSTRUCT;
typedef class std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > wstreambuf;
typedef struct tMIXERCONTROLDETAILS_UNSIGNED * PMIXERCONTROLDETAILS_UNSIGNED;
typedef struct tagPAINTSTRUCT * LPPAINTSTRUCT;
typedef struct _DOC_INFO_3A * PDOC_INFO_3;
typedef struct _DOC_INFO_2A * PDOC_INFO_2;
typedef void * ( * PFN_CMSG_ALLOC)(unsigned int);
typedef struct _DOC_INFO_1A * PDOC_INFO_1;
typedef enum __MIDL_ICodeInstall_0001 CIP_STATUS;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE SECURITY_DESCRIPTOR_RELATIVE;
typedef unsigned int WPARAM;
typedef struct tagPOLYTEXTW * LPPOLYTEXTW;
typedef struct _PRINTER_INFO_7A * PPRINTER_INFO_7A;
typedef struct tagPOLYTEXTW * NPPOLYTEXTW;
typedef struct _OSVERSIONINFOA * LPOSVERSIONINFOA;
typedef struct SYSTEM_POWER_CAPABILITIES * PSYSTEM_POWER_CAPABILITIES;
typedef int INT32;
typedef struct tagMIDIINCAPS2A * LPMIDIINCAPS2A;
typedef struct tagMCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMS;
typedef struct _userHBITMAP userHBITMAP;
typedef struct tagMIDIINCAPS2A * NPMIDIINCAPS2A;
typedef struct _KDHELP * PKDHELP;
typedef struct tagWAVEINCAPSW * PWAVEINCAPSW;
typedef struct joyinfoex_tag JOYINFOEX;
typedef struct _TOKEN_OWNER TOKEN_OWNER;
typedef struct _TOKEN_USER TOKEN_USER;
typedef struct tagWAVEOUTCAPS2W * PWAVEOUTCAPS2W;
typedef struct _s_HandlerType HandlerType;
typedef struct ISurrogate * LPSURROGATE;
typedef struct _ADDJOB_INFO_1A ADDJOB_INFO_1A;
typedef struct tagBIND_OPTS2 BIND_OPTS2;
typedef struct _MODLOAD_DATA MODLOAD_DATA;
typedef struct tagMCI_BREAK_PARMS MCI_BREAK_PARMS;
typedef struct _NETCONNECTINFOSTRUCT * LPNETCONNECTINFOSTRUCT;
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO * PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
typedef struct tagMCI_OVLY_SAVE_PARMSA * PMCI_OVLY_SAVE_PARMS;
typedef unsigned long GEOCLASS;
typedef struct tagPOLYTEXTA * NPPOLYTEXTA;
typedef int ( * LPCONDITIONPROC)(struct _WSABUF *,struct _WSABUF *,struct _QualityOfService *,struct _QualityOfService *,struct _WSABUF *,struct _WSABUF *,unsigned int *,unsigned long);
typedef struct tagPOLYTEXTA * LPPOLYTEXTA;
typedef struct tagMIXERCAPSA * LPMIXERCAPSA;
typedef struct tagEMRSETTEXTCOLOR * PEMRSETBKCOLOR;
typedef struct _SCOPETABLE_ENTRY * PSCOPETABLE_ENTRY;
typedef struct _CRYPT_KEY_PROV_PARAM CRYPT_KEY_PROV_PARAM;
typedef struct _LOAD_DLL_DEBUG_INFO * LPLOAD_DLL_DEBUG_INFO;
typedef struct _MMCKINFO MMCKINFO;
typedef struct tagMIXERLINECONTROLSA * LPMIXERLINECONTROLSA;
typedef struct value_entA * PVALENTA;
typedef struct tagMCI_SYSINFO_PARMSA * PMCI_SYSINFO_PARMSA;
typedef struct tagEMRARC * PEMRPIE;
typedef struct _MONITOR_INFO_1W * LPMONITOR_INFO_1W;
typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA * LPWIN_SPUB_TRUSTED_PUBLISHER_DATA;
typedef struct tagPROPVARIANT PROPVARIANT;
typedef struct tagEMRSETDIBITSTODEVICE EMRSETDIBITSTODEVICE;
typedef struct _RTL_CRITICAL_SECTION_DEBUG CRITICAL_SECTION_DEBUG;
typedef struct _SHELLEXECUTEINFOW * LPSHELLEXECUTEINFOW;
typedef struct tagEMREXTCREATEPEN EMREXTCREATEPEN;
typedef unsigned int MMVERSION;
typedef struct _PROPSHEETHEADERW PROPSHEETHEADERW;
typedef enum tagVARFLAGS VARFLAGS;
typedef struct tagRGBQUAD * LPRGBQUAD;
typedef struct tagPDEXA PRINTDLGEXA;
typedef struct pcmwaveformat_tag * PPCMWAVEFORMAT;
typedef struct tagMCI_VD_ESCAPE_PARMSA * LPMCI_VD_ESCAPE_PARMSA;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct tagICEXYZTRIPLE CIEXYZTRIPLE;
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA * PCERT_CHAIN_FIND_ISSUER_PARA;
typedef struct _MONITOR_INFO_1A * LPMONITOR_INFO_1A;
typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA * PCRYPT_KEY_VERIFY_MESSAGE_PARA;
typedef struct tagMCI_SYSINFO_PARMSW * PMCI_SYSINFO_PARMSW;
typedef struct tagEMREXCLUDECLIPRECT EMREXCLUDECLIPRECT;
typedef struct tagCAUL CAUL;
typedef struct tagIMECHARPOSITION * NPIMECHARPOSITION;
typedef struct _DRAWPATRECT DRAWPATRECT;
typedef struct _CMC_TAGGED_ATTRIBUTE CMC_TAGGED_ATTRIBUTE;
typedef struct tagPDEXW PRINTDLGEXW;
typedef struct _CERT_CHAIN_PARA CERT_CHAIN_PARA;
typedef struct tagSCROLLBARINFO * LPSCROLLBARINFO;
typedef struct tagIMECHARPOSITION * LPIMECHARPOSITION;
typedef void ( * CS_TYPE_NET_SIZE_ROUTINE)(void *,unsigned long,unsigned long,enum _IDL_CS_CONVERT *,unsigned long *,unsigned long *);
typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE * PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;
typedef struct _MENU_EVENT_RECORD * PMENU_EVENT_RECORD;
typedef struct _SHELLEXECUTEINFOA * LPSHELLEXECUTEINFOA;
typedef struct _PSINJECTDATA PSINJECTDATA;
typedef struct IRecordInfo * LPRECORDINFO;
typedef struct _PRINTER_INFO_5A * PPRINTER_INFO_5A;
typedef struct _PERF_COUNTER_BLOCK PERF_COUNTER_BLOCK;
typedef struct tagMCI_OVLY_SAVE_PARMSW * PMCI_OVLY_SAVE_PARMSW;
typedef struct _MMCKINFO * NPMMCKINFO;
typedef struct _WINTRUST_DATA WINTRUST_DATA;
typedef struct _IMAGEHLP_MODULE64W * PIMAGEHLP_MODULEW64;
typedef struct _MMCKINFO * LPMMCKINFO;
typedef int ( * DESKTOPENUMPROC)(char *,long);
typedef struct _PROPSHEETPAGEW_V3 * LPCPROPSHEETPAGEW_LATEST;
typedef struct _MALLOC_FREE_STRUCT MALLOC_FREE_STRUCT;
typedef struct tagEMRNAMEDESCAPE EMRNAMEDESCAPE;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION * PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef int ( * NEARPROC)();
typedef int ( * PDBCloseProc)(struct PDB *);
typedef struct _CAT_MEMBERINFO * PCAT_MEMBERINFO;
typedef unsigned char * PBOOLEAN;
typedef struct tagSTATPROPSTG STATPROPSTG;
typedef struct tagRECT * LPCBORDERWIDTHS;
typedef struct _EXCEPTION_RECORD64 * PEXCEPTION_RECORD64;
typedef struct tagPOLYTEXTA * NPPOLYTEXT;
typedef unsigned long SCARDCONTEXT;
typedef struct tagMCI_OVLY_OPEN_PARMSW MCI_OVLY_OPEN_PARMSW;
typedef enum tagOLECLOSE OLECLOSE;
typedef struct tagDIBSECTION * LPDIBSECTION;
typedef struct tagMCI_OVLY_SAVE_PARMSA * PMCI_OVLY_SAVE_PARMSA;
typedef struct tagPOLYTEXTA * LPPOLYTEXT;
typedef struct _DISK_LOGGING * PDISK_LOGGING;
typedef struct _CERT_POLICY_CONSTRAINTS_INFO CERT_POLICY_CONSTRAINTS_INFO;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct tagPOINTFX * LPPOINTFX;
typedef struct _HMAC_Info * PHMAC_INFO;
typedef struct _IMAGE_FUNCTION_ENTRY IMAGE_FUNCTION_ENTRY;
typedef struct _PROPSHEETPAGEA_V3 * LPCPROPSHEETPAGEA_LATEST;
typedef struct _wireSAFEARR_VARIANT SAFEARR_VARIANT;
typedef int ( * EDITWORDBREAKPROCA)(char *,int,int,int);
typedef struct tagCWPSTRUCT * NPCWPSTRUCT;
typedef void * SC_LOCK;
typedef struct tagCWPSTRUCT * LPCWPSTRUCT;
typedef struct tagICONMETRICSW * LPICONMETRICSW;
typedef struct tagDRVCONFIGINFO * PDRVCONFIGINFO;
typedef struct _PRINTER_INFO_4A * PPRINTER_INFO_4A;
typedef struct _CERT_REVOCATION_INFO * PCERT_REVOCATION_INFO;
typedef struct _CHANGER_ELEMENT * PCHANGER_ELEMENT;
typedef struct tagMCI_SYSINFO_PARMSA * PMCI_SYSINFO_PARMS;
typedef struct tagEMRPIXELFORMAT EMRPIXELFORMAT;
typedef struct IEnumSTATPROPSTG * LPENUMSTATPROPSTG;
typedef void ( * RPCLT_PDU_FILTER_FUNC)(void *,unsigned int,int);
typedef struct tagLOGPEN * PLOGPEN;
typedef struct _MINIDUMP_MODULE_CALLBACK * PMINIDUMP_MODULE_CALLBACK;
typedef struct _QUOTA_LIMITS QUOTA_LIMITS;
typedef struct tagBLOB BLOB;
typedef struct tagPDEXA PRINTDLGEX;
typedef struct _IMAGE_THUNK_DATA32 * PIMAGE_THUNK_DATA32;
typedef struct _MESSAGE_RESOURCE_BLOCK * PMESSAGE_RESOURCE_BLOCK;
typedef struct _GRADIENT_RECT * PGRADIENT_RECT;
typedef enum _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;
typedef struct IDataFilter * LPDATAFILTER;
typedef struct IInternetPriority * LPIINTERNETPRIORITY;
typedef struct _MONITOR_INFO_1A * LPMONITOR_INFO_1;
typedef struct tagACCESSTIMEOUT * LPACCESSTIMEOUT;
typedef struct _RemotableHandle * wireHFONT;
typedef enum tagSTGMOVE STGMOVE;
typedef struct _CMSG_SIGNER_INFO * PCMSG_SIGNER_INFO;
typedef struct tagEMRPOLYLINE16 * PEMRPOLYBEZIERTO16;
typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO * PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
typedef unsigned int * LPUINT;
typedef struct _SHELLEXECUTEINFOA * LPSHELLEXECUTEINFO;
typedef struct tagMCI_ANIM_RECT_PARMS * LPMCI_ANIM_RECT_PARMS;
typedef enum tagMEMCTX MEMCTX;
typedef struct _DEBUG_EVENT DEBUG_EVENT;
typedef __int64 LONGLONG;
typedef struct _DOCINFOA * LPDOCINFOA;
typedef int ( * DRAWSTATEPROC)(struct HDC__ *,long,unsigned int,int,int);
typedef struct _MMCKINFO * LPCMMCKINFO;
typedef class std::basic_string<char,std::char_traits<char>,std::allocator<char> > string;
typedef struct tagEMRPOLYLINE16 * PEMRPOLYBEZIER16;
typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;
typedef struct _MINIDUMP_MEMORY_LIST * PMINIDUMP_MEMORY_LIST;
typedef struct _CRYPT_PRIVATE_KEY_INFO CRYPT_PRIVATE_KEY_INFO;
typedef struct _TOKEN_GROUPS_AND_PRIVILEGES * PTOKEN_GROUPS_AND_PRIVILEGES;
typedef struct _OFNOTIFYEXW OFNOTIFYEXW;
typedef struct _PRINTER_INFO_5A * LPPRINTER_INFO_5A;
typedef struct _CRYPT_DECODE_PARA * PCRYPT_DECODE_PARA;
typedef struct tagMCI_SEQ_SET_PARMS * PMCI_SEQ_SET_PARMS;
typedef struct _CTL_ANY_SUBJECT_INFO * PCTL_ANY_SUBJECT_INFO;
typedef int ( * ModQueryLinesProc)(struct Mod *,unsigned char *,long *);
typedef struct IInternetProtocolRoot * LPIINTERNETPROTOCOLROOT;
typedef struct tagMENUINFO MENUINFO;
typedef struct tagMSGBOXPARAMSA * LPMSGBOXPARAMSA;
typedef unsigned char * PTBYTE;
typedef struct HMIDI__ * * LPHMIDI;
typedef struct _INPUT_RECORD INPUT_RECORD;
typedef struct _CERT_RDN_ATTR CERT_RDN_ATTR;
typedef struct _MINIDUMP_THREAD_EX_LIST MINIDUMP_THREAD_EX_LIST;
typedef struct _CRYPT_PASSWORD_CREDENTIALSA * PCRYPT_PASSWORD_CREDENTIALSA;
typedef struct sockaddr * LPSOCKADDR;
typedef struct _wireSAFEARR_BSTR SAFEARR_BSTR;
typedef unsigned short * PARAM_OFFSETTABLE;
typedef struct tagMCI_RECORD_PARMS MCI_RECORD_PARMS;
typedef struct IInternetProtocolSink * LPIINTERNETPROTOCOLSINK;
typedef int ( * PFN_CMSG_EXPORT_KEY_AGREE)(struct _CMSG_CONTENT_ENCRYPT_INFO *,struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO *,struct _CMSG_KEY_AGREE_ENCRYPT_INFO *,unsigned long,void *);
typedef struct _WSAServiceClassInfoW WSASERVICECLASSINFOW;
typedef enum tagDOMNodeType DOMNodeType;
typedef struct _TAPE_GET_POSITION * PTAPE_GET_POSITION;
typedef unsigned int ( * LPFNDEVMODE)(struct HWND__ *,struct HINSTANCE__ *,struct _devicemodeA *,char *,char *,struct _devicemodeA *,char *,unsigned int);
typedef struct tagMSGBOXPARAMSW * LPMSGBOXPARAMSW;
typedef struct _RPC_SYNTAX_IDENTIFIER * PRPC_SYNTAX_IDENTIFIER;
typedef struct tagCBT_CREATEWNDW * LPCBT_CREATEWNDW;
typedef int ( * PFN_EXPORT_PRIV_KEY_FUNC)(unsigned long,unsigned long,char *,unsigned long,void *,struct _CRYPT_PRIVATE_KEY_INFO *,unsigned long *);
typedef struct tagFUNCDESC * LPFUNCDESC;
typedef struct _PSP * HPROPSHEETPAGE;
typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION * PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
typedef struct _PRINTER_INFO_5W * LPPRINTER_INFO_5W;
typedef struct tagPOLYTEXTA * PPOLYTEXTA;
typedef struct tagHANDLETABLE * PHANDLETABLE;
typedef struct _OFNOTIFYEXA OFNOTIFYEXA;
typedef struct tagLOGPEN * NPLOGPEN;
typedef struct tagEMRSETVIEWPORTEXTEX EMRSETVIEWPORTEXTEX;
typedef struct tagLOGPEN * LPLOGPEN;
typedef enum _MODULE_WRITE_FLAGS MODULE_WRITE_FLAGS;
typedef struct _wireSAFEARR_BRECORD SAFEARR_BRECORD;
typedef struct _userSTGMEDIUM userSTGMEDIUM;
typedef struct _BIDI_REQUEST_DATA BIDI_REQUEST_DATA;
typedef struct tagDEBUGHOOKINFO DEBUGHOOKINFO;
typedef struct _PROPSHEETHEADERA * LPPROPSHEETHEADERA;
typedef struct _CERT_NAME_CONSTRAINTS_INFO CERT_NAME_CONSTRAINTS_INFO;
typedef int ( * WNDENUMPROC)(struct HWND__ *,long);
typedef struct _FORM_INFO_1A * PFORM_INFO_1;
typedef struct tagSOUNDSENTRYW SOUNDSENTRYW;
typedef struct tagUSEROBJECTFLAGS USEROBJECTFLAGS;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER * PIMAGE_SEPARATE_DEBUG_HEADER;
typedef enum tagTYSPEC TYSPEC;
typedef struct HWAVEIN__ * HWAVEIN;
typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA CERT_REGISTRY_STORE_ROAMING_PARA;
typedef int ( * PFN_CERT_STORE_PROV_WRITE_CERT)(void *,struct _CERT_CONTEXT *,unsigned long);
typedef unsigned int ( * LPFNPSPCALLBACKA)(struct HWND__ *,unsigned int,struct _PROPSHEETPAGEA *);
typedef struct tagSTICKYKEYS * LPSTICKYKEYS;
typedef struct tagLOCALESIGNATURE LOCALESIGNATURE;
typedef struct _PROPSHEETPAGEA PROPSHEETPAGEA;
typedef struct _FILETIME FILETIME;
typedef struct _MODEMDEVCAPS MODEMDEVCAPS;
typedef struct tagLOGFONTW * LPLOGFONTW;
typedef struct _HTTPSPolicyCallbackData * PSSL_EXTRA_CERT_CHAIN_POLICY_PARA;
typedef struct tagLOGFONTA * PLOGFONT;
typedef struct _OSVERSIONINFOEXA OSVERSIONINFOEXA;
typedef struct tagLOGFONTW * NPLOGFONTW;
typedef struct _CERT_REQUEST_INFO * PCERT_REQUEST_INFO;
typedef struct _RPC_SECURITY_QOS_V2_A * PRPC_SECURITY_QOS_V2_A;
typedef struct _REMOTE_NAME_INFOA REMOTE_NAME_INFO;
typedef struct _CERT_STORE_PROV_INFO CERT_STORE_PROV_INFO;
typedef struct tagEMRSETWORLDTRANSFORM * PEMRSETWORLDTRANSFORM;
typedef struct _CTL_FIND_SUBJECT_PARA * PCTL_FIND_SUBJECT_PARA;
typedef struct _CRYPT_OID_INFO CCRYPT_OID_INFO;
typedef struct tagOIFI OLEINPLACEFRAMEINFO;
typedef long ( * RPC_BLOCKING_FN)(void *,void *,void *);
typedef struct _ACCESS_ALLOWED_OBJECT_ACE ACCESS_ALLOWED_OBJECT_ACE;
typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO * PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
typedef int ( * PCRYPT_RESOLVE_HCRYPTPROV_FUNC)(struct _CRYPT_PRIVATE_KEY_INFO *,unsigned long *,void *);
typedef struct tagPROPSPEC PROPSPEC;
typedef struct _PRINTER_INFO_5A * LPPRINTER_INFO_5;
typedef struct _QUERY_SERVICE_LOCK_STATUSW QUERY_SERVICE_LOCK_STATUSW;
typedef struct _IMAGE_TLS_DIRECTORY32 * PIMAGE_TLS_DIRECTORY32;
typedef struct _PRINTER_INFO_9W * PPRINTER_INFO_9W;
typedef struct _ACL_SIZE_INFORMATION ACL_SIZE_INFORMATION;
typedef struct _OSVERSIONINFOEXW * PRTL_OSVERSIONINFOEXW;
typedef struct tagCUSTDATAITEM CUSTDATAITEM;
typedef struct tagMSGBOXPARAMSA * LPMSGBOXPARAMS;
typedef struct _CERTIFICATE_BLOB EFS_CERTIFICATE_BLOB;
typedef __int64 * PLONGLONG;
typedef struct tagMEASUREITEMSTRUCT * PMEASUREITEMSTRUCT;
typedef struct _COMMPROP COMMPROP;
typedef struct _WIN32_FIND_DATAA * LPWIN32_FIND_DATAA;
typedef struct _CRYPT_OID_INFO * PCRYPT_OID_INFO;
typedef struct _CAT_MEMBERINFO CAT_MEMBERINFO;
typedef struct tWAVEFORMATEX * NPWAVEFORMATEX;
typedef struct tagNMHDR NMHDR;
typedef unsigned __int64 ULONGLONG;
typedef struct tWAVEFORMATEX * LPWAVEFORMATEX;
typedef struct _BIN_RANGE BIN_RANGE;
typedef struct _AppBarData * PAPPBARDATA;
typedef void ( * _purecall_handler)();
typedef struct _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;
typedef struct tagEMRPOLYLINE EMRPOLYBEZIERTO;
typedef struct _FILESYSTEM_STATISTICS * PFILESYSTEM_STATISTICS;
typedef struct _LANA_ENUM LANA_ENUM;
typedef struct _CERT_POLICY_INFO CERT_POLICY_INFO;
typedef struct _SID_AND_ATTRIBUTES[1] * PSID_AND_ATTRIBUTES_ARRAY;
typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT;
typedef struct _CRYPT_PROVIDER_DEFUSAGE CRYPT_PROVIDER_DEFUSAGE;
typedef struct _OFNOTIFYEXA OFNOTIFYEX;
typedef struct _SPC_SP_AGENCY_INFO * PSPC_SP_AGENCY_INFO;
typedef __int64 _Longlong;
typedef int ( * CALINFO_ENUMPROCA)(char *);
typedef struct tagEVENTMSG * NPEVENTMSG;
typedef struct tagMSG * PMSG;
typedef struct _GUID * LPIID;
typedef struct tagLOGFONTW * PLOGFONTW;
typedef struct tagCACY CACY;
typedef struct tagEVENTMSG * LPEVENTMSG;
typedef int streamsize;
typedef struct _RemotableHandle * wireHACCEL;
typedef struct HMIDIIN__ * * LPHMIDIIN;
typedef struct _FORM_INFO_1A * PFORM_INFO_1A;
typedef struct _IMAGEHLP_STACK_FRAME IMAGEHLP_STACK_FRAME;
typedef struct IBindStatusCallback * LPBINDSTATUSCALLBACK;
typedef struct HMIDI__ * HMIDI;
typedef struct tagAUXCAPSW AUXCAPSW;
typedef unsigned long HANDLE_PTR;
typedef struct _REMOTE_NAME_INFOW REMOTE_NAME_INFOW;
typedef struct _CHANGER_SET_ACCESS * PCHANGER_SET_ACCESS;
typedef struct tagMCI_ANIM_STEP_PARMS * LPMCI_ANIM_STEP_PARMS;
typedef struct _OUTPUT_DEBUG_STRING_INFO OUTPUT_DEBUG_STRING_INFO;
typedef char * LPCH;
typedef class std::fpos<int> wstreampos;
typedef struct _PRINTER_INFO_8W * PPRINTER_INFO_8W;
typedef HRESULT ( * PFN_PROVIDER_INIT_CALL)(struct _CRYPT_PROVIDER_DATA *);
typedef struct _CMC_TAGGED_ATTRIBUTE * PCMC_TAGGED_ATTRIBUTE;
typedef struct _CRL_DIST_POINTS_INFO * PCRL_DIST_POINTS_INFO;
typedef struct _WINDOW_BUFFER_SIZE_RECORD * PWINDOW_BUFFER_SIZE_RECORD;
typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTA;
typedef struct _WSAQuerySetA * LPWSAQUERYSETA;
typedef struct tagLOGFONTA * PLOGFONTA;
typedef struct _PREVENT_MEDIA_REMOVAL * PPREVENT_MEDIA_REMOVAL;
typedef struct tagEMRSELECTCLIPPATH * PEMRSETSTRETCHBLTMODE;
typedef int ( * CALINFO_ENUMPROCW)(unsigned short *);
typedef void * * PHDEVNOTIFY;
typedef int ( * DIGEST_FUNCTION)(void *,unsigned char *,unsigned long);
typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO * PCMSG_KEY_AGREE_ENCRYPT_INFO;
typedef struct _REMOTE_NAME_INFOA REMOTE_NAME_INFOA;
typedef struct tagSIZE * PSIZE;
typedef struct _s__ThrowInfo _ThrowInfo;
typedef struct _IMAGEHLP_SYMBOL_SRC * PIMAGEHLP_SYMBOL_SRC;
typedef unsigned long SECURITY_INFORMATION;
typedef struct _FORM_INFO_1W * PFORM_INFO_1W;
typedef struct tagWAVEOUTCAPS2A * PWAVEOUTCAPS2;
typedef struct tagEXCEPTION_VISUALCPP_DEBUG_INFO EXCEPTION_VISUALCPP_DEBUG_INFO;
typedef enum tagURLTEMPLATE URLTEMPLATE;
typedef struct tagCOLORADJUSTMENT COLORADJUSTMENT;
typedef void * HGLOBAL;
typedef struct IDropSource * LPDROPSOURCE;
typedef struct _CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALSA;
typedef void * * LPHANDLE;
typedef unsigned int dev_t;
typedef struct _DOCINFOA DOCINFOA;
typedef struct _userCLIPFORMAT userCLIPFORMAT;
typedef struct _KEY_EVENT_RECORD KEY_EVENT_RECORD;
typedef struct tagFONTSIGNATURE * LPFONTSIGNATURE;
typedef void * HCRYPTDEFAULTCONTEXT;
typedef struct tagMCI_VD_ESCAPE_PARMSW MCI_VD_ESCAPE_PARMSW;
typedef struct tagVARIANT VARIANTARG;
typedef struct _IMAGE_IMPORT_DESCRIPTOR * PIMAGE_IMPORT_DESCRIPTOR;
typedef struct _CMS_KEY_INFO CMS_KEY_INFO;
typedef unsigned short wint_t;
typedef struct _JOB_INFO_1W JOB_INFO_1W;
typedef struct tagEMRARC * PEMRARCTO;
typedef struct tagWAVEOUTCAPSA * PWAVEOUTCAPS;
typedef struct _CMC_TAGGED_CONTENT_INFO * PCMC_TAGGED_CONTENT_INFO;
typedef struct _PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUESA;
typedef struct _SHCREATEPROCESSINFOW * PSHCREATEPROCESSINFOW;
typedef struct _CRYPT_PASSWORD_CREDENTIALSW CRYPT_PASSWORD_CREDENTIALSW;
typedef struct _FULL_PTR_TO_REFID_ELEMENT * PFULL_PTR_TO_REFID_ELEMENT;
typedef struct tagDRVCONFIGINFO * LPDRVCONFIGINFO;
typedef struct tagLOGBRUSH32 LOGBRUSH32;
typedef struct _JOB_INFO_1A JOB_INFO_1A;
typedef struct tagEXTLOGFONTA * LPEXTLOGFONT;
typedef struct tagDRVCONFIGINFO * NPDRVCONFIGINFO;
typedef struct _UNIVERSAL_NAME_INFOW UNIVERSAL_NAME_INFOW;
typedef struct _CREATE_PROCESS_DEBUG_INFO * LPCREATE_PROCESS_DEBUG_INFO;
typedef void * * SPHANDLE;
typedef struct tagEXTLOGFONTA * NPEXTLOGFONT;
typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR;
typedef unsigned long (PM_CLOSE_PROC)();
typedef struct _DOC_INFO_1W DOC_INFO_1W;
typedef union _FILE_SEGMENT_ELEMENT FILE_SEGMENT_ELEMENT;
typedef struct _OSVERSIONINFOW * PRTL_OSVERSIONINFOW;
typedef struct tagOLEVERB OLEVERB;
typedef struct _CRYPTOAPI_BLOB * PCERT_BLOB;
typedef struct tagEMRSELECTOBJECT * PEMRDELETEOBJECT;
typedef void ( * RPC_DISPATCH_FUNCTION)(struct _RPC_MESSAGE *);
typedef struct _FILE_NOTIFY_INFORMATION * PFILE_NOTIFY_INFORMATION;
typedef struct IWinInetInfo * LPWININETINFO;
typedef struct _SHFILEOPSTRUCTW * LPSHFILEOPSTRUCTW;
typedef void * PVOID64;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_IA64_RUNTIME_FUNCTION_ENTRY;
typedef struct _ZONEATTRIBUTES ZONEATTRIBUTES;
typedef struct _OUTLINETEXTMETRICA * POUTLINETEXTMETRIC;
typedef struct tagFORMATETC FORMATETC;
typedef struct tagEXCEPINFO * LPEXCEPINFO;
typedef struct _ENUM_SERVICE_STATUSA * LPENUM_SERVICE_STATUSA;
typedef struct _DOC_INFO_1A DOC_INFO_1A;
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS * PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;
typedef struct _HMAC_Info HMAC_INFO;
typedef void ( * TIMERPROC)(struct HWND__ *,unsigned int,unsigned int,unsigned long);
typedef struct LIST_ENTRY64 * PLIST_ENTRY64;
typedef struct _SHFILEOPSTRUCTA * LPSHFILEOPSTRUCTA;
typedef struct _CTL_ANY_SUBJECT_INFO CTL_ANY_SUBJECT_INFO;
typedef struct OPENCARD_SEARCH_CRITERIAA * LPOPENCARD_SEARCH_CRITERIA;
typedef struct tagEMREXTCREATEPEN * PEMREXTCREATEPEN;
typedef struct tagEMRCREATEPALETTE * PEMRCREATEPALETTE;
typedef struct _SCARD_IO_REQUEST SCARD_IO_REQUEST;
typedef int ( * PREAD_PROCESS_MEMORY_ROUTINE)(void *,unsigned long,void *,unsigned long,unsigned long *);
typedef struct _CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALS;
typedef struct tagWAVEOUTCAPSW * PWAVEOUTCAPSW;
typedef struct _s_UnwindMapEntry UnwindMapEntry;
typedef union tagBINDPTR BINDPTR;
typedef struct tagEVENTMSG EVENTMSG;
typedef struct tagMOUSEHOOKSTRUCT MOUSEHOOKSTRUCT;
typedef __int64 * PINT64;
typedef long ( * RegQueryValueExAProc)(struct HKEY__ *,char *,unsigned long *,unsigned long *,unsigned char *,unsigned long *);
typedef unsigned __int64 UINT64;
typedef struct tagEXTLOGFONTW * NPEXTLOGFONTW;
typedef struct tagWAVEINCAPS2A * LPWAVEINCAPS2A;
typedef struct IMultiQI * LPMULTIQI;
typedef int ( * PFN_PROVUI_CALL)(struct HWND__ *,struct _CRYPT_PROVIDER_DATA *);
typedef int ( * PFNPROCESSPOLICIESA)(struct HWND__ *,char *,char *,char *,unsigned long);
typedef struct tagEXTLOGFONTW * LPEXTLOGFONTW;
typedef struct tagWAVEINCAPS2A * NPWAVEINCAPS2A;
typedef struct _TAPE_GET_MEDIA_PARAMETERS * PTAPE_GET_MEDIA_PARAMETERS;
typedef struct _CRYPTOAPI_BLOB CRYPT_HASH_BLOB;
typedef struct tagEMRARC EMRARCTO;
typedef struct tagWAVEOUTCAPSA * PWAVEOUTCAPSA;
typedef struct tagNMHDR * LPNMHDR;
typedef struct tagEMRFILLPATH EMRFILLPATH;
typedef struct tagWINDOWINFO * LPWINDOWINFO;
typedef struct _SPC_STATEMENT_TYPE * PSPC_STATEMENT_TYPE;
typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST * PENCRYPTION_CERTIFICATE_HASH_LIST;
typedef struct _STARTUPINFOW STARTUPINFOW;
typedef struct _CERT_CHAIN_ENGINE_CONFIG CERT_CHAIN_ENGINE_CONFIG;
typedef struct _JOB_INFO_1A JOB_INFO_1;
typedef struct tagEXTLOGFONTA * LPEXTLOGFONTA;
typedef struct tagNEWTEXTMETRICA * LPNEWTEXTMETRIC;
typedef struct tagEXTLOGFONTA * NPEXTLOGFONTA;
typedef struct tagNEWTEXTMETRICA * NPNEWTEXTMETRIC;
typedef int ( * PFNPROCESSPOLICIESW)(struct HWND__ *,unsigned short *,unsigned short *,unsigned short *,unsigned long);
typedef struct joyinfo_tag * LPJOYINFO;
typedef struct _MIDL_STUB_DESC MIDL_STUB_DESC;
typedef struct _IMAGEHLP_CBA_READ_MEMORY * PIMAGEHLP_CBA_READ_MEMORY;
typedef struct joyinfo_tag * NPJOYINFO;
typedef struct IErrorInfo * LPERRORINFO;
typedef struct _IMAGEHLP_MODULEW IMAGEHLP_MODULEW;
typedef struct _CONSOLE_SCREEN_BUFFER_INFO * PCONSOLE_SCREEN_BUFFER_INFO;
typedef struct _CRYPTOAPI_BLOB CRYPT_INTEGER_BLOB;
typedef struct _BIDI_REQUEST_DATA * LPBIDI_REQUEST_DATA;
typedef struct _EVENTLOG_FULL_INFORMATION EVENTLOG_FULL_INFORMATION;
typedef struct _MINIDUMP_STRING MINIDUMP_STRING;
typedef struct _OUTLINETEXTMETRICW * POUTLINETEXTMETRICW;
typedef enum _USER_MARSHAL_CB_TYPE USER_MARSHAL_CB_TYPE;
typedef struct _SCARD_IO_REQUEST * LPSCARD_IO_REQUEST;
typedef struct tagICONMETRICSA * LPICONMETRICS;
typedef struct in_addr IN_ADDR;
typedef struct _OFSTRUCT * LPOFSTRUCT;
typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA * PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
typedef struct OPENCARD_SEARCH_CRITERIAW * LPOPENCARD_SEARCH_CRITERIAW;
typedef struct _MINIDUMP_HANDLE_DATA_STREAM MINIDUMP_HANDLE_DATA_STREAM;
typedef unsigned short ATOM;
typedef struct _OUTLINETEXTMETRICA * POUTLINETEXTMETRICA;
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS * PCRYPT_PKCS8_IMPORT_PARAMS;
typedef struct _TRIVERTEX TRIVERTEX;
typedef struct tagABORTPATH EMRSETMETARGN;
typedef struct _DOC_INFO_1A DOC_INFO_1;
typedef struct _CSADDR_INFO * PCSADDR_INFO;
typedef struct _SHFILEOPSTRUCTA * LPSHFILEOPSTRUCT;
typedef struct OPENCARD_SEARCH_CRITERIAA * LPOPENCARD_SEARCH_CRITERIAA;
typedef struct _BIDI_DATA BIDI_DATA;
typedef struct tagPARAMDESCEX PARAMDESCEX;
typedef struct tagEMRCREATEMONOBRUSH * PEMRCREATEMONOBRUSH;
typedef struct tagEMRCREATECOLORSPACE EMRCREATECOLORSPACE;
typedef struct _CMSG_RECIPIENT_ENCODE_INFO * PCMSG_RECIPIENT_ENCODE_INFO;
typedef struct threadmbcinfostruct * pthreadmbcinfo;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA * PMIXERCONTROLDETAILS_LISTTEXTA;
typedef long ( * LPMMIOPROC)(char *,unsigned int,long,long);
typedef struct tagMOUSEMOVEPOINT MOUSEMOVEPOINT;
typedef struct _CRYPT_SMIME_CAPABILITY * PCRYPT_SMIME_CAPABILITY;
typedef struct tagDEBUGHOOKINFO * LPDEBUGHOOKINFO;
typedef struct _CRYPT_ENCODE_PARA * PCRYPT_ENCODE_PARA;
typedef struct tagCAI CAI;
typedef struct tagCAH CAH;
typedef struct tagDEBUGHOOKINFO * NPDEBUGHOOKINFO;
typedef unsigned int ( * LPSETUPHOOKPROC)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct tagICONMETRICSA ICONMETRICSA;
typedef struct tagCAL CAL;
typedef struct tMIXERCONTROLDETAILS_SIGNED * LPMIXERCONTROLDETAILS_SIGNED;
typedef struct tagCAC CAC;
typedef struct _DOCINFOA * LPDOCINFO;
typedef struct tagMSGBOXPARAMSA MSGBOXPARAMSA;
typedef struct _EFS_RPC_BLOB * PEFS_RPC_BLOB;
typedef struct tagABORTPATH EMRREALIZEPALETTE;
typedef struct _DATATYPES_INFO_1W DATATYPES_INFO_1W;
typedef struct _PRINTER_INFO_4A * LPPRINTER_INFO_4A;
typedef struct _MINIDUMP_UNLOADED_MODULE * PMINIDUMP_UNLOADED_MODULE;
typedef struct HDROP__ * HDROP;
typedef struct _NOTIFYICONDATAA * PNOTIFYICONDATA;
typedef struct _DATATYPES_INFO_1W * PDATATYPES_INFO_1W;
typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA * PCERT_SYSTEM_STORE_RELOCATE_PARA;
typedef struct _OFSTRUCT OFSTRUCT;
typedef struct _FIND_NAME_BUFFER FIND_NAME_BUFFER;
typedef struct tagMCI_OPEN_PARMSA * LPMCI_OPEN_PARMS;
typedef struct _ENCRYPTION_CERTIFICATE_LIST ENCRYPTION_CERTIFICATE_LIST;
typedef int ( * PFN_CERT_STORE_PROV_DELETE_CTL)(void *,struct _CTL_CONTEXT *,unsigned long);
typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A RPC_HTTP_TRANSPORT_CREDENTIALS_A;
typedef struct tagPALETTEENTRY * LPPALETTEENTRY;
typedef struct tagPOLYTEXTA * PPOLYTEXT;
typedef struct _BINARY_CONTAINER BINARY_CONTAINER;
typedef struct _CERT_CRL_CONTEXT_PAIR * PCCERT_CRL_CONTEXT_PAIR;
typedef int ( * PFN_CERT_STORE_PROV_DELETE_CRL)(void *,struct _CRL_CONTEXT *,unsigned long);
typedef struct mmtime_tag * NPMMTIME;
typedef struct mmtime_tag * LPMMTIME;
typedef struct _TAPE_STATISTICS * PTAPE_STATISTICS;
typedef struct _PUBKEYVER3 DHPUBKEY_VER3;
typedef struct _DATATYPES_INFO_1A DATATYPES_INFO_1A;
typedef struct _PRINTER_INFO_4W * LPPRINTER_INFO_4W;
typedef struct _LDT_ENTRY * PLDT_ENTRY;
typedef struct tagMSGBOXPARAMSW MSGBOXPARAMSW;
typedef struct _CRYPT_VERIFY_MESSAGE_PARA CRYPT_VERIFY_MESSAGE_PARA;
typedef struct tagENHMETAHEADER * PENHMETAHEADER;
typedef struct tagNCCALCSIZE_PARAMS * LPNCCALCSIZE_PARAMS;
typedef struct _GENERIC_BINDING_ROUTINE_PAIR * PGENERIC_BINDING_ROUTINE_PAIR;
typedef struct _POINTFLOAT * PPOINTFLOAT;
typedef struct _PRINTER_INFO_2W * PPRINTER_INFO_2W;
typedef struct BATTERY_REPORTING_SCALE * PBATTERY_REPORTING_SCALE;
typedef struct tagEMRELLIPSE * PEMRELLIPSE;
typedef struct tagSOUNDSENTRYW * LPSOUNDSENTRYW;
typedef struct _TRIVERTEX * LPTRIVERTEX;
typedef struct _CRYPT_SMIME_CAPABILITY CRYPT_SMIME_CAPABILITY;
typedef struct _CRYPTOAPI_BLOB * PDATA_BLOB;
typedef struct _MMCKINFO * PMMCKINFO;
typedef struct _RPC_SECURITY_QOS_V3_A * PRPC_SECURITY_QOS_V3_A;
typedef unsigned long * LPSCARDHANDLE;
typedef struct _MEMORYSTATUSEX MEMORYSTATUSEX;
typedef long * PSCODE;
typedef struct tagEMRSETMAPPERFLAGS EMRSETMAPPERFLAGS;
typedef struct _CERT_X942_DH_VALIDATION_PARAMS CERT_X942_DH_VALIDATION_PARAMS;
typedef void ( * APC_CALLBACK_FUNCTION)(unsigned long,void *,void *);
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX ACTIVATION_CONTEXT_QUERY_INDEX;
typedef struct _CHANGER_EXCHANGE_MEDIUM CHANGER_EXCHANGE_MEDIUM;
typedef short * PSHORT;
typedef unsigned short WORD;
typedef struct _TAPE_PREPARE * PTAPE_PREPARE;
typedef struct _PRINTER_INFO_1W * PPRINTER_INFO_1W;
typedef unsigned short USHORT;
typedef struct tagCOMPAREITEMSTRUCT COMPAREITEMSTRUCT;
typedef struct tagMCI_OPEN_PARMSW * LPMCI_OPEN_PARMSW;
typedef enum _EXCEPTION_DISPOSITION EXCEPTION_DISPOSITION;
typedef struct _STORAGE_PREDICT_FAILURE STORAGE_PREDICT_FAILURE;
typedef struct tagHSZPAIR HSZPAIR;
typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO * PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
typedef struct tagMSGBOXPARAMSA MSGBOXPARAMS;
typedef struct _EXIT_PROCESS_DEBUG_INFO EXIT_PROCESS_DEBUG_INFO;
typedef struct _WSACOMPLETION WSACOMPLETION;
typedef int ( * PFN_CERT_STORE_PROV_SET_CTL_PROPERTY)(void *,struct _CTL_CONTEXT *,unsigned long,unsigned long,void *);
typedef struct _PRINTER_INFO_4A * LPPRINTER_INFO_4;
typedef struct _MINIDUMP_INCLUDE_THREAD_CALLBACK MINIDUMP_INCLUDE_THREAD_CALLBACK;
typedef int ( * LOCALE_ENUMPROCW)(unsigned short *);
typedef struct tagAUXCAPSW * NPAUXCAPSW;
typedef struct tagQUERYCONTEXT QUERYCONTEXT;
typedef struct _userHMETAFILEPICT userHMETAFILEPICT;
typedef struct _OUTPUT_DEBUG_STRING_INFO * LPOUTPUT_DEBUG_STRING_INFO;
typedef struct tagAUXCAPSW * LPAUXCAPSW;
typedef struct _RPC_MESSAGE * PRPC_MESSAGE;
typedef struct tagDRAWITEMSTRUCT * PDRAWITEMSTRUCT;
typedef struct tagMCI_OPEN_PARMSA * LPMCI_OPEN_PARMSA;
typedef struct tagMCI_ANIM_UPDATE_PARMS * LPMCI_ANIM_UPDATE_PARMS;
typedef struct _s_ESTypeList ESTypeList;
typedef struct _PROVDATA_SIP * PPROVDATA_SIP;
typedef struct OPENCARDNAME_EXA OPENCARDNAME_EX;
typedef unsigned short FSHORT;
typedef class std::basic_ostream<unsigned short,std::char_traits<unsigned short> > wostream;
typedef enum tagMSHCTX MSHCTX;
typedef struct _WIN32_FIND_DATAA * LPWIN32_FIND_DATA;
typedef struct in_addr * PIN_ADDR;
typedef struct tagDELETEITEMSTRUCT * PDELETEITEMSTRUCT;
typedef struct _CERT_LDAP_STORE_OPENED_PARA CERT_LDAP_STORE_OPENED_PARA;
typedef struct _SERVICE_DESCRIPTIONA SERVICE_DESCRIPTIONA;
typedef struct tagMIXERCAPS2W * PMIXERCAPS2W;
typedef struct _DATATYPES_INFO_1A DATATYPES_INFO_1;
typedef struct _ACCESS_DENIED_OBJECT_ACE ACCESS_DENIED_OBJECT_ACE;
typedef int ( * PFN_CERT_STORE_PROV_GET_CTL_PROPERTY)(void *,struct _CTL_CONTEXT *,unsigned long,unsigned long,void *,unsigned long *);
typedef struct _RPC_BINDING_VECTOR RPC_BINDING_VECTOR;
typedef struct tagWINDOWPLACEMENT * PWINDOWPLACEMENT;
typedef struct tagEMRMODIFYWORLDTRANSFORM EMRMODIFYWORLDTRANSFORM;
typedef long ( * SERVER_ROUTINE)();
typedef struct _SYSTEM_AUDIT_OBJECT_ACE SYSTEM_AUDIT_OBJECT_ACE;
typedef struct _ADDJOB_INFO_1W * LPADDJOB_INFO_1W;
typedef struct tagEMRSETCOLORADJUSTMENT * PEMRSETCOLORADJUSTMENT;
typedef struct pvalueW * PPVALUEW;
typedef struct _NETRESOURCEA NETRESOURCE;
typedef struct tagMCI_PLAY_PARMS MCI_PLAY_PARMS;
typedef union tagCY * LPCY;
typedef struct _RTL_CRITICAL_SECTION_DEBUG * PRTL_CRITICAL_SECTION_DEBUG;
typedef struct servent * PSERVENT;
typedef struct _CERT_POLICY_CONSTRAINTS_INFO * PCERT_POLICY_CONSTRAINTS_INFO;
typedef struct WINTRUST_CERT_INFO_ WINTRUST_CERT_INFO;
typedef struct tagRECONVERTSTRING * NPRECONVERTSTRING;
typedef struct _TOKEN_PRIVILEGES * PTOKEN_PRIVILEGES;
typedef struct tagRECONVERTSTRING * LPRECONVERTSTRING;
typedef void * HCRYPTASYNC;
typedef struct _WSAQuerySetA * LPWSAQUERYSET;
typedef struct _GLYPHMETRICSFLOAT * LPGLYPHMETRICSFLOAT;
typedef struct tagABORTPATH EMRWIDENPATH;
typedef unsigned int * PUINT32;
typedef struct SPC_LINK_ * PSPC_LINK;
typedef struct provider_info * PPROVIDER;
typedef struct tagWAVEINCAPSW * LPWAVEINCAPSW;
typedef struct _OSVERSIONINFOW * LPOSVERSIONINFOW;
typedef struct _FIND_NAME_BUFFER * PFIND_NAME_BUFFER;
typedef struct _CHANGER_ELEMENT_LIST * PCHANGER_ELEMENT_LIST;
typedef struct tagWAVEINCAPSW * NPWAVEINCAPSW;
typedef struct _PRINTER_INFO_7W * PPRINTER_INFO_7W;
typedef struct IAdviseSink2 * LPADVISESINK2;
typedef struct tagMIDIINCAPS2W * NPMIDIINCAPS2W;
typedef struct tagEntry * PENTRY;
typedef int ( * PFN_CERT_STORE_PROV_FREE_FIND_CERT)(void *,struct _CERT_CONTEXT *,void *,unsigned long);
typedef enum tagOLEWHICHMK OLEWHICHMK;
typedef struct tagMIDIINCAPS2W * LPMIDIINCAPS2W;
typedef int ( * PSYM_ENUMSYMBOLS_CALLBACK64W)(unsigned short *,unsigned __int64,unsigned long,void *);
typedef struct _IMAGEHLP_MODULE * PIMAGEHLP_MODULE;
typedef struct _IMAGE_DATA_DIRECTORY * PIMAGE_DATA_DIRECTORY;
typedef enum _SECURITY_IMPERSONATION_LEVEL * PSECURITY_IMPERSONATION_LEVEL;
typedef struct _CERT_FORTEZZA_DATA_PROP CERT_FORTEZZA_DATA_PROP;
typedef struct tagCUSTDATAITEM * LPCUSTDATAITEM;
typedef struct tagWAVEOUTCAPS2A * PWAVEOUTCAPS2A;
typedef struct _CTL_USAGE * PCERT_ENHKEY_USAGE;
typedef struct tagWAVEINCAPSA * PWAVEINCAPSA;
typedef struct _DERBY_MONSTER_INFO_EX_ * LP_DERBY_MONSTER_INFO_EX;
typedef struct _ADDJOB_INFO_1W ADDJOB_INFO_1W;
typedef struct tagMCI_VD_ESCAPE_PARMSA * PMCI_VD_ESCAPE_PARMSA;
typedef long MEMBERID;
typedef struct _NETINFOSTRUCT NETINFOSTRUCT;
typedef struct _CERT_CRL_CONTEXT_PAIR CERT_CRL_CONTEXT_PAIR;
typedef long (RPC_FORWARD_FUNCTION)(struct _GUID *,struct _RPC_VERSION *,struct _GUID *,unsigned char *,void * *);
typedef struct _CRYPTOAPI_BLOB * PCRL_BLOB;
typedef struct tagMCI_GETDEVCAPS_PARMS MCI_GETDEVCAPS_PARMS;
typedef struct tagWAVEINCAPSA * NPWAVEINCAPSA;
typedef struct IAdviseSink * LPADVISESINK;
typedef struct _CHANGER_SET_POSITION * PCHANGER_SET_POSITION;
typedef struct tagWAVEINCAPSA * LPWAVEINCAPSA;
typedef void * LPVOID;
typedef struct WSAData * LPWSADATA;
typedef struct tagEMRSELECTCLIPPATH EMRSETBKMODE;
typedef struct _WSAPROTOCOLCHAIN * LPWSAPROTOCOLCHAIN;
typedef HRESULT ( * PFN_PROVIDER_CERTTRUST_CALL)(struct _CRYPT_PROVIDER_DATA *);
typedef long SHANDLE_PTR;
typedef struct tagMIXERCAPSW * LPMIXERCAPSW;
typedef struct tagMCI_VD_ESCAPE_PARMSW * PMCI_VD_ESCAPE_PARMSW;
typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
typedef struct tagMCI_LOAD_PARMSA * PMCI_LOAD_PARMS;
typedef long off_t;
typedef struct _CRYPT_X942_OTHER_INFO * PCRYPT_X942_OTHER_INFO;
typedef struct HMIDIOUT__ * HMIDIOUT;
typedef struct _cpinfo * LPCPINFO;
typedef struct value_entW * PVALENTW;
typedef struct FrameInfo FRAMEINFO;
typedef struct tagMENUITEMINFOA MENUITEMINFO;
typedef unsigned short * LPWORD;
typedef struct tagEMREXTTEXTOUTA * PEMREXTTEXTOUTA;
typedef struct _EVENTLOG_FULL_INFORMATION * LPEVENTLOG_FULL_INFORMATION;
typedef struct _CRYPT_OID_INFO CRYPT_OID_INFO;
typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;
typedef struct tagMIXERLINECONTROLSW * LPMIXERLINECONTROLSW;
typedef struct _COORD * PCOORD;
typedef struct _RPC_POLICY RPC_POLICY;
typedef struct tagEMRSELECTOBJECT * PEMRSELECTOBJECT;
typedef struct _WSAPROTOCOL_INFOW WSAPROTOCOL_INFOW;
typedef struct tagCUSTDATA * LPCUSTDATA;
typedef struct tagMENUITEMINFOA * LPMENUITEMINFOA;
typedef struct _CERT_CREATE_CONTEXT_PARA CERT_CREATE_CONTEXT_PARA;
typedef struct provider_info REG_PROVIDER;
typedef struct _PRINTER_NOTIFY_OPTIONS * PPRINTER_NOTIFY_OPTIONS;
typedef struct _USER_MARSHAL_CB USER_MARSHAL_CB;
typedef struct ITypeComp * LPTYPECOMP;
typedef struct _WSACOMPLETION * LPWSACOMPLETION;
typedef struct tagMCI_VD_ESCAPE_PARMSW * LPMCI_VD_ESCAPE_PARMSW;
typedef struct _MINIDUMP_MEMORY_DESCRIPTOR64 * PMINIDUMP_MEMORY_DESCRIPTOR64;
typedef struct _PROPSHEETHEADERA PROPSHEETHEADERA;
typedef enum _tagQUERYOPTION QUERYOPTION;
typedef struct tagEMRFILLPATH * PEMRFILLPATH;
typedef struct tagMENUITEMINFOW * LPMENUITEMINFOW;
typedef struct _s__RTTIBaseClassDescriptor __RTTIBaseClassDescriptor;
typedef struct HFONT__ * HFONT;
typedef struct _WSAPROTOCOL_INFOA WSAPROTOCOL_INFOA;
typedef struct tagEMREXTTEXTOUTA * PEMREXTTEXTOUTW;
typedef struct tagEMREOF * PEMREOF;
typedef struct tagLC_ID LC_ID;
typedef struct _SYSTEM_POWER_STATUS SYSTEM_POWER_STATUS;
typedef struct _ACTION_HEADER ACTION_HEADER;
typedef struct tagMCI_ANIM_UPDATE_PARMS MCI_ANIM_UPDATE_PARMS;
typedef struct _BIN_RESULTS BIN_RESULTS;
typedef unsigned __int64 ( * PGET_MODULE_BASE_ROUTINE64)(void *,unsigned __int64);
typedef int ( * PFN_INIT_CRITSEC_AND_SPIN_COUNT)(struct _RTL_CRITICAL_SECTION *,unsigned long);
typedef struct ICreateTypeLib2 * LPCREATETYPELIB2;
typedef struct _ENUM_SERVICE_STATUSA * LPENUM_SERVICE_STATUS;
typedef struct _CERT_NAME_VALUE CERT_NAME_VALUE;
typedef struct tagEMRPOLYPOLYLINE * PEMRPOLYPOLYGON;
typedef struct _PRINTER_INFO_5W * PPRINTER_INFO_5W;
typedef long LONG;
typedef struct tagWAVEINCAPS2A * LPWAVEINCAPS2;
typedef long * LPLONG;
typedef struct _EXCEPTION_RECORD * PEXCEPTION_RECORD;
typedef struct _JOB_SET_ARRAY JOB_SET_ARRAY;
typedef struct tagWAVEINCAPS2A * NPWAVEINCAPS2;
typedef struct tagMENUINFO * LPMENUINFO;
typedef unsigned short * PPARAM_OFFSETTABLE;
typedef struct _TAPE_SET_DRIVE_PARAMETERS TAPE_SET_DRIVE_PARAMETERS;
typedef unsigned long CALID;
typedef struct _TAPE_WRITE_MARKS TAPE_WRITE_MARKS;
typedef struct tagMCI_VD_ESCAPE_PARMSA * PMCI_VD_ESCAPE_PARMS;
typedef struct tagFONTSIGNATURE FONTSIGNATURE;
typedef struct _MINIDUMP_HEADER MINIDUMP_HEADER;
typedef struct _IMAGEHLP_MODULEW * PIMAGEHLP_MODULEW;
typedef struct _FORM_INFO_1A FORM_INFO_1;
typedef int ( * _PNH)(unsigned int);
typedef int ( * PFN_CERT_DLL_OPEN_STORE_PROV_FUNC)(char *,unsigned long,unsigned long,unsigned long,void *,void *,struct _CERT_STORE_PROV_INFO *);
typedef struct tagWAVEINCAPSA * NPWAVEINCAPS;
typedef struct tagWAVEINCAPSA * LPWAVEINCAPS;
typedef struct tagEMRLINETO * PEMRMOVETOEX;
typedef struct tagMCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMSA;
typedef struct _CHANGER_READ_ELEMENT_STATUS * PCHANGER_READ_ELEMENT_STATUS;
typedef int ( * EDITWORDBREAKPROCW)(unsigned short *,int,int,int);
typedef struct IExternalConnection * LPEXTERNALCONNECTION;
typedef struct _MINIDUMP_MISC_INFO * PMINIDUMP_MISC_INFO;
typedef struct tagCUSTDATA CUSTDATA;
typedef struct tagMENUITEMINFOA MENUITEMINFOA;
typedef struct tagICONMETRICSA * LPICONMETRICSA;
typedef struct _PRINTER_INFO_4W * PPRINTER_INFO_4W;
typedef struct _CONSOLE_FONT_INFO * PCONSOLE_FONT_INFO;
typedef struct _STORAGE_HOTPLUG_INFO STORAGE_HOTPLUG_INFO;
typedef struct _DERBY_MONSTER_INFO_EX_ DERBY_MONSTER_INFO_EX;
typedef struct tagEMRSETVIEWPORTEXTEX * PEMRSETVIEWPORTEXTEX;
typedef struct _CMC_ADD_EXTENSIONS_INFO * PCMC_ADD_EXTENSIONS_INFO;
typedef int ( * PSYMBOL_REGISTERED_CALLBACK64)(void *,unsigned long,unsigned __int64,unsigned __int64);
typedef struct tagMENUITEMINFOA * LPMENUITEMINFO;
typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;
typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE CRYPT_ATTRIBUTE_TYPE_VALUE;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE * PACCESS_ALLOWED_OBJECT_ACE;
typedef struct tagEMRPOLYLINE * PEMRPOLYBEZIERTO;
typedef struct tagOleMenuGroupWidths * LPOLEMENUGROUPWIDTHS;
typedef long time_t;
typedef struct _tagADDRESS64 ADDRESS64;
typedef struct tagCURSORINFO * PCURSORINFO;
typedef struct _CERT_ISSUER_SERIAL_NUMBER * PCERT_ISSUER_SERIAL_NUMBER;
typedef struct _TOKEN_GROUPS * PTOKEN_GROUPS;
typedef void ( * LPTIMECALLBACK)(unsigned int,unsigned int,unsigned long,unsigned long,unsigned long);
typedef struct threadlocaleinfostruct * pthreadlocinfo;
typedef struct _WSAPROTOCOL_INFOA WSAPROTOCOL_INFO;
typedef struct IMarshal2 * LPMARSHAL2;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA * PMIXERCONTROLDETAILS_LISTTEXT;
typedef struct tagMENUITEMINFOW MENUITEMINFOW;
typedef struct _tagSTACKFRAME64 STACKFRAME64;
typedef unsigned short SECURITY_DESCRIPTOR_CONTROL;
typedef struct _IMAGEHLP_MODULE64 IMAGEHLP_MODULE64;
typedef struct _CRYPT_PROVIDER_SGNR CRYPT_PROVIDER_SGNR;
typedef enum tagUSERCLASSTYPE USERCLASSTYPE;
typedef struct _CERT_POLICY_MAPPINGS_INFO CERT_POLICY_MAPPINGS_INFO;
typedef struct tagCOMPOSITIONFORM * NPCOMPOSITIONFORM;
typedef struct tagMSGBOXPARAMSA * PMSGBOXPARAMSA;
typedef struct tagCOMPOSITIONFORM * LPCOMPOSITIONFORM;
typedef struct _WSAVersion WSAVERSION;
typedef struct _ImageArchitectureEntry IMAGE_ARCHITECTURE_ENTRY;
typedef enum _SC_ACTION_TYPE SC_ACTION_TYPE;
typedef struct tagMDICREATESTRUCTW MDICREATESTRUCTW;
typedef struct _PORT_INFO_3A * LPPORT_INFO_3A;
typedef struct _PORT_INFO_2A * LPPORT_INFO_2A;
typedef struct _ABC ABC;
typedef struct _PORT_INFO_1A * LPPORT_INFO_1A;
typedef struct _PRINTER_INFO_7A * LPPRINTER_INFO_7A;
typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA * PCRYPT_KEY_SIGN_MESSAGE_PARA;
typedef unsigned __int64 * PULONG64;
typedef struct IDataAdviseHolder * LPDATAADVISEHOLDER;
typedef struct IEnumString * LPENUMSTRING;
typedef struct _DOC_INFO_3W * PDOC_INFO_3W;
typedef struct tagLOGPALETTE LOGPALETTE;
typedef struct _WSACOMPLETION * PWSACOMPLETION;
typedef struct tagEMRARC EMRPIE;
typedef struct _FILETIME * LPFILETIME;
typedef struct IInternetProtocolInfo * LPIINTERNETPROTOCOLINFO;
typedef struct _CMSG_CONTENT_ENCRYPT_INFO CMSG_CONTENT_ENCRYPT_INFO;
typedef struct SCARD_READERSTATEW * LPSCARD_READERSTATEW;
typedef struct _PROCESSOR_POWER_POLICY PROCESSOR_POWER_POLICY;
typedef int ( * PSYM_ENUMSYMBOLS_CALLBACK)(char *,unsigned long,unsigned long,void *);
typedef struct tagGroup * PGROUP;
typedef struct _PRINTER_INFO_7W * LPPRINTER_INFO_7W;
typedef struct timeval * PTIMEVAL;
typedef struct _WSAPROTOCOLCHAIN WSAPROTOCOLCHAIN;
typedef enum _STORAGE_MEDIA_TYPE STORAGE_MEDIA_TYPE;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE * PACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef char CHAR;
typedef struct _CERT_TRUST_STATUS CERT_TRUST_STATUS;
typedef struct _SCARD_IO_REQUEST * PSCARD_IO_REQUEST;
typedef struct tagMENUGETOBJECTINFO * PMENUGETOBJECTINFO;
typedef struct _IMAGE_FUNCTION_ENTRY64 * PIMAGE_FUNCTION_ENTRY64;
typedef struct tagSCROLLINFO SCROLLINFO;
typedef struct _CRYPTPROTECT_PROMPTSTRUCT CRYPTPROTECT_PROMPTSTRUCT;
typedef struct tagEMRELLIPSE EMRELLIPSE;
typedef int ( * WINSTAENUMPROC)(char *,long);
typedef struct _PROCESS_HEAP_ENTRY PROCESS_HEAP_ENTRY;
typedef struct IBinding * LPBINDING;
typedef struct _RGNDATAHEADER RGNDATAHEADER;
typedef struct tagPARAMDATA PARAMDATA;
typedef struct _RTL_CRITICAL_SECTION * PCRITICAL_SECTION;
typedef struct _MINIDUMP_EXCEPTION * PMINIDUMP_EXCEPTION;
typedef struct __MIDL___MIDL_itf_wtypes_0003_0001 uCLSSPEC;
typedef struct tWAVEFORMATEX WAVEFORMATEX;
typedef struct _IMAGE_DEBUG_MISC IMAGE_DEBUG_MISC;
typedef struct _PROVIDOR_INFO_1A * LPPROVIDOR_INFO_1A;
typedef struct _PRINTER_ENUM_VALUESA * LPPRINTER_ENUM_VALUESA;
typedef struct _DOC_INFO_2W * PDOC_INFO_2W;
typedef struct _PROVIDOR_INFO_2A * LPPROVIDOR_INFO_2A;
typedef union tagCY CURRENCY;
typedef struct _MODEMDEVCAPS * LPMODEMDEVCAPS;
typedef struct _CERT_EXTENSIONS CERT_EXTENSIONS;
typedef void ( * _se_translator_function)(unsigned int,struct _EXCEPTION_POINTERS *);
typedef struct _COMMPROP * LPCOMMPROP;
typedef struct tagSTYLESTRUCT * LPSTYLESTRUCT;
typedef struct tagMULTIKEYHELPA * PMULTIKEYHELP;
typedef struct _CERT_NAME_CONSTRAINTS_INFO * PCERT_NAME_CONSTRAINTS_INFO;
typedef void * * PHANDLE;
typedef struct _QUOTA_LIMITS * PQUOTA_LIMITS;
typedef struct _SECURITY_ATTRIBUTES * PSECURITY_ATTRIBUTES;
typedef struct tagPAINTSTRUCT * PPAINTSTRUCT;
typedef struct _userFLAG_STGMEDIUM * wireFLAG_STGMEDIUM;
typedef struct tagWAVEOUTCAPSA WAVEOUTCAPS;
typedef struct _CERT_ID CERT_ID;
typedef struct _currencyfmtW * LPCURRENCYFMTW;
typedef struct _CTL_VERIFY_USAGE_STATUS CTL_VERIFY_USAGE_STATUS;
typedef struct _EXCEPTION_RECORD64 EXCEPTION_RECORD64;
typedef struct _BYTE_BLOB BYTE_BLOB;
typedef struct _CRL_ENTRY CRL_ENTRY;
typedef struct _MESSAGE_RESOURCE_ENTRY MESSAGE_RESOURCE_ENTRY;
typedef struct tagMIXERLINEW * LPMIXERLINEW;
typedef struct _RemotableHandle * wireHDC;
typedef struct IRootStorage * LPROOTSTORAGE;
typedef struct tagUSEROBJECTFLAGS * PUSEROBJECTFLAGS;
typedef struct _CRYPT_URL_INFO * PCRYPT_URL_INFO;
typedef struct _DRIVE_LAYOUT_INFORMATION * PDRIVE_LAYOUT_INFORMATION;
typedef long CB;
typedef struct HKL__ * * LPHKL;
typedef struct _PRINTER_INFO_7A * LPPRINTER_INFO_7;
typedef struct OPENCARDNAMEA * POPENCARDNAME;
typedef struct _CREATE_THREAD_DEBUG_INFO * LPCREATE_THREAD_DEBUG_INFO;
typedef struct _XMIT_ROUTINE_QUINTUPLE XMIT_ROUTINE_QUINTUPLE;
typedef struct tagFILTERKEYS * LPFILTERKEYS;
typedef struct _DOC_INFO_1W * PDOC_INFO_1W;
typedef struct _COAUTHINFO COAUTHINFO;
typedef struct _IMAGE_VXD_HEADER IMAGE_VXD_HEADER;
typedef struct DLGTEMPLATE * LPDLGTEMPLATEW;
typedef unsigned char * PB;
typedef struct tagEMREXTESCAPE * PEMREXTESCAPE;
typedef struct tagBITMAPFILEHEADER * PBITMAPFILEHEADER;
typedef int ( * MINIDUMP_CALLBACK_ROUTINE)(void *,struct _MINIDUMP_CALLBACK_INPUT *,struct _MINIDUMP_CALLBACK_OUTPUT *);
typedef struct tagHSZPAIR * PHSZPAIR;
typedef struct _PUBKEY TEKPUBKEY;
typedef struct _TAPE_SET_MEDIA_PARAMETERS * PTAPE_SET_MEDIA_PARAMETERS;
typedef void (RPC_SECURITY_CALLBACK_FN)(void *);
typedef int ( * PIMAGEHLP_STATUS_ROUTINE64)(enum _IMAGEHLP_STATUS_REASON,char *,char *,unsigned __int64,unsigned long);
typedef struct _IMAGE_TLS_DIRECTORY32 * PIMAGE_TLS_DIRECTORY;
typedef struct tagMCI_OVLY_WINDOW_PARMSW * LPMCI_OVLY_WINDOW_PARMSW;
typedef struct _CRYPT_PROVIDER_FUNCTIONS * PCRYPT_PROVIDER_FUNCTIONS;
typedef struct _FIND_NAME_HEADER FIND_NAME_HEADER;
typedef unsigned long ( * LPHANDLER_FUNCTION_EX)(unsigned long,unsigned long,void *,void *);
typedef struct tagEMRGLSRECORD * PEMRGLSRECORD;
typedef struct _ENCRYPTION_CERTIFICATE * PENCRYPTION_CERTIFICATE;
typedef struct _CERT_EXTENSION CERT_EXTENSION;
typedef struct tagABORTPATH * PEMRCLOSEFIGURE;
typedef struct tagEMRPOLYLINE EMRPOLYLINE;
typedef struct tagEMRSELECTCLIPPATH EMRSETPOLYFILLMODE;
typedef struct tagCONVINFO * PCONVINFO;
typedef struct _CRYPT_SEQUENCE_OF_ANY CRYPT_SEQUENCE_OF_ANY;
typedef int ( * WINSTAENUMPROCA)(char *,long);
typedef struct tagGCP_RESULTSA * LPGCP_RESULTSA;
typedef struct tagEMRTRANSPARENTBLT * PEMRTRANSPARENTBLT;
typedef struct _CERT_X942_DH_PARAMETERS CERT_X942_DH_PARAMETERS;
typedef unsigned int * PUINT;
typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA CRYPT_KEY_VERIFY_MESSAGE_PARA;
typedef struct _QSORT_ELEMENT_ * LP_QSORT_ELEM;
typedef struct tagEMREXTSELECTCLIPRGN EMREXTSELECTCLIPRGN;
typedef int ( * LANGUAGEGROUP_ENUMPROCA)(unsigned long,char *,char *,unsigned long,long);
typedef struct _STARTUPINFOW * LPSTARTUPINFOW;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN * LPMIXERCONTROLDETAILS_BOOLEAN;
typedef struct tagLOGFONTW LOGFONTW;
typedef struct _IMAGE_VXD_HEADER * PIMAGE_VXD_HEADER;
typedef struct _FOCUS_EVENT_RECORD * PFOCUS_EVENT_RECORD;
typedef struct _CRYPT_PROVIDER_REGDEFUSAGE * PCRYPT_PROVIDER_REGDEFUSAGE;
typedef struct _CTL_VERIFY_USAGE_PARA * PCTL_VERIFY_USAGE_PARA;
typedef struct tagNEWTEXTMETRICA NEWTEXTMETRICA;
typedef struct tagMCI_OVLY_OPEN_PARMSA * LPMCI_OVLY_OPEN_PARMS;
typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
typedef struct HMIDIOUT__ * * LPHMIDIOUT;
typedef struct tagMCI_SYSINFO_PARMSA * LPMCI_SYSINFO_PARMSA;
typedef int ( * LANGUAGEGROUP_ENUMPROCW)(unsigned long,unsigned short *,unsigned short *,unsigned long,long);
typedef struct _MINIDUMP_CALLBACK_INFORMATION * PMINIDUMP_CALLBACK_INFORMATION;
typedef enum _URLZONEREG URLZONEREG;
typedef int ( * WINSTAENUMPROCW)(unsigned short *,long);
typedef struct _ACCESS_DENIED_ACE * PACCESS_DENIED_ACE;
typedef struct tagMCI_ANIM_WINDOW_PARMSA * PMCI_ANIM_WINDOW_PARMSA;
typedef struct tagPOINTS * LPPOINTS;
typedef struct tagWAVEINCAPS2A * PWAVEINCAPS2;
typedef __int64 INT64;
typedef struct _TAPE_SET_POSITION * PTAPE_SET_POSITION;
typedef struct tagPANOSE PANOSE;
typedef struct tagBITMAPCOREINFO * PBITMAPCOREINFO;
typedef struct _CERT_POLICY95_QUALIFIER1 CERT_POLICY95_QUALIFIER1;
typedef struct tagLOGBRUSH LOGBRUSH;
typedef union _CLIENT_CALL_RETURN CLIENT_CALL_RETURN;
typedef struct tagEMRCREATEMONOBRUSH EMRCREATEMONOBRUSH;
typedef enum tagCALLTYPE CALLTYPE;
typedef struct tagSTGOPTIONS STGOPTIONS;
typedef struct _NETINFOSTRUCT * LPNETINFOSTRUCT;
typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO CERT_KEY_USAGE_RESTRICTION_INFO;
typedef struct tagMCI_STATUS_PARMS * PMCI_STATUS_PARMS;
typedef struct _COMMTIMEOUTS COMMTIMEOUTS;
typedef struct tagCHOOSEFONTW * LPCHOOSEFONTW;
typedef struct HCONVLIST__ * HCONVLIST;
typedef struct tagXFORM * PXFORM;
typedef struct tagMCI_SEEK_PARMS * LPMCI_SEEK_PARMS;
typedef unsigned short FILEOP_FLAGS;
typedef unsigned short * LPCLIPFORMAT;
typedef struct CM_Power_Data_s * PCM_POWER_DATA;
typedef struct _ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUSA;
typedef struct _WSAServiceClassInfoW * LPWSASERVICECLASSINFOW;
typedef int ( * PFN_CERT_STORE_PROV_FREE_FIND_CRL)(void *,struct _CRL_CONTEXT *,void *,unsigned long);
typedef struct tagMCI_ANIM_WINDOW_PARMSW * PMCI_ANIM_WINDOW_PARMSW;
typedef struct _NT_TIB * PNT_TIB;
typedef struct tagCHOOSEFONTA * LPCHOOSEFONTA;
typedef struct tagMCI_SAVE_PARMSA MCI_SAVE_PARMS;
typedef struct tagCANDIDATELIST CANDIDATELIST;
typedef struct tagDRVCONFIGINFO DRVCONFIGINFO;
typedef struct tagEMRFORMAT * PEMRFORMAT;
typedef struct _DOC_INFO_3W DOC_INFO_3W;
typedef struct tagMDICREATESTRUCTW * LPMDICREATESTRUCTW;
typedef long ( * LPTOP_LEVEL_EXCEPTION_FILTER)(struct _EXCEPTION_POINTERS *);
typedef struct tagSTATDATA STATDATA;
typedef struct _GENERIC_MAPPING GENERIC_MAPPING;
typedef struct tagMCI_OVLY_RECT_PARMS * PMCI_OVLY_RECT_PARMS;
typedef int ( * PFLS_SETVALUE_FUNCTION)(unsigned long,void *);
typedef struct tagSTATDATA * LPSTATDATA;
typedef struct _currencyfmtW CURRENCYFMTW;
typedef struct IPropertyBag * LPPROPERTYBAG;
typedef struct _s_CatchableType CatchableType;
typedef struct _CERT_USAGE_MATCH CERT_USAGE_MATCH;
typedef int ( * GEO_ENUMPROC)(long);
typedef struct tagRPCOLEMESSAGE RPCOLEMESSAGE;
typedef struct _PACKEDEVENTINFO * PPACKEDEVENTINFO;
typedef int ( * PROPENUMPROCEXW)(struct HWND__ *,unsigned short *,void *,unsigned long);
typedef void ( * LPSERVICE_MAIN_FUNCTIONA)(unsigned long,char * *);
typedef struct tagJOYCAPSA * PJOYCAPSA;
typedef struct tagCHARSETINFO CHARSETINFO;
typedef struct _CRL_FIND_ISSUED_FOR_PARA CRL_FIND_ISSUED_FOR_PARA;
typedef struct _CERT_REVOCATION_CRL_INFO * PCERT_REVOCATION_CRL_INFO;
typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;
typedef struct tagMDINEXTMENU MDINEXTMENU;
typedef struct IEnumOLEVERB * LPENUMOLEVERB;
typedef struct tagLOGCOLORSPACEA * LPLOGCOLORSPACEA;
typedef struct _ENCRYPTION_CERTIFICATE_LIST * PENCRYPTION_CERTIFICATE_LIST;
typedef unsigned short * PUHALF_PTR;
typedef struct midihdr_tag * PMIDIHDR;
typedef struct _DOC_INFO_3A DOC_INFO_3A;
typedef struct tagCAUI CAUI;
typedef struct tagRegion * PREGION;
typedef struct _SYMBOL_INFO_PACKAGE * PSYMBOL_INFO_PACKAGE;
typedef struct tagJOYCAPSW * PJOYCAPSW;
typedef struct _CMC_RESPONSE_INFO * PCMC_RESPONSE_INFO;
typedef struct _CRYPTOAPI_BLOB CRYPT_DER_BLOB;
typedef unsigned char * ( * USER_MARSHAL_UNMARSHALLING_ROUTINE)(unsigned long *,unsigned char *,void *);
typedef int ( * PROPENUMPROCEXA)(struct HWND__ *,char *,void *,unsigned long);
typedef struct _OUTLINETEXTMETRICA * LPOUTLINETEXTMETRICA;
typedef struct _PROCESS_INFORMATION * LPPROCESS_INFORMATION;
typedef struct _WIN32_FIND_DATAA WIN32_FIND_DATA;
typedef struct _OUTLINETEXTMETRICA * NPOUTLINETEXTMETRICA;
typedef enum _MINIDUMP_CALLBACK_TYPE MINIDUMP_CALLBACK_TYPE;
typedef struct tagWAVEINCAPS2A * PWAVEINCAPS2A;
typedef struct _CRYPT_HASH_INFO CRYPT_HASH_INFO;
typedef struct _CTL_USAGE CERT_ENHKEY_USAGE;
typedef struct tagMCI_ANIM_WINDOW_PARMSA * PMCI_ANIM_WINDOW_PARMS;
typedef struct HMETAFILE__ * HMETAFILE;
typedef enum tagTYPEKIND TYPEKIND;
typedef struct tagPRINTPAGERANGE * LPPRINTPAGERANGE;
typedef struct _SET_PARTITION_INFORMATION * PSET_PARTITION_INFORMATION;
typedef enum __MIDL_IInternetZoneManager_0002 ZAFLAGS;
typedef struct _AppBarData APPBARDATA;
typedef struct BITMAPV4HEADER * LPBITMAPV4HEADER;
typedef int ( * PFN_CERT_ENUM_PHYSICAL_STORE)(void *,unsigned long,unsigned short *,struct _CERT_PHYSICAL_STORE_INFO *,void *,void *);
typedef unsigned short UINT16;
typedef struct _OLESTREAMVTBL * LPOLESTREAMVTBL;
typedef void * RPC_AUTH_IDENTITY_HANDLE;
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE * PPRINTER_NOTIFY_OPTIONS_TYPE;
typedef struct tagMCI_SAVE_PARMSW MCI_SAVE_PARMSW;
typedef struct _OLESTREAMVTBL OLESTREAMVTBL;
typedef struct DLGITEMTEMPLATE * LPDLGITEMTEMPLATEA;
typedef struct _MINIDUMP_SYSTEM_INFO * PMINIDUMP_SYSTEM_INFO;
typedef short * PINT16;
typedef struct _CERT_POLICY_ID * PCERT_POLICY_ID;
typedef void * PMIDL_XMIT_TYPE;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER IMAGE_COFF_SYMBOLS_HEADER;
typedef struct tagIDLDESC * LPIDLDESC;
typedef unsigned long (PM_OPEN_PROC)(unsigned short *);
typedef struct IServiceProvider * LPSERVICEPROVIDER;
typedef unsigned long KSPIN_LOCK;
typedef struct tagMCI_RECORD_PARMS * LPMCI_RECORD_PARMS;
typedef struct tagEMRCREATEPALETTE EMRCREATEPALETTE;
typedef struct _OSVERSIONINFOEXA * LPOSVERSIONINFOEXA;
typedef struct tagMCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMSA;
typedef int ( * PFN_CMSG_IMPORT_KEY_TRANS)(struct _CRYPT_ALGORITHM_IDENTIFIER *,struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA *,unsigned long,void *,unsigned long *);
typedef struct _MINIDUMP_MEMORY_DESCRIPTOR MINIDUMP_MEMORY_DESCRIPTOR;
typedef struct _EXCEPTION_RECORD32 * PEXCEPTION_RECORD32;
typedef struct tagWAVEINCAPS2W * PWAVEINCAPS2W;
typedef struct _JOB_INFO_3 JOB_INFO_3;
typedef struct _IMAGEHLP_STACK_FRAME * PIMAGEHLP_STACK_FRAME;
typedef struct tagCHOOSEFONTA * LPCHOOSEFONT;
typedef struct tagMCI_SAVE_PARMSA MCI_SAVE_PARMSA;
typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO * PCERT_KEY_USAGE_RESTRICTION_INFO;
typedef struct tagBinaryParam BinaryParam;
typedef struct _CRL_ISSUING_DIST_POINT CRL_ISSUING_DIST_POINT;
typedef struct _BIDI_REQUEST_CONTAINER * LPBIDI_REQUEST_CONTAINER;
typedef struct _CMSG_SIGNED_ENCODE_INFO * PCMSG_SIGNED_ENCODE_INFO;
typedef struct waveformat_tag WAVEFORMAT;
typedef struct tagEMRMASKBLT * PEMRMASKBLT;
typedef void ( * RPC_AUTH_KEY_RETRIEVAL_FN)(void *,unsigned short *,unsigned long,void * *,long *);
typedef struct _CMC_RESPONSE_INFO CMC_RESPONSE_INFO;
typedef struct _QUOTA_LIMITS_EX QUOTA_LIMITS_EX;
typedef struct _CHANGER_PRODUCT_DATA * PCHANGER_PRODUCT_DATA;
typedef enum _AUDIT_EVENT_TYPE * PAUDIT_EVENT_TYPE;
typedef struct _IMAGE_THUNK_DATA64 * PIMAGE_THUNK_DATA64;
typedef struct sockaddr_in * LPSOCKADDR_IN;
typedef struct _MMIOINFO MMIOINFO;
typedef unsigned int ( * PFNRECONCILEPROFILEW)(unsigned short *,unsigned short *,unsigned long);
typedef struct tagJOYCAPSA * PJOYCAPS;
typedef struct _SESSION_HEADER * PSESSION_HEADER;
typedef struct _CERT_PRIVATE_KEY_VALIDITY * PCERT_PRIVATE_KEY_VALIDITY;
typedef struct MINIDUMP_EXCEPTION_STREAM * PMINIDUMP_EXCEPTION_STREAM;
typedef struct tagEMRPOLYLINE16 * PEMRPOLYLINE16;
typedef struct _TOKEN_PRIMARY_GROUP * PTOKEN_PRIMARY_GROUP;
typedef struct _SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONS;
typedef struct _EFS_KEY_INFO * PEFS_KEY_INFO;
typedef double DOUBLE;
typedef struct tagFORMATETC * LPFORMATETC;
typedef struct _WSAQuerySetA WSAQUERYSETA;
typedef struct tagWNDCLASSEXA * PWNDCLASSEXA;
typedef struct _SCARD_IO_REQUEST * LPCSCARD_IO_REQUEST;
typedef struct sockaddr SOCKADDR;
typedef struct _DOC_INFO_3A DOC_INFO_3;
typedef struct tagPIXELFORMATDESCRIPTOR * PPIXELFORMATDESCRIPTOR;
typedef struct _FORM_INFO_1A FORM_INFO_1A;
typedef struct tagENHMETAHEADER ENHMETAHEADER;
typedef struct _DISK_HISTOGRAM DISK_HISTOGRAM;
typedef struct _MODEMSETTINGS * PMODEMSETTINGS;
typedef struct _SERVICE_DESCRIPTIONA * LPSERVICE_DESCRIPTIONA;
typedef struct _numberfmtA * LPNUMBERFMTA;
typedef struct _TAPE_STATISTICS TAPE_STATISTICS;
typedef int ( * PROPENUMPROCEX)(struct HWND__ *,char *,void *,unsigned long);
typedef struct _CREATE_PROCESS_DEBUG_INFO CREATE_PROCESS_DEBUG_INFO;
typedef struct tagMCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMS;
typedef struct tagMCI_ANIM_WINDOW_PARMSA * LPMCI_ANIM_WINDOW_PARMS;
typedef struct tagJOYCAPS2A * PJOYCAPS2;
typedef struct _s_CatchableTypeArray CatchableTypeArray;
typedef struct tagMSG MSG;
typedef char * PSZ;
typedef struct _PORT_INFO_3A * LPPORT_INFO_3;
typedef class std::fpos<int> streampos;
typedef struct _PORT_INFO_2A * LPPORT_INFO_2;
typedef struct _CRYPT_SEQUENCE_OF_ANY * PCRYPT_SEQUENCE_OF_ANY;
typedef struct _PORT_INFO_1A * LPPORT_INFO_1;
typedef struct _NCB NCB;
typedef struct _ACL ACL;
typedef struct _EVENTSFORLOGFILE EVENTSFORLOGFILE;
typedef struct _CERT_SYSTEM_STORE_INFO * PCERT_SYSTEM_STORE_INFO;
typedef struct tagGCP_RESULTSA GCP_RESULTSA;
typedef struct tagMSGBOXPARAMSA * PMSGBOXPARAMS;
typedef struct _TOKEN_USER * PTOKEN_USER;
typedef struct _DISCDLGSTRUCTW * LPDISCDLGSTRUCTW;
typedef struct _DCB DCB;
typedef struct tagCALPWSTR CALPWSTR;
typedef struct _PUBKEY KEAPUBKEY;
typedef char * PCH;
typedef __int64 USN;
typedef struct tagMCI_OVLY_RECT_PARMS MCI_OVLY_RECT_PARMS;
typedef struct _MINIDUMP_EXCEPTION_INFORMATION * PMINIDUMP_EXCEPTION_INFORMATION;
typedef struct IStorage * LPSTORAGE;
typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY * LPWIN_TRUST_ACTDATA_SUBJECT_ONLY;
typedef struct HSZ__ * HSZ;
typedef unsigned long HELPPOLY;
typedef struct tagCAFILETIME CAFILETIME;
typedef struct _CTL_INFO * PCTL_INFO;
typedef int ( * LPOCNCHKPROC)(unsigned long,unsigned long,void *);
typedef struct HDDEDATA__ * HDDEDATA;
typedef struct _DISPLAY_DEVICEA * PDISPLAY_DEVICEA;
typedef struct tagTTPOLYGONHEADER * LPTTPOLYGONHEADER;
typedef unsigned long SIZE_T;
typedef struct _SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRY;
typedef struct tagTOGGLEKEYS * LPTOGGLEKEYS;
typedef struct _CERT_ACCESS_DESCRIPTION CERT_ACCESS_DESCRIPTION;
typedef struct _QUERY_SERVICE_CONFIGA * LPQUERY_SERVICE_CONFIGA;
typedef struct _SOCKET_ADDRESS * LPSOCKET_ADDRESS;
typedef struct tagMCI_OVLY_LOAD_PARMSW MCI_OVLY_LOAD_PARMSW;
typedef struct _TAPE_SET_MEDIA_PARAMETERS TAPE_SET_MEDIA_PARAMETERS;
typedef struct _CMSG_ENCRYPTED_ENCODE_INFO * PCMSG_ENCRYPTED_ENCODE_INFO;
typedef struct tMIXERCONTROLDETAILS * PMIXERCONTROLDETAILS;
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE * LPPRINTER_NOTIFY_OPTIONS_TYPE;
typedef struct _CRYPT_CSP_PROVIDER CRYPT_CSP_PROVIDER;
typedef struct RPC_IMPORT_CONTEXT_P * PRPC_IMPORT_CONTEXT_P;
typedef struct tagMCI_OVLY_LOAD_PARMSW * LPMCI_OVLY_LOAD_PARMSW;
typedef struct CM_Power_Data_s CM_POWER_DATA;
typedef struct _SPC_SP_OPUS_INFO * PSPC_SP_OPUS_INFO;
typedef struct _LUID_AND_ATTRIBUTES * PLUID_AND_ATTRIBUTES;
typedef struct _LUID_AND_ATTRIBUTES[1] * PLUID_AND_ATTRIBUTES_ARRAY;
typedef struct _CRYPT_ATTRIBUTES * PCRYPT_ATTRIBUTES;
typedef struct _SHNAMEMAPPINGA * LPSHNAMEMAPPINGA;
typedef struct _SPC_INDIRECT_DATA_CONTENT SPC_INDIRECT_DATA_CONTENT;
typedef unsigned short * LPPATCHARRAY;
typedef struct joyinfo_tag * PJOYINFO;
typedef struct _CLASS_MEDIA_CHANGE_CONTEXT * PCLASS_MEDIA_CHANGE_CONTEXT;
typedef struct tagABORTPATH * PEMRSAVEDC;
typedef struct _QUERY_SERVICE_CONFIGW * LPQUERY_SERVICE_CONFIGW;
typedef struct _NTFS_STATISTICS NTFS_STATISTICS;
typedef struct _PROVIDOR_INFO_1A * LPPROVIDOR_INFO_1;
typedef struct _PROCESS_HEAP_ENTRY * PPROCESS_HEAP_ENTRY;
typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY WIN_TRUST_SUBJECT_FILE_AND_DISPLAY;
typedef struct _PRINTER_ENUM_VALUESA * LPPRINTER_ENUM_VALUES;
typedef struct tagLAYERPLANEDESCRIPTOR * LPLAYERPLANEDESCRIPTOR;
typedef int ( * PFN_CERT_STORE_PROV_WRITE_CRL)(void *,struct _CRL_CONTEXT *,unsigned long);
typedef struct tagMCI_SAVE_PARMSA * PMCI_SAVE_PARMSA;
typedef struct _PROVIDOR_INFO_2A * LPPROVIDOR_INFO_2;
typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER FSCTL_QUERY_FAT_BPB_BUFFER;
typedef short VARIANT_BOOL;
typedef struct tagMULTIKEYHELPA * PMULTIKEYHELPA;
typedef struct _BIDI_RESPONSE_DATA BIDI_RESPONSE_DATA;
typedef struct tagCOMPAREITEMSTRUCT * LPCOMPAREITEMSTRUCT;
typedef void ( * unexpected_function)();
typedef struct OPENCARDNAMEA * POPENCARDNAMEA;
typedef struct _RemotableHandle * wireHBRUSH;
typedef struct threadlocaleinfostruct threadlocinfo;
typedef struct _PACKEDEVENTINFO PACKEDEVENTINFO;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER IMAGE_ROM_OPTIONAL_HEADER;
typedef struct _CREATE_THREAD_DEBUG_INFO CREATE_THREAD_DEBUG_INFO;
typedef struct _COMMTIMEOUTS * LPCOMMTIMEOUTS;
typedef struct _PRINTER_INFO_6 * LPPRINTER_INFO_6;
typedef struct tagEMRSETTEXTCOLOR * PEMRSETTEXTCOLOR;
typedef struct IOleInPlaceObject * LPOLEINPLACEOBJECT;
typedef struct _FORMAT_EX_PARAMETERS * PFORMAT_EX_PARAMETERS;
typedef long EC;
typedef struct _CERT_CHAIN_PARA * PCERT_CHAIN_PARA;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER * PIMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _CRYPT_DECODE_PARA CRYPT_DECODE_PARA;
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX * PACTIVATION_CONTEXT_QUERY_INDEX;
typedef struct _FILETIME * PFILETIME;
typedef struct __GENERIC_BINDING_INFO GENERIC_BINDING_INFO;
typedef struct _CMS_DH_KEY_INFO * PCMS_DH_KEY_INFO;
typedef struct tagHELPWININFOA HELPWININFO;
typedef void (TIMECALLBACK)(unsigned int,unsigned int,unsigned long,unsigned long,unsigned long);
typedef struct _CRYPTOAPI_BLOB * PCRYPT_OBJID_BLOB;
typedef struct __JUMP_BUFFER _JUMP_BUFFER;
typedef struct OPENCARD_SEARCH_CRITERIAA OPENCARD_SEARCH_CRITERIA;
typedef struct _tagDATAINFO DATAINFO;
typedef struct tagI_RpcProxyCallbackInterface I_RpcProxyCallbackInterface;
typedef struct _QUERY_SERVICE_CONFIGA * LPQUERY_SERVICE_CONFIG;
typedef struct _CRYPTOAPI_BLOB CRL_BLOB;
typedef struct tagGCP_RESULTSA * LPGCP_RESULTS;
typedef int HFILE;
typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;
typedef struct _RPC_CLIENT_INTERFACE RPC_CLIENT_INTERFACE;
typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO * PCMSG_SP3_COMPATIBLE_AUX_INFO;
typedef unsigned __int64 * PDWORD64;
typedef void ( * XMIT_HELPER_ROUTINE)(struct _MIDL_STUB_MESSAGE *);
typedef struct _MINIDUMP_THREAD_CALLBACK * PMINIDUMP_THREAD_CALLBACK;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION * PJOBOBJECT_SECURITY_LIMIT_INFORMATION;
typedef unsigned int * PUINT_PTR;
typedef struct tagEMRSELECTCLIPPATH * PEMRSETROP2;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct tagMCI_OVLY_OPEN_PARMSA * LPMCI_OVLY_OPEN_PARMSA;
typedef struct FLASHWINFO * PFLASHWINFO;
typedef char * PCCH;
typedef struct fd_set * LPFD_SET;
typedef struct tagPALETTEENTRY PALETTEENTRY;
typedef struct tagTTPOLYCURVE TTPOLYCURVE;
typedef struct tagTEXTMETRICW * PTEXTMETRICW;
typedef int ( * PFN_CPD_ADD_PRIVDATA)(struct _CRYPT_PROVIDER_DATA *,struct _CRYPT_PROVIDER_PRIVDATA *);
typedef int ( * PFN_CMSG_IMPORT_ENCRYPT_KEY)(unsigned long,unsigned long,struct _CRYPT_ALGORITHM_IDENTIFIER *,struct _CRYPT_ALGORITHM_IDENTIFIER *,unsigned char *,unsigned long,unsigned long *);
typedef int ( * ICMENUMPROCW)(unsigned short *,long);
typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA CRYPT_ENCRYPT_MESSAGE_PARA;
typedef struct _IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY64;
typedef struct _CRYPT_REGISTER_ACTIONID * PCRYPT_REGISTER_ACTIONID;
typedef struct _CSADDR_INFO * LPCSADDR_INFO;
typedef struct _CAT_NAMEVALUE * PCAT_NAMEVALUE;
typedef void (RPC_OBJECT_INQ_FN)(struct _GUID *,struct _GUID *,long *);
typedef int ( * Module32FirstW9xProc)(void *,struct tagMODULEENTRY32 *);
typedef unsigned short * PUINT16;
typedef struct _CERT_CHAIN_CONTEXT CERT_CHAIN_CONTEXT;
typedef struct _CRYPT_ATTRIBUTE * PCRYPT_ATTRIBUTE;
typedef void * ( * func57408716)(unsigned int);
typedef int ( * PFN_CMSG_GEN_ENCRYPT_KEY)(unsigned long *,struct _CRYPT_ALGORITHM_IDENTIFIER *,void *,struct _CERT_PUBLIC_KEY_INFO *,func57408716,unsigned long *,unsigned char * *,unsigned long *);
typedef struct tagNEWTEXTMETRICA NEWTEXTMETRIC;
typedef struct tagDRAWITEMSTRUCT DRAWITEMSTRUCT;
typedef struct _IMAGE_DEBUG_MISC * PIMAGE_DEBUG_MISC;
typedef struct _CMC_TAGGED_REQUEST CMC_TAGGED_REQUEST;
typedef struct tagMONHSZSTRUCTW MONHSZSTRUCTW;
typedef struct tagNCCALCSIZE_PARAMS NCCALCSIZE_PARAMS;
typedef struct tagABORTPATH EMRFLATTENPATH;
typedef struct tagMENUITEMINFOA * LPCMENUITEMINFOA;
typedef int ( * FONTENUMPROC)(struct tagLOGFONTA *,struct tagTEXTMETRICA *,unsigned long,long);
typedef unsigned char SECURITY_CONTEXT_TRACKING_MODE;
typedef struct tagCHOOSECOLORA CHOOSECOLOR;
typedef struct _CRYPT_CREDENTIALS CRYPT_CREDENTIALS;
typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
typedef struct tagLOGBRUSH * NPLOGBRUSH;
typedef struct _CRYPT_RETRIEVE_AUX_INFO * PCRYPT_RETRIEVE_AUX_INFO;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS * PJOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
typedef struct tagLOGBRUSH * LPLOGBRUSH;
typedef struct _tagPROTOCOLDATA PROTOCOLDATA;
typedef enum tagDATADIR DATADIR;
typedef struct _JOB_INFO_2W JOB_INFO_2W;
typedef struct tagLC_ID * LPLC_ID;
typedef struct _CONTEXT * LPCONTEXT;
typedef struct tagMONHSZSTRUCTA MONHSZSTRUCTA;
typedef struct tagMCI_SEQ_SET_PARMS MCI_SEQ_SET_PARMS;
typedef struct IMoniker * LPMONIKER;
typedef struct tagMCI_GETDEVCAPS_PARMS * LPMCI_GETDEVCAPS_PARMS;
typedef struct tagEMRSELECTCLIPPATH * PEMRSETBKMODE;
typedef struct _JOB_INFO_2A JOB_INFO_2A;
typedef struct _wireSAFEARRAY * wireSAFEARRAY;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION JOBOBJECT_SECURITY_LIMIT_INFORMATION;
typedef struct _CERT_KEY_ATTRIBUTES_INFO CERT_KEY_ATTRIBUTES_INFO;
typedef struct tagEMRSETMITERLIMIT EMRSETMITERLIMIT;
typedef struct _REMOTE_NAME_INFOA * LPREMOTE_NAME_INFO;
typedef struct _WSANSClassInfoW * PWSANSCLASSINFOW;
typedef struct _PRINTPROCESSOR_CAPS_1 PRINTPROCESSOR_CAPS_1;
typedef struct _MINIDUMP_INCLUDE_MODULE_CALLBACK MINIDUMP_INCLUDE_MODULE_CALLBACK;
typedef struct tagCOLORMATCHTOTARGET * PEMRCOLORMATCHTOTARGET;
typedef struct tagEMRFILLPATH * PEMRSTROKEANDFILLPATH;
typedef struct _EXIT_THREAD_DEBUG_INFO EXIT_THREAD_DEBUG_INFO;
typedef struct _DOC_INFO_2W DOC_INFO_2W;
typedef struct _TOKEN_PRIMARY_GROUP TOKEN_PRIMARY_GROUP;
typedef struct tagRPC_CALL_ATTRIBUTES_V1_A RPC_CALL_ATTRIBUTES_V1_A;
typedef struct HIMC__ * HIMC;
typedef struct _QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIG;
typedef struct tagEMRSETTEXTCOLOR EMRSETTEXTCOLOR;
typedef short SHORT;
typedef struct tagPARAMDATA * LPPARAMDATA;
typedef struct _DATATYPES_INFO_1W * LPDATATYPES_INFO_1W;
typedef struct tagEXTLOGPEN * PEXTLOGPEN;
typedef struct ISupportErrorInfo * LPSUPPORTERRORINFO;
typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO * PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
typedef struct tagMCI_SET_PARMS MCI_SET_PARMS;
typedef struct tagEMRPOLYTEXTOUTA * PEMRPOLYTEXTOUTW;
typedef struct _WSAPROTOCOL_INFOA * LPWSAPROTOCOL_INFO;
typedef struct tagMCI_SEQ_SET_PARMS * LPMCI_SEQ_SET_PARMS;
typedef struct wavehdr_tag * LPWAVEHDR;
typedef struct tagMETARECORD * LPMETARECORD;
typedef int ( * CODEPAGE_ENUMPROCA)(char *);
typedef struct _DOC_INFO_2A DOC_INFO_2A;
typedef struct tagCAUH CAUH;
typedef struct wavehdr_tag * NPWAVEHDR;
typedef int ( * PHANDLER_ROUTINE)(unsigned long);
typedef struct _DATATYPES_INFO_1A * LPDATATYPES_INFO_1A;
typedef struct _FILE_NOTIFY_INFORMATION FILE_NOTIFY_INFORMATION;
typedef struct _UNIVERSAL_NAME_INFOW * LPUNIVERSAL_NAME_INFOW;
typedef struct tagFUNCDESC FUNCDESC;
typedef struct _BIDI_DATA * LPBIDI_DATA;
typedef unsigned long REGSAM;
typedef struct tagENHMETAHEADER * LPENHMETAHEADER;
typedef struct _CERT_PUBLIC_KEY_INFO * PCERT_PUBLIC_KEY_INFO;
typedef struct _IMAGE_IMPORT_BY_NAME IMAGE_IMPORT_BY_NAME;
typedef struct _RPC_IF_ID RPC_IF_ID;
typedef struct DLGITEMTEMPLATE * LPDLGITEMTEMPLATE;
typedef struct DLGTEMPLATE * PROPSHEETPAGE_RESOURCE;
typedef enum _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;
typedef int ( * FONTENUMPROCA)(struct tagLOGFONTA *,struct tagTEXTMETRICA *,unsigned long,long);
typedef struct _IMAGE_FUNCTION_ENTRY64 IMAGE_FUNCTION_ENTRY64;
typedef struct tagMETHODDATA * LPMETHODDATA;
typedef struct BITMAPV5HEADER * LPBITMAPV5HEADER;
typedef struct _tagADDRESS64 * LPADDRESS64;
typedef struct _CHANGER_SET_ACCESS CHANGER_SET_ACCESS;
typedef struct _RPC_PROTSEQ_VECTORW RPC_PROTSEQ_VECTORW;
typedef struct _REMOTE_NAME_INFOW * LPREMOTE_NAME_INFOW;
typedef struct _MMIOINFO * LPMMIOINFO;
typedef enum tagOLELINKBIND OLELINKBIND;
typedef struct _DISK_RECORD DISK_RECORD;
typedef struct _MMIOINFO * NPMMIOINFO;
typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64 * PIMAGEHLP_DEFERRED_SYMBOL_LOAD64;
typedef int ( * IMCENUMPROC)(struct HIMC__ *,long);
typedef struct _WSANAMESPACE_INFOA * LPWSANAMESPACE_INFOA;
typedef int ( * FONTENUMPROCW)(struct tagLOGFONTW *,struct tagTEXTMETRICW *,unsigned long,long);
typedef int LONG32;
typedef struct _BY_HANDLE_FILE_INFORMATION * LPBY_HANDLE_FILE_INFORMATION;
typedef struct tagMONHSZSTRUCTA MONHSZSTRUCT;
typedef struct _COAUTHIDENTITY COAUTHIDENTITY;
typedef void * RPC_BINDING_HANDLE;
typedef struct tagMCI_SET_PARMS * LPMCI_SET_PARMS;
typedef struct tagALTTABINFO * LPALTTABINFO;
typedef struct tagENUMLOGFONTEXA * LPENUMLOGFONTEXA;
typedef struct _JOB_INFO_2A JOB_INFO_2;
typedef long (MMIOPROC)(char *,unsigned int,long,long);
typedef long ( * I_RpcProxyGetConnectionTimeoutFn)(unsigned long *);
typedef struct IInternetZoneManager * LPURLZONEMANAGER;
typedef struct _REMOTE_NAME_INFOA * LPREMOTE_NAME_INFOA;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE SYSTEM_AUDIT_CALLBACK_ACE;
typedef struct _OSVERSIONINFOEXA * LPOSVERSIONINFOEX;
typedef struct _CERT_TRUST_STATUS * PCERT_TRUST_STATUS;
typedef struct _CERT_CHAIN_CONTEXT * PCERT_CHAIN_CONTEXT;
typedef struct tagMCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMS;
typedef struct _IMAGE_IMPORT_DESCRIPTOR IMAGE_IMPORT_DESCRIPTOR;
typedef unsigned long CPFLAGS;
typedef struct _CRL_INFO * PCRL_INFO;
typedef struct _RPC_PROTSEQ_VECTORA RPC_PROTSEQ_VECTORA;
typedef struct IOleItemContainer * LPOLEITEMCONTAINER;
typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A * PRPC_HTTP_TRANSPORT_CREDENTIALS_A;
typedef struct _CTL_CONTEXT * PCCTL_CONTEXT;
typedef struct IHttpNegotiate2 * LPHTTPNEGOTIATE2;
typedef struct _FLAGGED_BYTE_BLOB FLAGGED_BYTE_BLOB;
typedef struct _WSAPROTOCOL_INFOW * LPWSAPROTOCOL_INFOW;
typedef struct tagTITLEBARINFO * PTITLEBARINFO;
typedef struct tagMIDIINCAPSA * PMIDIINCAPS;
typedef struct _EVENTLOGRECORD * PEVENTLOGRECORD;
typedef struct _QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIGA;
typedef int ( * PSYM_ENUMMODULES_CALLBACK64)(char *,unsigned __int64,void *);
typedef struct HIMCC__ * HIMCC;
typedef struct tagSTGMEDIUM ASYNC_STGMEDIUM;
typedef struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR MINIDUMP_FUNCTION_TABLE_DESCRIPTOR;
typedef struct _EFS_RPC_BLOB EFS_RPC_BLOB;
typedef struct _TAPE_GET_STATISTICS * PTAPE_GET_STATISTICS;
typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY * PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
typedef struct tagEMRSELECTPALETTE * PEMRSELECTPALETTE;
typedef struct tagHARDWAREHOOKSTRUCT HARDWAREHOOKSTRUCT;
typedef struct _QUERY_SERVICE_CONFIGW QUERY_SERVICE_CONFIGW;
typedef void * I_RPC_MUTEX;
typedef enum _SID_NAME_USE * PSID_NAME_USE;
typedef struct tagMONITORINFOEXA * LPMONITORINFOEXA;
typedef struct _SERVICE_DESCRIPTIONA * LPSERVICE_DESCRIPTION;
typedef struct tagEXCEPINFO EXCEPINFO;
typedef struct _WSAPROTOCOL_INFOA * LPWSAPROTOCOL_INFOA;
typedef struct tagCIEXYZ CIEXYZ;
typedef struct tagJOYCAPS2A * PJOYCAPS2A;
typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W * PRPC_HTTP_TRANSPORT_CREDENTIALS_W;
typedef struct IMarshal * LPMARSHAL;
typedef struct _DOC_INFO_2A DOC_INFO_2;
typedef struct tagEMRSTRETCHDIBITS EMRSTRETCHDIBITS;
typedef struct tagEMREXTESCAPE EMREXTESCAPE;
typedef struct tagCANDIDATELIST * NPCANDIDATELIST;
typedef struct _OVERLAPPED OVERLAPPED;
typedef struct tagCANDIDATELIST * LPCANDIDATELIST;
typedef class std::basic_ios<unsigned short,std::char_traits<unsigned short> > wios;
typedef struct _CRYPT_PROVUI_DATA CRYPT_PROVUI_DATA;
typedef struct _DATATYPES_INFO_1A * LPDATATYPES_INFO_1;
typedef struct tagRPC_EXTENDED_ERROR_INFO RPC_EXTENDED_ERROR_INFO;
typedef struct tagLOGBRUSH32 * NPLOGBRUSH32;
typedef struct tagLOGBRUSH32 * LPLOGBRUSH32;
typedef unsigned short[128] KEYARRAY;
typedef struct _RPC_MESSAGE RPC_MESSAGE;
typedef void ( * PFN_FREE_ENCODED_OBJECT_FUNC)(char *,struct _CRYPT_BLOB_ARRAY *,void *);
typedef struct tagSOUNDSENTRYA SOUNDSENTRY;
typedef struct tagMCI_OVLY_SAVE_PARMSA * LPMCI_OVLY_SAVE_PARMS;
typedef struct tagEMRPOLYDRAW * PEMRPOLYDRAW;
typedef struct _RPC_SERVER_INTERFACE RPC_SERVER_INTERFACE;
typedef struct _strflt * STRFLT;
typedef struct _CERT_SIMPLE_CHAIN * PCERT_SIMPLE_CHAIN;
typedef struct _CRYPT_TRUST_REG_ENTRY CRYPT_TRUST_REG_ENTRY;
typedef int ( * GOBJENUMPROC)(void *,long);
typedef int ( * UILANGUAGE_ENUMPROCA)(char *,long);
typedef struct IMAGE_LOAD_CONFIG_DIRECTORY64 * PIMAGE_LOAD_CONFIG_DIRECTORY64;
typedef int ( * ModCloseProc)(struct Mod *);
typedef struct _PRINTER_INFO_9A * LPPRINTER_INFO_9A;
typedef struct _DRIVER_INFO_5A * LPDRIVER_INFO_5A;
typedef struct _IMAGE_BASE_RELOCATION IMAGE_BASE_RELOCATION;
typedef struct _PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1;
typedef struct tagEMRANGLEARC * PEMRANGLEARC;
typedef struct tagEMRPLGBLT * PEMRPLGBLT;
typedef struct tagCWPRETSTRUCT CWPRETSTRUCT;
typedef struct tagEMRSELECTCLIPPATH EMRSELECTCLIPPATH;
typedef unsigned long ( * LPOCNCONNPROCW)(unsigned long,unsigned short *,unsigned short *,void *);
typedef struct _MESSAGE_RESOURCE_BLOCK MESSAGE_RESOURCE_BLOCK;
typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA * PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
typedef struct _ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESSA;
typedef struct _CERT_EXTENSIONS * PCERT_EXTENSIONS;
typedef long RPC_STATUS;
typedef struct _PRINTER_INFO_9W * LPPRINTER_INFO_9W;
typedef struct _SERVICE_STATUS_PROCESS SERVICE_STATUS_PROCESS;
typedef struct tagTEXTMETRICA * PTEXTMETRIC;
typedef struct _RPC_ASYNC_STATE * PRPC_ASYNC_STATE;
typedef struct _TOKEN_SOURCE * PTOKEN_SOURCE;
typedef int ( * ENUMRESTYPEPROCA)(struct HINSTANCE__ *,char *,long);
typedef struct _HISTOGRAM_BUCKET * PHISTOGRAM_BUCKET;
typedef struct tagCURSORSHAPE CURSORSHAPE;
typedef struct _COMMCONFIG COMMCONFIG;
typedef struct _SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES;
typedef struct tagJOYCAPSA * LPJOYCAPSA;
typedef int ( * TIMEFMT_ENUMPROCA)(char *);
typedef struct _CRL_REVOCATION_INFO CRL_REVOCATION_INFO;
typedef struct tagJOYCAPSA * NPJOYCAPSA;
typedef struct IInternetSession * LPIINTERNETSESSION;
typedef struct tagNEWTEXTMETRICEXA NEWTEXTMETRICEXA;
typedef struct _WSAQuerySetA * PWSAQUERYSETA;
typedef struct _DRIVER_INFO_6A DRIVER_INFO_6A;
typedef struct DRVCONFIGINFOEX * LPDRVCONFIGINFOEX;
typedef struct tagWNDCLASSA * LPWNDCLASS;
typedef struct tagEMRGLSBOUNDEDRECORD EMRGLSBOUNDEDRECORD;
typedef struct value_entA * PVALENT;
typedef struct _DRIVER_INFO_4A DRIVER_INFO_4A;
typedef struct DRVCONFIGINFOEX * NPDRVCONFIGINFOEX;
typedef struct tagWNDCLASSA * NPWNDCLASS;
typedef struct tagMIDIOUTCAPS2A MIDIOUTCAPS2A;
typedef struct _DRIVER_INFO_5A DRIVER_INFO_5A;
typedef struct _GRADIENT_RECT * LPGRADIENT_RECT;
typedef struct tagSTATSTG STATSTG;
typedef struct _DRIVER_INFO_2A DRIVER_INFO_2A;
typedef struct tagMIDIOUTCAPS2A * LPMIDIOUTCAPS2;
typedef struct _CERT_OTHER_NAME CERT_OTHER_NAME;
typedef struct _DRIVER_INFO_4A * LPDRIVER_INFO_4A;
typedef struct _DRIVER_INFO_3A DRIVER_INFO_3A;
typedef struct tagMIDIOUTCAPS2A * NPMIDIOUTCAPS2;
typedef struct _SESSION_BUFFER SESSION_BUFFER;
typedef struct _CERT_POLICIES_INFO * PCERT_POLICIES_INFO;
typedef struct _CERT_CONTEXT * ( * PFN_CRYPT_GET_SIGNER_CERTIFICATE)(void *,unsigned long,struct _CERT_INFO *,void *);
typedef struct _DRIVER_INFO_1A DRIVER_INFO_1A;
typedef struct RPC_CLIENT_INFORMATION1 * PRPC_CLIENT_INFORMATION1;
typedef struct _CMSG_ENVELOPED_ENCODE_INFO CMSG_ENVELOPED_ENCODE_INFO;
typedef int ( * TIMEFMT_ENUMPROCW)(unsigned short *);
typedef struct _ADMINISTRATOR_POWER_POLICY * PADMINISTRATOR_POWER_POLICY;
typedef struct _IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY;
typedef struct tagMCI_WAVE_SET_PARMS * PMCI_WAVE_SET_PARMS;
typedef struct _PSFEATURE_CUSTPAPER * PPSFEATURE_CUSTPAPER;
typedef struct _WSAServiceClassInfoA * PWSASERVICECLASSINFO;
typedef struct _devicemodeA * NPDEVMODEA;
typedef struct tagMIDIOUTCAPS2W MIDIOUTCAPS2W;
typedef struct tMIXERCONTROLDETAILS_UNSIGNED MIXERCONTROLDETAILS_UNSIGNED;
typedef struct tagABORTPATH * PEMRENDPATH;
typedef struct _WSAQuerySetW * PWSAQUERYSETW;
typedef struct _devicemodeA * LPDEVMODEA;
typedef int ( * MONITORENUMPROC)(struct HMONITOR__ *,struct HDC__ *,struct tagRECT *,long);
typedef struct _PRINTER_DEFAULTSA PRINTER_DEFAULTS;
typedef struct _SID_AND_ATTRIBUTES * PSID_AND_ATTRIBUTES;
typedef unsigned short * NWPSTR;
typedef struct tagEMRSETPALETTEENTRIES * PEMRSETPALETTEENTRIES;
typedef struct _CERT_REVOCATION_CRL_INFO CERT_REVOCATION_CRL_INFO;
typedef void ( * _Prhand)(class exception *);
typedef struct tagJOYCAPSA JOYCAPSA;
typedef unsigned short * LPCOLESTR;
typedef int ( * PFN_CERT_ENUM_SYSTEM_STORE)(void *,unsigned long,struct _CERT_SYSTEM_STORE_INFO *,void *,void *);
typedef struct _PRINTER_NOTIFY_OPTIONS * LPPRINTER_NOTIFY_OPTIONS;
typedef int ( * ENUMRESLANGPROCW)(struct HINSTANCE__ *,unsigned short *,unsigned short *,unsigned short,long);
typedef struct tagVARDESC VARDESC;
typedef struct _CERT_AUTHORITY_KEY_ID2_INFO CERT_AUTHORITY_KEY_ID2_INFO;
typedef struct tagMOUSEKEYS MOUSEKEYS;
typedef struct _PRINTER_INFO_9A * LPPRINTER_INFO_9;
typedef struct sockaddr_in * PSOCKADDR_IN;
typedef struct WINTRUST_BLOB_INFO_ WINTRUST_BLOB_INFO;
typedef struct tagMOUSEMOVEPOINT * PMOUSEMOVEPOINT;
typedef struct tagEMRSELECTPALETTE EMRSELECTPALETTE;
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS CRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;
typedef unsigned int UINT_PTR;
typedef struct tagABORTPATH * PEMRSETMETARGN;
typedef struct IPersistStorage * LPPERSISTSTORAGE;
typedef struct _WINTRUST_DATA * PWINTRUST_DATA;
typedef int * PINT_PTR;
typedef struct _OLESTREAM OLESTREAM;
typedef unsigned long * PDWORD_PTR;
typedef struct _tagHIT_LOGGING_INFO HIT_LOGGING_INFO;
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS * PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
typedef struct tagVARIANT VARIANT;
typedef struct tagCURSORINFO * LPCURSORINFO;
typedef struct _wireSAFEARR_HAVEIID SAFEARR_HAVEIID;
typedef struct tagCLEANLOCALSTORAGE CLEANLOCALSTORAGE;
typedef struct _DISCDLGSTRUCTA DISCDLGSTRUCT;
typedef unsigned short * LPKEYARRAY;
typedef int ( * PFN_CMSG_EXPORT_KEY_TRANS)(struct _CMSG_CONTENT_ENCRYPT_INFO *,struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO *,struct _CMSG_KEY_TRANS_ENCRYPT_INFO *,unsigned long,void *);
typedef struct tagWNDCLASSA * LPWNDCLASSA;
typedef struct _PRINTER_DEFAULTSW PRINTER_DEFAULTSW;
typedef struct _CHANGER_SET_POSITION CHANGER_SET_POSITION;
typedef enum tagCOINIT COINIT;
typedef struct tagDEC * LPDECIMAL;
typedef struct _WSAQuerySetA * PWSAQUERYSET;
typedef struct tagOBJECTDESCRIPTOR * POBJECTDESCRIPTOR;
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA * PCERT_CHAIN_FIND_BY_ISSUER_PARA;
typedef struct tagMIXERLINEA MIXERLINE;
typedef struct _DISK_EXTENT DISK_EXTENT;
typedef struct tagWNDCLASSA * NPWNDCLASSA;
typedef struct tagMIDIOUTCAPS2A MIDIOUTCAPS2;
typedef struct _WSAServiceClassInfoW * PWSASERVICECLASSINFOW;
typedef struct tagENHMETARECORD * PENHMETARECORD;
typedef struct tagMIDIOUTCAPS2A * LPMIDIOUTCAPS2A;
typedef struct _CHAR_INFO * PCHAR_INFO;
typedef struct _DRIVER_INFO_6A * LPDRIVER_INFO_6A;
typedef struct _SCARD_ATRMASK SCARD_ATRMASK;
typedef struct tagMIDIOUTCAPS2A * NPMIDIOUTCAPS2A;
typedef struct _IMAGE_ROM_HEADERS * PIMAGE_ROM_HEADERS;
typedef enum _WSACOMPLETIONTYPE * LPWSACOMPLETIONTYPE;
typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO CMSG_SP3_COMPATIBLE_AUX_INFO;
typedef struct tagCASCODE CASCODE;
typedef struct _CTL_USAGE_MATCH * PCTL_USAGE_MATCH;
typedef void ( * terminate_function)();
typedef struct _XMIT_ROUTINE_QUINTUPLE * PXMIT_ROUTINE_QUINTUPLE;
typedef struct tagSIZE * PSIZEL;
typedef struct _tagCODEBASEHOLD * LPCODEBASEHOLD;
typedef struct _PERF_BIN PERF_BIN;
typedef struct tagMIXERCAPSA MIXERCAPS;
typedef struct _MINIDUMP_USER_RECORD * PMINIDUMP_USER_RECORD;
typedef struct tagEMRINVERTRGN * PEMRPAINTRGN;
typedef struct _FPO_DATA FPO_DATA;
typedef struct tagMIDIOUTCAPS2W * NPMIDIOUTCAPS2W;
typedef struct tagBSTRBLOB BSTRBLOB;
typedef unsigned long * PACCESS_MASK;
typedef struct tagMIDIOUTCAPS2W * LPMIDIOUTCAPS2W;
typedef struct OPENCARD_SEARCH_CRITERIAA * POPENCARD_SEARCH_CRITERIAA;
typedef char _TSCHAR;
typedef struct tagWNDCLASSW * NPWNDCLASSW;
typedef struct _MINIDUMP_DIRECTORY * PMINIDUMP_DIRECTORY;
typedef struct _WSAServiceClassInfoA * PWSASERVICECLASSINFOA;
typedef long ( * I_RpcProxyGetClientAddressFn)(void *,char *,unsigned long *);
typedef struct tagWNDCLASSW * LPWNDCLASSW;
typedef struct _PRINTER_DEFAULTSA PRINTER_DEFAULTSA;
typedef struct _MINIDUMP_USER_STREAM_INFORMATION * PMINIDUMP_USER_STREAM_INFORMATION;
typedef struct tagCACLSID CACLSID;
typedef struct _RemotableHandle * wireHWND;
typedef struct _CRYPT_ATTRIBUTES CRYPT_ATTRIBUTES;
typedef struct _WIN32_FIND_DATAA * PWIN32_FIND_DATA;
typedef struct _VERIFY_INFORMATION VERIFY_INFORMATION;
typedef struct _div_t div_t;
typedef struct tagWNDCLASSEXA * NPWNDCLASSEXA;
typedef struct tagENHMETARECORD ENHMETARECORD;
typedef struct tagCALPSTR CALPSTR;
typedef struct tagWNDCLASSEXA * LPWNDCLASSEXA;
typedef struct _MINIDUMP_LOCATION_DESCRIPTOR MINIDUMP_LOCATION_DESCRIPTOR;
typedef struct _DRIVER_INFO_1A * LPDRIVER_INFO_1A;
typedef struct _SHCREATEPROCESSINFOW SHCREATEPROCESSINFOW;
typedef struct _PUBLICKEYSTRUC BLOBHEADER;
typedef unsigned int ( * PFNGETPROFILEPATHW)(unsigned short *,unsigned short *,unsigned int);
typedef struct tagEMRSELECTCLIPPATH * PEMRSETPOLYFILLMODE;
typedef struct _tagSOFTDISTINFO * LPSOFTDISTINFO;
typedef struct _CERT_POLICY_MAPPING CERT_POLICY_MAPPING;
typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA CERT_REGISTRY_STORE_CLIENT_GPT_PARA;
typedef void ( * LPHANDLER_FUNCTION)(unsigned long);
typedef struct _IMAGEHLP_DUPLICATE_SYMBOL64 IMAGEHLP_DUPLICATE_SYMBOL64;
typedef struct tagENUMLOGFONTA * LPENUMLOGFONT;
typedef struct _QOS_SD_MODE QOS_SD_MODE;
typedef int ( * PFN_CRYPT_ENUM_KEYID_PROP)(struct _CRYPTOAPI_BLOB *,unsigned long,void *,void *,unsigned long,unsigned long *,void * *,unsigned long *);
typedef struct _xml_error XML_ERROR;
typedef struct tagWNDCLASSEXW * LPWNDCLASSEXW;
typedef struct _FULL_PTR_XLAT_TABLES * PFULL_PTR_XLAT_TABLES;
typedef struct tagWNDCLASSEXW * NPWNDCLASSEXW;
typedef struct _wireSAFEARR_DISPATCH SAFEARR_DISPATCH;
typedef struct tagDIBSECTION DIBSECTION;
typedef struct _WGLSWAP WGLSWAP;
typedef struct _DRIVER_INFO_2A * PDRIVER_INFO_2;
typedef signed char INT8;
typedef struct tagREGISTERWORDA * PREGISTERWORDA;
typedef unsigned long CALTYPE;
typedef struct midihdr_tag MIDIHDR;
typedef struct _MINIDUMP_MEMORY_LIST MINIDUMP_MEMORY_LIST;
typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA * PCRYPT_ENCRYPT_MESSAGE_PARA;
typedef struct _MONITOR_INFO_1A * PMONITOR_INFO_1;
typedef struct _TOKEN_DEFAULT_DACL TOKEN_DEFAULT_DACL;
typedef void ( * _PVFV)();
typedef void * _HFILE;
typedef struct _NON_PAGED_DEBUG_INFO NON_PAGED_DEBUG_INFO;
typedef struct tagCBT_CREATEWNDA CBT_CREATEWNDA;
typedef struct tagRemFORMATETC RemFORMATETC;
typedef struct _MONITOR_INFO_2A * PMONITOR_INFO_2;
typedef struct tagMCI_GENERIC_PARMS * PMCI_GENERIC_PARMS;
typedef struct tagPROPVARIANT * LPPROPVARIANT;
typedef struct _CMSG_CMS_RECIPIENT_INFO CMSG_CMS_RECIPIENT_INFO;
typedef struct _CERT_TRUST_LIST_INFO CERT_TRUST_LIST_INFO;
typedef struct tagENHMETARECORD * LPENHMETARECORD;
typedef struct _PRINTPROCESSOR_INFO_1A * LPPRINTPROCESSOR_INFO_1A;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR IMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct protoent * PPROTOENT;
typedef struct IStdMarshalInfo * LPSTDMARSHALINFO;
typedef struct _MIDL_STUBLESS_PROXY_INFO * PMIDL_STUBLESS_PROXY_INFO;
typedef struct IPersistStream * LPPERSISTSTREAM;
typedef struct tagWNDCLASSA * PWNDCLASSA;
typedef struct tagEMREXTESCAPE * PEMRDRAWESCAPE;
typedef struct _WIN_CERTIFICATE WIN_CERTIFICATE;
typedef struct _SCARD_ATRMASK * LPSCARD_ATRMASK;
typedef struct _CMC_ADD_EXTENSIONS_INFO CMC_ADD_EXTENSIONS_INFO;
typedef struct _CLASS_MEDIA_CHANGE_CONTEXT CLASS_MEDIA_CHANGE_CONTEXT;
typedef struct tagMIDIINCAPS2A MIDIINCAPS2;
typedef struct tagMONITORINFO * LPMONITORINFO;
typedef struct timecaps_tag * NPTIMECAPS;
typedef struct _VOLUME_DISK_EXTENTS * PVOLUME_DISK_EXTENTS;
typedef unsigned long DWORD;
typedef struct timecaps_tag * LPTIMECAPS;
typedef struct tagAUXCAPS2W * PAUXCAPS2W;
typedef int ( * NAMEENUMPROCA)(char *,long);
typedef struct tagPSDA PAGESETUPDLGA;
typedef struct _IMAGE_NT_HEADERS * PIMAGE_NT_HEADERS;
typedef int ( * PFN_CERT_STORE_PROV_SET_CERT_PROPERTY)(void *,struct _CERT_CONTEXT *,unsigned long,unsigned long,void *);
typedef struct SPC_LINK_ SPC_LINK;
typedef enum _SC_STATUS_TYPE SC_STATUS_TYPE;
typedef struct _SYSTEMTIME SYSTEMTIME;
typedef struct tagEMRARC * PEMRARC;
typedef unsigned long KAFFINITY;
typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS CHANGER_INITIALIZE_ELEMENT_STATUS;
typedef struct tagMIDIINCAPSA MIDIINCAPS;
typedef int ( * NAMEENUMPROCW)(unsigned short *,long);
typedef struct tagPSDW PAGESETUPDLGW;
typedef unsigned char _TUCHAR;
typedef unsigned short * PWORD;
typedef struct _SYSTEM_ALARM_CALLBACK_ACE SYSTEM_ALARM_CALLBACK_ACE;
typedef int ( * PFN_CERT_STORE_PROV_GET_CERT_PROPERTY)(void *,struct _CERT_CONTEXT *,unsigned long,unsigned long,void *,unsigned long *);
typedef struct _BIDI_RESPONSE_CONTAINER BIDI_RESPONSE_CONTAINER;
typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION ASSEMBLY_FILE_DETAILED_INFORMATION;
typedef unsigned short UWORD;
typedef struct _SERVICE_FAILURE_ACTIONSW * LPSERVICE_FAILURE_ACTIONSW;
typedef enum tagFUNCFLAGS FUNCFLAGS;
typedef void ( * _secerr_handler_func)(int,void *);
typedef struct tagDEBUGHOOKINFO * PDEBUGHOOKINFO;
typedef struct _DRIVER_INFO_2W * PDRIVER_INFO_2W;
typedef struct _TAPE_CREATE_PARTITION TAPE_CREATE_PARTITION;
typedef struct _WIN32_FIND_DATAA * PWIN32_FIND_DATAA;
typedef struct HGLRC__ * HGLRC;
typedef struct tagWNDCLASSEXA * NPWNDCLASSEX;
typedef struct _WGLSWAP * PWGLSWAP;
typedef struct tagWNDCLASSEXA * LPWNDCLASSEX;
typedef struct pcmwaveformat_tag * NPPCMWAVEFORMAT;
typedef struct tagMIXERLINECONTROLSA * LPMIXERLINECONTROLS;
typedef struct _IMAGE_LINENUMBER IMAGE_LINENUMBER;
typedef struct pcmwaveformat_tag * LPPCMWAVEFORMAT;
typedef struct _DRIVER_INFO_3A * LPDRIVER_INFO_3A;
typedef void ( * PFN_EXIT_PROCESS)(unsigned int);
typedef struct _SEC_WINNT_AUTH_IDENTITY_A SEC_WINNT_AUTH_IDENTITY_A;
typedef struct _NT_TIB64 * PNT_TIB64;
typedef struct _GUID * LPFMTID;
typedef union _LARGE_INTEGER LARGE_INTEGER;
typedef struct _FIND_NAME_HEADER * PFIND_NAME_HEADER;
typedef struct _WIN32_FIND_DATAW * PWIN32_FIND_DATAW;
typedef struct _DRIVER_INFO_2A * PDRIVER_INFO_2A;
typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE * PCERT_POLICY_QUALIFIER_USER_NOTICE;
typedef struct _flowspec * PFLOWSPEC;
typedef struct _SEC_WINNT_AUTH_IDENTITY_W SEC_WINNT_AUTH_IDENTITY_W;
typedef struct tagIMECHARPOSITION IMECHARPOSITION;
typedef struct _MINIDUMP_USER_STREAM_INFORMATION MINIDUMP_USER_STREAM_INFORMATION;
typedef struct _RTL_CRITICAL_SECTION RTL_CRITICAL_SECTION;
typedef struct _MINIDUMP_FUNCTION_TABLE_STREAM MINIDUMP_FUNCTION_TABLE_STREAM;
typedef struct _PSHNOTIFY * LPPSHNOTIFY;
typedef struct HUMPD__ * HUMPD;
typedef struct _ACCESS_DENIED_OBJECT_ACE * PACCESS_DENIED_OBJECT_ACE;
typedef enum tagSTDMSHLFLAGS STDMSHLFLAGS;
typedef struct _AFPROTOCOLS AFPROTOCOLS;
typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYLINE16;
typedef struct _PROPSHEETHEADERA * LPCPROPSHEETHEADERA;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef struct tagFINDREPLACEA * LPFINDREPLACEA;
typedef struct _CRYPT_BLOB_ARRAY * PCRYPT_BLOB_ARRAY;
typedef struct _PROPSHEETPAGEA * LPCPROPSHEETPAGEA_V2;
typedef struct MENUITEMTEMPLATE * PMENUITEMTEMPLATE;
typedef struct _CRYPT_PROVIDER_DATA CRYPT_PROVIDER_DATA;
typedef int ( * ABORTPROC)(struct HDC__ *,int);
typedef struct _DRIVER_INFO_2A * LPDRIVER_INFO_2A;
typedef struct _POINTFLOAT POINTFLOAT;
typedef struct tagMCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMSA;
typedef struct tagPSDA PAGESETUPDLG;
typedef struct tagMIDIINCAPSW MIDIINCAPSW;
typedef struct tagEMRROUNDRECT * PEMRROUNDRECT;
typedef struct _TOKEN_STATISTICS * PTOKEN_STATISTICS;
typedef struct tagMIXERCAPSA * LPMIXERCAPS;
typedef struct _PROPSHEETHEADERW * LPCPROPSHEETHEADERW;
typedef struct _CERT_X942_DH_PARAMETERS * PCERT_X942_DH_PARAMETERS;
typedef struct tagMCI_LOAD_PARMSW * PMCI_LOAD_PARMSW;
typedef enum _IDL_CS_CONVERT IDL_CS_CONVERT;
typedef struct IRunnableObject * LPRUNNABLEOBJECT;
typedef void ( * func57408716)(void *,unsigned int,int);
typedef void ( * RPC_SETFILTER_FUNC)(func57408716);
typedef struct tagMIDIINCAPSA MIDIINCAPSA;
typedef struct _CERT_REVOCATION_STATUS * PCERT_REVOCATION_STATUS;
typedef struct _MEMORY_BASIC_INFORMATION64 MEMORY_BASIC_INFORMATION64;
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
typedef struct _CRYPT_TRUST_REG_ENTRY * PCRYPT_TRUST_REG_ENTRY;
typedef struct _PROPSHEETPAGEW * LPCPROPSHEETPAGEW_V2;
typedef struct HINSTANCE__ * HMODULE;
typedef struct _CRYPT_OBJID_TABLE * PCRYPT_OBJID_TABLE;
typedef struct _tagBINDINFO BINDINFO;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY * PIMAGE_RESOURCE_DATA_ENTRY;
typedef struct tagAUXCAPSA AUXCAPS;
typedef int ( * ENUMRESNAMEPROCW)(struct HINSTANCE__ *,unsigned short *,unsigned short *,long);
typedef struct _PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1A;
typedef struct _VIDEOPARAMETERS VIDEOPARAMETERS;
typedef struct tagEMRRESIZEPALETTE * PEMRRESIZEPALETTE;
typedef struct tagMCI_WAVE_DELETE_PARMS * LPMCI_WAVE_DELETE_PARMS;
typedef struct _SHNAMEMAPPINGW SHNAMEMAPPINGW;
typedef struct _PRINTER_INFO_8A * LPPRINTER_INFO_8A;
typedef struct tagMCI_OVLY_SAVE_PARMSA * LPMCI_OVLY_SAVE_PARMSA;
typedef struct timeval * LPTIMEVAL;
typedef struct _IMAGE_NT_HEADERS IMAGE_NT_HEADERS;
typedef struct _ADDJOB_INFO_1A * PADDJOB_INFO_1A;
typedef struct _IMAGEHLP_SYMBOL_SRC IMAGEHLP_SYMBOL_SRC;
typedef struct _PROPSHEETPAGEA_V1 * LPPROPSHEETPAGEA_V1;
typedef struct IAuthenticate * LPAUTHENTICATION;
typedef struct _CERT_REQUEST_INFO CERT_REQUEST_INFO;
typedef struct _PROPSHEETPAGEA_V3 * LPPROPSHEETPAGEA_V3;
typedef unsigned long ( * LPTHREAD_START_ROUTINE)(void *);
typedef struct _PROPSHEETPAGEA * LPPROPSHEETPAGEA_V2;
typedef struct tagEMRARC * PEMRCHORD;
typedef struct tagEMRCREATECOLORSPACEW * PEMRCREATECOLORSPACEW;
typedef struct _MONITOR_INFO_1A MONITOR_INFO_1;
typedef struct WINTRUST_CATALOG_INFO_ * PWINTRUST_CATALOG_INFO;
typedef struct _SEC_WINNT_AUTH_IDENTITY_A * PSEC_WINNT_AUTH_IDENTITY_A;
typedef struct tagEMRPOLYLINE16 EMRPOLYGON16;
typedef struct tagEMRCREATEBRUSHINDIRECT EMRCREATEBRUSHINDIRECT;
typedef struct _ADDJOB_INFO_1W * PADDJOB_INFO_1W;
typedef enum _SYSTEM_POWER_STATE * PSYSTEM_POWER_STATE;
typedef struct _PRINTER_INFO_8W * LPPRINTER_INFO_8W;
typedef struct tagEMR EMR;
typedef struct tagEMRSETCOLORSPACE EMRSETCOLORSPACE;
typedef struct _DRIVER_INFO_6A DRIVER_INFO_6;
typedef struct _TAPE_GET_POSITION TAPE_GET_POSITION;
typedef struct _DRIVER_INFO_4A DRIVER_INFO_4;
typedef struct _DRIVER_INFO_5A DRIVER_INFO_5;
typedef struct _DRIVER_INFO_2A DRIVER_INFO_2;
typedef struct _DRIVER_INFO_3A DRIVER_INFO_3;
typedef struct tagMCI_WAVE_SET_PARMS MCI_WAVE_SET_PARMS;
typedef struct _SMALL_RECT SMALL_RECT;
typedef struct _DRIVER_INFO_1A DRIVER_INFO_1;
typedef struct _ICONINFO ICONINFO;
typedef struct tagPSDA * LPPAGESETUPDLG;
typedef struct linger * LPLINGER;
typedef struct _IO_COUNTERS IO_COUNTERS;
typedef struct tagRPC_CALL_ATTRIBUTES_V1_A RPC_CALL_ATTRIBUTES;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER * PIMAGE_COFF_SYMBOLS_HEADER;
typedef struct tagJOYCAPSA * LPJOYCAPS;
typedef enum tagCLSCTX CLSCTX;
typedef struct tagJOYCAPSA * NPJOYCAPS;
typedef struct _MINIDUMP_THREAD * PMINIDUMP_THREAD;
typedef unsigned long * PULONG_PTR;
typedef struct _JOB_INFO_2W * PJOB_INFO_2W;
typedef struct tagCOMPOSITIONFORM * PCOMPOSITIONFORM;
typedef char * PCSTR;
typedef struct _CMSG_RC2_AUX_INFO CMSG_RC2_AUX_INFO;
typedef struct _FLOATING_SAVE_AREA * PFLOATING_SAVE_AREA;
typedef struct _devicemodeA * NPDEVMODE;
typedef struct WINTRUST_SGNR_INFO_ WINTRUST_SGNR_INFO;
typedef unsigned long * PLCID;
typedef struct _devicemodeA * LPDEVMODE;
typedef struct _CERT_KEYGEN_REQUEST_INFO * PCERT_KEYGEN_REQUEST_INFO;
typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION CRYPT_ASYNC_RETRIEVAL_COMPLETION;
typedef struct tagRemHPALETTE RemHPALETTE;
typedef struct _STORAGE_PREDICT_FAILURE * PSTORAGE_PREDICT_FAILURE;
typedef struct _QOS_SHAPING_RATE QOS_SHAPING_RATE;
typedef struct _SPC_STATEMENT_TYPE SPC_STATEMENT_TYPE;
typedef void * PIMAGEHLP_CONTEXT;
typedef unsigned char u_char;
typedef struct _CRL_INFO CRL_INFO;
typedef void * RPC_NS_HANDLE;
typedef struct _MONITOR_INFO_1W MONITOR_INFO_1W;
typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
typedef struct _CERT_POLICY_INFO * PCERT_POLICY_INFO;
typedef struct tagEMRCREATECOLORSPACE * PEMRCREATECOLORSPACE;
typedef enum __MIDL_IBindStatusCallback_0002 BINDINFOF;
typedef enum _MEDIA_TYPE MEDIA_TYPE;
typedef struct tagMINIMIZEDMETRICS MINIMIZEDMETRICS;
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO * PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
typedef struct _s__RTTICompleteObjectLocator __RTTICompleteObjectLocator;
typedef struct _PRINTER_INFO_8A * LPPRINTER_INFO_8;
typedef struct _ADDJOB_INFO_1A * PADDJOB_INFO_1;
typedef struct _DISK_LOGGING DISK_LOGGING;
typedef struct tagEMRRESTOREDC EMRRESTOREDC;
typedef struct tagMONHSZSTRUCTW * PMONHSZSTRUCTW;
typedef void ( * _CRT_DUMP_CLIENT)(void *,unsigned int);
typedef struct _JOB_INFO_1W * PJOB_INFO_1W;
typedef struct _CRYPT_PROVIDER_FUNCTIONS CRYPT_PROVIDER_FUNCTIONS;
typedef struct tagMCI_STATUS_PARMS MCI_STATUS_PARMS;
typedef struct _MONITOR_INFO_1A MONITOR_INFO_1A;
typedef struct _SMALL_RECT * PSMALL_RECT;
typedef struct _IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;
typedef struct _PROPSHEETPAGEW * LPPROPSHEETPAGEW;
typedef struct _CERT_CHAIN_ELEMENT CERT_CHAIN_ELEMENT;
typedef struct _PROVDATA_SIP PROVDATA_SIP;
typedef struct tagEMRGLSRECORD EMRGLSRECORD;
typedef struct _EXCEPTION_DEBUG_INFO * LPEXCEPTION_DEBUG_INFO;
typedef void IMAGEHLP_CONTEXT;
typedef struct tagMONCBSTRUCT MONCBSTRUCT;
typedef struct _WIN32_FILE_ATTRIBUTE_DATA * LPWIN32_FILE_ATTRIBUTE_DATA;
typedef struct IInternetThreadSwitch * LPIINTERNETTHREADSWITCH;
typedef struct tagCHARSETINFO * PCHARSETINFO;
typedef struct tagMIXERLINEA MIXERLINEA;
typedef enum __MIDL_IBindStatusCallback_0006 BSCF;
typedef struct _CMSG_CMS_SIGNER_INFO CMSG_CMS_SIGNER_INFO;
typedef struct _GET_CHANGER_PARAMETERS GET_CHANGER_PARAMETERS;
typedef int ( * LANGGROUPLOCALE_ENUMPROCW)(unsigned long,unsigned long,unsigned short *,long);
typedef struct _DISCDLGSTRUCTA DISCDLGSTRUCTA;
typedef struct tagPSDA * LPPAGESETUPDLGA;
typedef unsigned char TBYTE;
typedef struct _CRYPT_SMIME_CAPABILITIES * PCRYPT_SMIME_CAPABILITIES;
typedef struct IHttpSecurity * LPHTTPSECURITY;
typedef struct _tagSOFTDISTINFO SOFTDISTINFO;
typedef unsigned char * PBYTE;
typedef struct tagFINDREPLACEA FINDREPLACEA;
typedef struct tagEMRELLIPSE * PEMRRECTANGLE;
typedef struct tagEMRPOLYPOLYLINE16 * PEMRPOLYPOLYLINE16;
typedef unsigned short UHALF_PTR;
typedef struct IPersistMoniker * LPPERSISTMONIKER;
typedef struct _IMAGE_OS2_HEADER * PIMAGE_OS2_HEADER;
typedef struct tagMCI_WAVE_OPEN_PARMSW * LPMCI_WAVE_OPEN_PARMSW;
typedef struct _MINIDUMP_INCLUDE_MODULE_CALLBACK * PMINIDUMP_INCLUDE_MODULE_CALLBACK;
typedef struct _GUID * LPCLSID;
typedef struct OPENCARD_SEARCH_CRITERIAA * POPENCARD_SEARCH_CRITERIA;
typedef short * PHALF_PTR;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION * PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;
typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR RTL_VERIFIER_DLL_DESCRIPTOR;
typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION * PACTIVATION_CONTEXT_DETAILED_INFORMATION;
typedef struct tagLOGBRUSH * PPATTERN;
typedef struct _WSANSClassInfoA * PWSANSCLASSINFO;
typedef struct _CMS_DH_KEY_INFO CMS_DH_KEY_INFO;
typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;
typedef struct tagEMRFRAMERGN * PEMRFRAMERGN;
typedef struct tagCOLORMATCHTOTARGET EMRCOLORMATCHTOTARGET;
typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64 IMAGEHLP_DEFERRED_SYMBOL_LOAD64;
typedef struct tagMCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMSA;
typedef struct _PARTITION_INFORMATION * PPARTITION_INFORMATION;
typedef struct _REMSECURITY_ATTRIBUTES * LPREMSECURITY_ATTRIBUTES;
typedef struct tagMIXERCAPSA MIXERCAPSA;
typedef int ( * LANGGROUPLOCALE_ENUMPROCA)(unsigned long,unsigned long,char *,long);
typedef struct tagPSDW * LPPAGESETUPDLGW;
typedef int ( * PFN_CRYPT_CANCEL_RETRIEVAL)(unsigned long,void *);
typedef struct _MINIDUMP_HANDLE_DESCRIPTOR * PMINIDUMP_HANDLE_DESCRIPTOR;
typedef struct tagLC_STRINGS LC_STRINGS;
typedef void * ( * PSYMBOL_FUNCENTRY_CALLBACK)(void *,unsigned long,void *);
typedef struct _CERT_BASIC_CONSTRAINTS2_INFO * PCERT_BASIC_CONSTRAINTS2_INFO;
typedef struct tagMINIMIZEDMETRICS * LPMINIMIZEDMETRICS;
typedef struct tagDROPSTRUCT * LPDROPSTRUCT;
typedef struct _CMSG_CMS_SIGNER_INFO * PCMSG_CMS_SIGNER_INFO;
typedef struct tagENUMLOGFONTA * LPENUMLOGFONTA;
typedef struct _GET_MEDIA_TYPES GET_MEDIA_TYPES;
typedef struct tagLOGBRUSH PATTERN;
typedef struct API_VERSION * LPAPI_VERSION;
typedef int ( * _CRT_REPORT_HOOK)(int,char *,int *);
typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE * PCRYPT_ATTRIBUTE_TYPE_VALUE;
typedef unsigned long * LPDWORD;
typedef struct _PORT_INFO_2W PORT_INFO_2W;
typedef struct _LIST_ENTRY * PLIST_ENTRY;
typedef struct _CRYPT_DECRYPT_MESSAGE_PARA * PCRYPT_DECRYPT_MESSAGE_PARA;
typedef struct tagREGISTERWORDA * PREGISTERWORD;
typedef struct _WSANAMESPACE_INFOA * PWSANAMESPACE_INFO;
typedef struct _PROPSHEETPAGEA_V3 PROPSHEETPAGEA_V3;
typedef struct _WIN32_FIND_DATAW WIN32_FIND_DATAW;
typedef struct _PROPSHEETPAGEA PROPSHEETPAGEA_V2;
typedef struct HCOLORSPACE__ * HCOLORSPACE;
typedef struct tagCBT_CREATEWNDA CBT_CREATEWND;
typedef struct _DRIVER_INFO_3A * PDRIVER_INFO_3;
typedef struct _PROPSHEETPAGEA_V1 PROPSHEETPAGEA_V1;
typedef struct _PRINTER_NOTIFY_INFO_DATA * PPRINTER_NOTIFY_INFO_DATA;
typedef struct tagSTYLEBUFA STYLEBUF;
typedef struct tagMENUBARINFO MENUBARINFO;
typedef struct _tagADDRESS ADDRESS;
typedef struct _CRYPTOAPI_BLOB * PCERT_NAME_BLOB;
typedef struct _CHANGER_PRODUCT_DATA CHANGER_PRODUCT_DATA;
typedef struct _JOBOBJECT_JOBSET_INFORMATION JOBOBJECT_JOBSET_INFORMATION;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE * PISECURITY_DESCRIPTOR_RELATIVE;
typedef enum tagLIBFLAGS LIBFLAGS;
typedef struct tagMINMAXINFO MINMAXINFO;
typedef struct timecaps_tag TIMECAPS;
typedef struct tagICONMETRICSA * PICONMETRICS;
typedef struct OPENCARDNAME_EXA * POPENCARDNAME_EX;
typedef struct _TIME_ZONE_INFORMATION * PTIME_ZONE_INFORMATION;
typedef unsigned __int64 ULONG64;
typedef struct tagEMRSELECTOBJECT EMRDELETEOBJECT;
typedef unsigned long DWORD_PTR;
typedef struct _PORT_INFO_3W PORT_INFO_3W;
typedef struct _PRINTER_INFO_1A PRINTER_INFO_1A;
typedef struct tagCAPROPVARIANT CAPROPVARIANT;
typedef __int64 * PLONG64;
typedef struct tagWNDCLASSA * PWNDCLASS;
typedef struct tagWNDCLASSA WNDCLASSA;
typedef struct tagTPMPARAMS * LPTPMPARAMS;
typedef unsigned int * intrnman;
typedef struct _IMAGEHLP_CBA_READ_MEMORY IMAGEHLP_CBA_READ_MEMORY;
typedef struct _PUBKEY DHPUBKEY;
typedef struct tagCACLIPDATA CACLIPDATA;
typedef struct SCARD_READERSTATEA * LPSCARD_READERSTATE;
typedef struct _SERVICE_TABLE_ENTRYW * LPSERVICE_TABLE_ENTRYW;
typedef enum tagREGCLS REGCLS;
typedef struct tagBITMAPINFO * LPBITMAPINFO;
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA CERT_CHAIN_FIND_ISSUER_PARA;
typedef struct _EXCEPTION_POINTERS * PEXCEPTION_POINTERS;
typedef struct tagXFORM XFORM;
typedef struct tagWNDCLASSW WNDCLASSW;
typedef struct _BYTE_BLOB * UP_BYTE_BLOB;
typedef struct tagEMRSELECTOBJECT EMRSELECTOBJECT;
typedef struct _PRINTER_INFO_1W PRINTER_INFO_1W;
typedef struct mmtime_tag * PMMTIME;
typedef struct _MIDL_SERVER_INFO_ MIDL_SERVER_INFO;
typedef void * * RPC_EP_INQ_HANDLE;
typedef struct tagRPC_ERROR_ENUM_HANDLE RPC_ERROR_ENUM_HANDLE;
typedef struct _RemotableHandle * wireHMENU;
typedef struct tagHELPWININFOW HELPWININFOW;
typedef void ( * CS_TAG_GETTING_ROUTINE)(void *,int,unsigned long *,unsigned long *,unsigned long *,unsigned long *);
typedef struct tagPELARRAY * PPELARRAY;
typedef struct _IMAGEHLP_LINE64 * PIMAGEHLP_LINE64;
typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE CERT_POLICY_QUALIFIER_USER_NOTICE;
typedef struct _HTTPSPolicyCallbackData HTTPSPolicyCallbackData;
typedef struct tagENUMLOGFONTA ENUMLOGFONTA;
typedef int ( * PFN_CMSG_EXPORT_ENCRYPT_KEY)(unsigned long,unsigned long,struct _CERT_PUBLIC_KEY_INFO *,unsigned char *,unsigned long *);
typedef struct _DRIVER_INFO_3W * PDRIVER_INFO_3W;
typedef struct tagEMRSETPIXELV * PEMRSETPIXELV;
typedef struct _WSANAMESPACE_INFOW * PWSANAMESPACE_INFOW;
typedef void ( * PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)(char *,void *);
typedef struct _CERT_SIGNED_CONTENT_INFO * PCERT_SIGNED_CONTENT_INFO;
typedef struct _userFLAG_STGMEDIUM userFLAG_STGMEDIUM;
typedef struct _CERT_INFO CERT_INFO;
typedef struct _CRYPT_CONTENT_INFO * PCRYPT_CONTENT_INFO;
typedef struct tagSTYLEBUFW STYLEBUFW;
typedef struct _CERT_AUTHORITY_KEY_ID_INFO CERT_AUTHORITY_KEY_ID_INFO;
typedef struct _FLAGGED_WORD_BLOB * wireBSTR;
typedef struct _CERT_POLICY_ID CERT_POLICY_ID;
typedef struct _TOKEN_AUDIT_POLICY * PTOKEN_AUDIT_POLICY;
typedef struct _WSANAMESPACE_INFOA * PWSANAMESPACE_INFOA;
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
typedef struct tagBIND_OPTS2 * LPBIND_OPTS2;
typedef void * ( * PFN_CRYPT_ALLOC)(unsigned int);
typedef struct _IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER;
typedef struct _DRIVER_INFO_3A * PDRIVER_INFO_3A;
typedef struct tagSTYLEBUFA STYLEBUFA;
typedef struct _QUOTA_LIMITS_EX * PQUOTA_LIMITS_EX;
typedef struct _CRYPT_REGISTER_ACTIONID CRYPT_REGISTER_ACTIONID;
typedef struct _SPC_INDIRECT_DATA_CONTENT * PSPC_INDIRECT_DATA_CONTENT;
typedef struct tagCADATE CADATE;
typedef struct tagEMREXTCREATEFONTINDIRECTW * PEMREXTCREATEFONTINDIRECTW;
typedef struct _wireBRECORD * wireBRECORD;
typedef struct tagFINDREPLACEA * LPFINDREPLACE;
typedef struct tagMCI_PLAY_PARMS * PMCI_PLAY_PARMS;
typedef struct tagMCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMS;
typedef struct _IMAGEHLP_SYMBOL_PACKAGE * PIMAGEHLP_SYMBOL_PACKAGE;
typedef struct tagBITMAPCOREINFO * LPBITMAPCOREINFO;
typedef struct _CPS_URLS CPS_URLS;
typedef struct tagICONMETRICSA * PICONMETRICSA;
typedef struct OPENCARDNAME_EXA * POPENCARDNAME_EXA;
typedef struct _PROPSHEETPAGEA_V3 * LPCPROPSHEETPAGEA_V3;
typedef struct _RPC_POLICY * PRPC_POLICY;
typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA * PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
typedef struct HMMIO__ * HMMIO;
typedef struct tagMIXERLINEA * LPMIXERLINE;
typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTA;
typedef struct tagEMREXCLUDECLIPRECT * PEMRINTERSECTCLIPRECT;
typedef struct _CRYPT_PKCS8_EXPORT_PARAMS CRYPT_PKCS8_EXPORT_PARAMS;
typedef struct _PRINTER_INFO_1A PRINTER_INFO_1;
typedef struct tagEMRSCALEVIEWPORTEXTEX * PEMRSCALEWINDOWEXTEX;
typedef struct _PORT_INFO_1W PORT_INFO_1W;
typedef struct tagWNDCLASSA WNDCLASS;
typedef struct _SID_AND_ATTRIBUTES[1] SID_AND_ATTRIBUTES_ARRAY;
typedef struct tagEMRSETVIEWPORTEXTEX * PEMRSETWINDOWEXTEX;
typedef struct _DEVICE_MEDIA_INFO * PDEVICE_MEDIA_INFO;
typedef struct _IMAGE_SECTION_HEADER * PIMAGE_SECTION_HEADER;
typedef struct tagDDEML_MSG_HOOK_DATA DDEML_MSG_HOOK_DATA;
typedef struct _CRYPT_PROVIDER_CERT CRYPT_PROVIDER_CERT;
typedef struct __GENERIC_BINDING_INFO * PGENERIC_BINDING_INFO;
typedef struct _RACE_SCHEDULE_ RACE_SCHEDULE;
typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTW;
typedef struct _SYSTEM_AUDIT_OBJECT_ACE * PSYSTEM_AUDIT_OBJECT_ACE;
typedef struct _MINIDUMP_MEMORY_DESCRIPTOR * PMINIDUMP_MEMORY_DESCRIPTOR;
typedef struct tagRemSNB RemSNB;
typedef struct _MEMORY_BASIC_INFORMATION32 * PMEMORY_BASIC_INFORMATION32;
typedef struct _MINIDUMP_CALLBACK_INPUT * PMINIDUMP_CALLBACK_INPUT;
typedef struct _CMC_TAGGED_OTHER_MSG * PCMC_TAGGED_OTHER_MSG;
typedef struct tagICONMETRICSW * PICONMETRICSW;
typedef unsigned int ( * LPPRINTHOOKPROC)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct OPENCARDNAME_EXW * POPENCARDNAME_EXW;
typedef struct _PROPSHEETPAGEW_V3 * LPCPROPSHEETPAGEW_V3;
typedef unsigned long * PSCARDCONTEXT;
typedef struct _SESSION_BUFFER * PSESSION_BUFFER;
typedef struct tagMCI_OPEN_PARMSA * PMCI_OPEN_PARMSA;
typedef struct _s_TryBlockMapEntry TryBlockMapEntry;
typedef struct _QSORT_ELEMENT_ QSORT_ELEM;
typedef struct tagOFN_NT4A OPENFILENAME_NT4;
typedef struct _CERT_CHAIN CERT_CHAIN;
typedef struct tagEMROFFSETCLIPRGN * PEMROFFSETCLIPRGN;
typedef struct _SYSTEM_ALARM_OBJECT_ACE SYSTEM_ALARM_OBJECT_ACE;
typedef enum _tagPI_FLAGS PI_FLAGS;
typedef enum _WSAESETSERVICEOP * LPWSAESETSERVICEOP;
typedef struct _PRINTER_ENUM_VALUESA * PPRINTER_ENUM_VALUESA;
typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO * PCMSG_KEY_TRANS_ENCRYPT_INFO;
typedef struct _CERT_TEMPLATE_EXT * PCERT_TEMPLATE_EXT;
typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYGON;
typedef struct _CRYPTOAPI_BLOB * PCRYPT_DIGEST_BLOB;
typedef struct _PRINTER_NOTIFY_INFO * LPPRINTER_NOTIFY_INFO;
typedef struct tagNONCLIENTMETRICSW * PNONCLIENTMETRICSW;
typedef int INT;
typedef struct _MONITOR_INFO_2A MONITOR_INFO_2;
typedef struct _RPC_SERVER_INTERFACE * PRPC_SERVER_INTERFACE;
typedef struct _wireSAFEARRAY_UNION SAFEARRAYUNION;
typedef struct _MINIDUMP_CALLBACK_OUTPUT * PMINIDUMP_CALLBACK_OUTPUT;
typedef struct _ENUM_SERVICE_STATUS_PROCESSA * LPENUM_SERVICE_STATUS_PROCESS;
typedef struct _MINIDUMP_USER_RECORD MINIDUMP_USER_RECORD;
typedef unsigned short * * SNB;
typedef struct tagMCI_OVLY_OPEN_PARMSA * PMCI_OVLY_OPEN_PARMS;
typedef struct _CRYPTOAPI_BLOB CERT_RDN_VALUE_BLOB;
typedef enum _TAPE_DRIVE_PROBLEM_TYPE TAPE_DRIVE_PROBLEM_TYPE;
typedef struct _PRINTER_ENUM_VALUESW * PPRINTER_ENUM_VALUESW;
typedef struct tagEMRPOLYLINE * PEMRPOLYGON;
typedef struct _NOTIFYICONDATAW * PNOTIFYICONDATAW;
typedef struct tagMIXERCAPS2W MIXERCAPS2W;
typedef struct _SCHANNEL_ALG SCHANNEL_ALG;
typedef int ( * PFN_ALLOCANDFILLDEFUSAGE)(char *,struct _CRYPT_PROVIDER_DEFUSAGE *);
typedef struct linger * PLINGER;
typedef struct tagMETAFILEPICT * LPMETAFILEPICT;
typedef struct midiproptempo_tag * LPMIDIPROPTEMPO;
typedef struct _MINIDUMP_USER_STREAM * PMINIDUMP_USER_STREAM;
typedef unsigned long LCID;
typedef struct HICON__ * HICON;
typedef struct IOleInPlaceFrame * LPOLEINPLACEFRAME;
typedef struct _IMAGEHLP_SYMBOL64 * PIMAGEHLP_SYMBOL64;
typedef struct _SOCKET_ADDRESS_LIST SOCKET_ADDRESS_LIST;
typedef struct tagACCEL * LPACCEL;
typedef char * HPSTR;
typedef struct _IMAGE_BOUND_FORWARDER_REF IMAGE_BOUND_FORWARDER_REF;
typedef struct tagMIDIOUTCAPSA * NPMIDIOUTCAPS;
typedef char * LPSTR;
typedef struct tagACCEL ACCEL;
typedef struct tagBITMAP * PBITMAP;
typedef struct tagMIDIOUTCAPSA * LPMIDIOUTCAPS;
typedef struct tagDRAWTEXTPARAMS DRAWTEXTPARAMS;
typedef struct _WIN_TRUST_SUBJECT_FILE WIN_TRUST_SUBJECT_FILE;
typedef char * NPSTR;
typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO * PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
typedef struct HWINEVENTHOOK__ * HWINEVENTHOOK;
typedef struct _NDR_ASYNC_MESSAGE * PNDR_ASYNC_MESSAGE;
typedef struct tagMIXERCAPS2A MIXERCAPS2A;
typedef struct tagMONLINKSTRUCT * PMONLINKSTRUCT;
typedef void * ( * PFUNCTION_TABLE_ACCESS_ROUTINE64)(void *,unsigned __int64);
typedef struct HBITMAP__ * HBITMAP;
typedef struct tagMONITORINFOEXW MONITORINFOEXW;
typedef void * ( * PFN_CPD_MEM_ALLOC)(unsigned long);
typedef void * PSID;
typedef struct _STARTUPINFOA STARTUPINFO;
typedef unsigned int ( * PSYMBOLSERVERGETOPTIONSPROC)();
typedef struct tagPOINTFX POINTFX;
typedef struct _MINIDUMP_FUNCTION_TABLE_STREAM * PMINIDUMP_FUNCTION_TABLE_STREAM;
typedef enum _ELEMENT_TYPE * PELEMENT_TYPE;
typedef struct _numberfmtW NUMBERFMTW;
typedef struct _CMC_ADD_ATTRIBUTES_INFO CMC_ADD_ATTRIBUTES_INFO;
typedef struct _CRYPTOAPI_BLOB DATA_BLOB;
typedef struct _RTL_CRITICAL_SECTION CRITICAL_SECTION;
typedef struct tagOFN_NT4A OPENFILENAME_NT4A;
typedef struct _IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;
typedef struct _BY_HANDLE_FILE_INFORMATION * PBY_HANDLE_FILE_INFORMATION;
typedef enum tagVARKIND VARKIND;
typedef struct IMalloc * LPMALLOC;
typedef struct IMallocSpy * LPMALLOCSPY;
typedef struct _JOB_SET_ARRAY * PJOB_SET_ARRAY;
typedef struct IOleInPlaceActiveObject * LPOLEINPLACEACTIVEOBJECT;
typedef struct _TOKEN_AUDIT_POLICY_ELEMENT * PTOKEN_AUDIT_POLICY_ELEMENT;
typedef struct _MONITOR_INFO_2W MONITOR_INFO_2W;
typedef struct _nlsversioninfo * LPNLSVERSIONINFO;
typedef struct tagIMEMENUITEMINFOA IMEMENUITEMINFOA;
typedef struct _CRYPT_PKCS8_EXPORT_PARAMS * PCRYPT_PKCS8_EXPORT_PARAMS;
typedef struct _PRINTER_ENUM_VALUESA * PPRINTER_ENUM_VALUES;
typedef struct _CERT_POLICY_MAPPINGS_INFO * PCERT_POLICY_MAPPINGS_INFO;
typedef struct tagBITMAPCOREHEADER BITMAPCOREHEADER;
typedef struct tagEMRSETICMPROFILE * PEMRSETICMPROFILE;
typedef struct tagMCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMS;
typedef struct _CRYPT_VERIFY_MESSAGE_PARA * PCRYPT_VERIFY_MESSAGE_PARA;
typedef struct IStream * LPSTREAM;
typedef struct _SOURCEFILE * PSOURCEFILE;
typedef struct _REASSIGN_BLOCKS REASSIGN_BLOCKS;
typedef struct tagMCI_OVLY_OPEN_PARMSW * PMCI_OVLY_OPEN_PARMSW;
typedef struct tagHANDLETABLE HANDLETABLE;
typedef struct tagCABSTRBLOB CABSTRBLOB;
typedef struct _MONITOR_INFO_2A MONITOR_INFO_2A;
typedef struct tagOFN_NT4W OPENFILENAME_NT4W;
typedef struct _MINIDUMP_USER_STREAM MINIDUMP_USER_STREAM;
typedef int ( * PFN_CRYPT_ENUM_OID_FUNC)(unsigned long,char *,char *,unsigned long,unsigned long *,unsigned short * *,unsigned char * *,unsigned long *,void *);
typedef struct _LONG_SIZEDARR DWORD_SIZEDARR;
typedef struct tagMCI_OVLY_OPEN_PARMSA * PMCI_OVLY_OPEN_PARMSA;
typedef struct _CRL_CONTEXT CRL_CONTEXT;
typedef enum _WSAEcomparator * LPWSAECOMPARATOR;
typedef struct tagEMRGRADIENTFILL EMRGRADIENTFILL;
typedef struct _TOKEN_STATISTICS TOKEN_STATISTICS;
typedef unsigned long ( * PFE_IMPORT_FUNC)(unsigned char *,void *,unsigned long *);
typedef struct _NETRESOURCEW * LPNETRESOURCEW;
typedef struct tagMENUGETOBJECTINFO MENUGETOBJECTINFO;
typedef struct _RTL_CRITICAL_SECTION_DEBUG * LPCRITICAL_SECTION_DEBUG;
typedef enum tagSERVERCALL SERVERCALL;
typedef struct tagMETAFILEPICT METAFILEPICT;
typedef struct _RGNDATA * PRGNDATA;
typedef struct _OSVERSIONINFOA OSVERSIONINFOA;
typedef struct _RTL_CRITICAL_SECTION * LPCRITICAL_SECTION;
typedef void (MIDICALLBACK)(struct HDRVR__ *,unsigned int,unsigned long,unsigned long,unsigned long);
typedef struct _CMSG_STREAM_INFO * PCMSG_STREAM_INFO;
typedef struct tagMIXERLINECONTROLSA MIXERLINECONTROLSA;
typedef struct threadmbcinfostruct threadmbcinfo;
typedef struct _FOCUS_EVENT_RECORD FOCUS_EVENT_RECORD;
typedef struct tagTITLEBARINFO TITLEBARINFO;
typedef struct IEnumContextProps * LPENUMCONTEXTPROPS;
typedef void ( * CS_TYPE_LOCAL_SIZE_ROUTINE)(void *,unsigned long,unsigned long,enum _IDL_CS_CONVERT *,unsigned long *,unsigned long *);
typedef struct HMIXER__ * HMIXER;
typedef struct tagWAVEOUTCAPSW * LPWAVEOUTCAPSW;
typedef struct tagEMRSETCOLORSPACE * PEMRSELECTCOLORSPACE;
typedef struct tagWAVEOUTCAPSW * NPWAVEOUTCAPSW;
typedef struct tagEMRSETCOLORSPACE EMRDELETECOLORSPACE;
typedef struct _QUERY_SERVICE_LOCK_STATUSA * LPQUERY_SERVICE_LOCK_STATUSA;
typedef struct _UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFO;
typedef struct _PROPSHEETPAGEW_V3 * LPPROPSHEETPAGEW_LATEST;
typedef unsigned short * LPOLESTR;
typedef struct _FULL_PTR_TO_REFID_ELEMENT FULL_PTR_TO_REFID_ELEMENT;
typedef struct _tagCODEBASEHOLD CODEBASEHOLD;
typedef struct _CERT_GENERAL_SUBTREE * PCERT_GENERAL_SUBTREE;
typedef struct tagMIXERCAPS2A MIXERCAPS2;
typedef struct _WSANAMESPACE_INFOW WSANAMESPACE_INFOW;
typedef struct _RPC_SECURITY_QOS RPC_SECURITY_QOS;
typedef enum _WSACOMPLETIONTYPE WSACOMPLETIONTYPE;
typedef struct _PROPSHEETPAGEW_V3 PROPSHEETPAGEW_LATEST;
typedef unsigned int ( * LPCCHOOKPROC)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct tagMCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMSA;
typedef struct tagEXTLOGFONTA * PEXTLOGFONTA;
typedef struct tagHELPWININFOW * LPHELPWININFOW;
typedef struct _FORMAT_PARAMETERS FORMAT_PARAMETERS;
typedef unsigned char * LPCBYTE;
typedef unsigned __int64 u_int64;
typedef struct _CRYPT_BIT_BLOB CRYPT_BIT_BLOB;
typedef struct _QOS_SHAPING_RATE * LPQOS_SHAPING_RATE;
typedef enum _WSAESETSERVICEOP * PWSAESETSERVICEOP;
typedef struct tagEMRSETCOLORSPACE EMRSELECTCOLORSPACE;
typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY * PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
typedef struct tagMCI_INFO_PARMSW * LPMCI_INFO_PARMSW;
typedef struct tagOFNA OPENFILENAME;
typedef struct tagIMEMENUITEMINFOA * NPIMEMENUITEMINFOA;
typedef struct tagEMRPOLYLINE EMRPOLYLINETO;
typedef enum _APTTYPE APTTYPE;
typedef struct tagCOMBOBOXINFO COMBOBOXINFO;
typedef struct tagIMEMENUITEMINFOA * LPIMEMENUITEMINFOA;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef struct tagMIXERLINECONTROLSA * PMIXERLINECONTROLSA;
typedef struct _PRINTER_DEFAULTSA * PPRINTER_DEFAULTSA;
typedef struct IOleLink * LPOLELINK;
typedef struct _DISCDLGSTRUCTA * LPDISCDLGSTRUCT;
typedef union _CPU_INFORMATION * PCPU_INFORMATION;
typedef void ( * NDR_RUNDOWN)(void *);
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXT;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE * PACCESS_ALLOWED_CALLBACK_ACE;
typedef struct tagMIDIINCAPSW * PMIDIINCAPSW;
typedef struct _WORD_BLOB * UP_WORD_BLOB;
typedef struct tagEMRSETVIEWPORTEXTEX EMRSETWINDOWEXTEX;
typedef struct _PERF_COUNTER_DEFINITION PERF_COUNTER_DEFINITION;
typedef struct tagANIMATIONINFO ANIMATIONINFO;
typedef struct _BIN_COUNT * PBIN_COUNT;
typedef struct tagMIDIOUTCAPS2W * PMIDIOUTCAPS2W;
typedef double DATE;
typedef int ( * PSYMBOL_REGISTERED_CALLBACK)(void *,unsigned long,void *,void *);
typedef struct _KDHELP64 KDHELP64;
typedef void ( * EXPR_EVAL)(struct _MIDL_STUB_MESSAGE *);
typedef struct _CERT_AUTHORITY_INFO_ACCESS CERT_AUTHORITY_INFO_ACCESS;
typedef struct _SYSTEM_INFO SYSTEM_INFO;
typedef struct tagENUMLOGFONTEXW ENUMLOGFONTEXW;
typedef struct tagMIXERLINECONTROLSW * PMIXERLINECONTROLSW;
typedef struct tagMCI_BREAK_PARMS * LPMCI_BREAK_PARMS;
typedef struct _IMAGEHLP_DUPLICATE_SYMBOL64 * PIMAGEHLP_DUPLICATE_SYMBOL64;
typedef struct tagCWPRETSTRUCT * PCWPRETSTRUCT;
typedef struct tagMCI_INFO_PARMSA * LPMCI_INFO_PARMSA;
typedef unsigned long ( * PTHREAD_START_ROUTINE)(void *);
typedef struct _SYSTEMTIME * PSYSTEMTIME;
typedef struct _IMAGE_OPTIONAL_HEADER * PIMAGE_OPTIONAL_HEADER;
typedef struct tagEMRPOLYDRAW16 EMRPOLYDRAW16;
typedef struct _CRYPT_CSP_PROVIDER * PCRYPT_CSP_PROVIDER;
typedef struct tagMCI_ANIM_PLAY_PARMS MCI_ANIM_PLAY_PARMS;
typedef struct tagSTYLEBUFA * NPSTYLEBUF;
typedef void ( * PFLS_CALLBACK_FUNCTION)(void *);
typedef struct tagSTYLEBUFA * LPSTYLEBUF;
typedef int ( * DESKTOPENUMPROCA)(char *,long);
typedef int ( * PFN_CMSG_IMPORT_KEY_AGREE)(struct _CRYPT_ALGORITHM_IDENTIFIER *,struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA *,unsigned long,void *,unsigned long *);
typedef void * HCRYPTMSG;
typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA WIN_SPUB_TRUSTED_PUBLISHER_DATA;
typedef struct _CTL_USAGE * PCTL_USAGE;
typedef struct IPropertySetStorage * LPPROPERTYSETSTORAGE;
typedef struct tagMCI_WAVE_OPEN_PARMSW * PMCI_WAVE_OPEN_PARMSW;
typedef struct tagOFNA * LPOPENFILENAME;
typedef enum tagMKREDUCE MKRREDUCE;
typedef struct tagMULTIKEYHELPA MULTIKEYHELP;
typedef struct HHOOK__ * HHOOK;
typedef struct tagRECT BORDERWIDTHS;
typedef struct _PRINTER_INFO_2A PRINTER_INFO_2A;
typedef struct _CRYPT_OID_FUNC_ENTRY CRYPT_OID_FUNC_ENTRY;
typedef struct tagPELARRAY PELARRAY;
typedef void ( * PDRVCALLBACK)(struct HDRVR__ *,unsigned int,unsigned long,unsigned long,unsigned long);
typedef struct tagEMRSETCOLORSPACE * PEMRSETCOLORSPACE;
typedef struct tagKERNINGPAIR KERNINGPAIR;
typedef struct tagABORTPATH EMRSAVEDC;
typedef struct tagPAINTSTRUCT PAINTSTRUCT;
typedef struct _CRYPT_PROVUI_FUNCS * PCRYPT_PROVUI_FUNCS;
typedef struct tagMCI_WAVE_OPEN_PARMSA * PMCI_WAVE_OPEN_PARMSA;
typedef struct _PROVIDOR_INFO_1W PROVIDOR_INFO_1W;
typedef struct _PRIVILEGE_SET PRIVILEGE_SET;
typedef struct _CERT_CHAIN_ELEMENT * PCERT_CHAIN_ELEMENT;
typedef unsigned int GROUP;
typedef long SCODE;
typedef unsigned short * PUWSTR;
typedef enum _STORAGE_BUS_TYPE * PSTORAGE_BUS_TYPE;
typedef struct _userHMETAFILEPICT * wireHMETAFILEPICT;
typedef struct _OUTLINETEXTMETRICW OUTLINETEXTMETRICW;
typedef struct _PRINTER_INFO_2W PRINTER_INFO_2W;
typedef struct tagMCI_ANIM_OPEN_PARMSA * LPMCI_ANIM_OPEN_PARMSA;
typedef __int64 fpos_t;
typedef struct _CERT_SIMPLE_CHAIN CERT_SIMPLE_CHAIN;
typedef struct IOleCacheControl * LPOLECACHECONTROL;
typedef struct tagMCI_SYSINFO_PARMSW MCI_SYSINFO_PARMSW;
typedef struct tagEMR * PEMR;
typedef struct tagCHOOSECOLORW CHOOSECOLORW;
typedef struct tagOFNA OPENFILENAMEA;
typedef long ( * PTOP_LEVEL_EXCEPTION_FILTER)(struct _EXCEPTION_POINTERS *);
typedef void ( * LPMIDICALLBACK)(struct HDRVR__ *,unsigned int,unsigned long,unsigned long,unsigned long);
typedef struct _SESSION_HEADER SESSION_HEADER;
typedef struct tagMIXERLINECONTROLSA * PMIXERLINECONTROLS;
typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION ACTIVATION_CONTEXT_DETAILED_INFORMATION;
typedef struct tagCHOOSECOLORW * LPCHOOSECOLORW;
typedef struct _IMAGEHLP_LINE64 IMAGEHLP_LINE64;
typedef struct pvalueA * PPVALUE;
typedef struct _CERT_INFO * PCERT_INFO;
typedef struct _NETRESOURCEW NETRESOURCEW;
typedef enum _WSAEcomparator * PWSAECOMPARATOR;
typedef struct tagSTYLEBUFW * LPSTYLEBUFW;
typedef struct tagTPMPARAMS TPMPARAMS;
typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE USER_MARSHAL_ROUTINE_QUADRUPLE;
typedef struct tagSTYLEBUFW * NPSTYLEBUFW;
typedef struct _LANA_ENUM * PLANA_ENUM;
typedef struct tagANIMATIONINFO * LPANIMATIONINFO;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXTA;
typedef struct _HISTOGRAM_BUCKET HISTOGRAM_BUCKET;
typedef struct tagCWPRETSTRUCT * NPCWPRETSTRUCT;
typedef struct _tagHIT_LOGGING_INFO * LPHIT_LOGGING_INFO;
typedef struct tagCWPRETSTRUCT * LPCWPRETSTRUCT;
typedef struct _VIDEOPARAMETERS * PVIDEOPARAMETERS;
typedef struct tagMENUINFO * LPCMENUINFO;
typedef struct _GUID FMTID;
typedef struct _RGNDATA RGNDATA;
typedef struct tagOFNW OPENFILENAMEW;
typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR * PRTL_VERIFIER_THUNK_DESCRIPTOR;
typedef struct tagMCI_INFO_PARMSA * LPMCI_INFO_PARMS;
typedef struct _PROVIDOR_INFO_2W PROVIDOR_INFO_2W;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION * PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef char * PUTSTR;
typedef int s_long;
typedef struct _MIDL_STUB_MESSAGE MIDL_STUB_MESSAGE;
typedef struct tagSTYLEBUFA * NPSTYLEBUFA;
typedef struct _s__CatchableType _CatchableType;
typedef struct tagBITMAP BITMAP;
typedef unsigned long u_long;
typedef struct _ACCESS_ALLOWED_ACE ACCESS_ALLOWED_ACE;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW MIXERCONTROLDETAILS_LISTTEXTW;
typedef struct tagSTYLEBUFA * LPSTYLEBUFA;
typedef struct _CRYPTOAPI_BLOB CRYPT_ATTR_BLOB;
typedef struct _GRADIENT_TRIANGLE * PGRADIENT_TRIANGLE;
typedef void ( * NDR_NOTIFY_ROUTINE)();
typedef struct tagCOMBOBOXINFO * LPCOMBOBOXINFO;
typedef struct tagOFNA * LPOPENFILENAMEA;
typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
typedef unsigned char cs_byte;
typedef void * HCONTEXT;
typedef struct _ABCFLOAT * NPABCFLOAT;
typedef struct tagMULTIKEYHELPA MULTIKEYHELPA;
typedef struct tagMOUSEHOOKSTRUCT * PMOUSEHOOKSTRUCT;
typedef unsigned long * PSCARDHANDLE;
typedef struct _IMAGE_OPTIONAL_HEADER * PIMAGE_OPTIONAL_HEADER32;
typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION CHANGER_SEND_VOLUME_TAG_INFORMATION;
typedef struct _ABCFLOAT * LPABCFLOAT;
typedef enum tagOLEVERBATTRIB OLEVERBATTRIB;
typedef struct _MEMORY_BASIC_INFORMATION * PMEMORY_BASIC_INFORMATION;
typedef struct tagMCI_WAVE_DELETE_PARMS MCI_WAVE_DELETE_PARMS;
typedef unsigned int _dev_t;
typedef struct _PRINTER_INFO_2A PRINTER_INFO_2;
typedef struct _ABCFLOAT * PABCFLOAT;
typedef struct ITypeInfo * LPTYPEINFO;
typedef struct tagMCI_ANIM_PLAY_PARMS * PMCI_ANIM_PLAY_PARMS;
typedef struct _CONTEXT * PCONTEXT;
typedef struct tagOFNW * LPOPENFILENAMEW;
typedef struct SCARD_T1_REQUEST * LPSCARD_T1_REQUEST;
typedef struct tagMCI_WAVE_OPEN_PARMSA * PMCI_WAVE_OPEN_PARMS;
typedef enum _RPC_ASYNC_EVENT RPC_ASYNC_EVENT;
typedef struct _MIDL_SYNTAX_INFO * PMIDL_SYNTAX_INFO;
typedef struct OPENCARDNAME_EXW * LPOPENCARDNAME_EXW;
typedef struct SPC_SIGINFO_ * PSPC_SIGINFO;
typedef struct tagEMRSETMAPPERFLAGS * PEMRSETMAPPERFLAGS;
typedef struct SYSTEM_POWER_LEVEL * PSYSTEM_POWER_LEVEL;
typedef struct _CTL_FIND_SUBJECT_PARA CTL_FIND_SUBJECT_PARA;
typedef struct ITypeInfo2 * LPTYPEINFO2;
typedef void * HDWP;
typedef struct _CTL_USAGE CTL_USAGE;
typedef struct tagMCI_VD_STEP_PARMS * LPMCI_VD_STEP_PARMS;
typedef struct _EXCEPTION_DEBUG_INFO EXCEPTION_DEBUG_INFO;
typedef struct _SPC_IMAGE * PSPC_IMAGE;
typedef struct tagMULTIKEYHELPW MULTIKEYHELPW;
typedef struct _WSAServiceClassInfoA WSASERVICECLASSINFO;
typedef struct _ACL_REVISION_INFORMATION * PACL_REVISION_INFORMATION;
typedef struct _IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER64;
typedef struct WINTRUST_SGNR_INFO_ * PWINTRUST_SGNR_INFO;
typedef struct tagOFN_NT4A * LPOPENFILENAME_NT4A;
typedef struct _READ_ELEMENT_ADDRESS_INFO READ_ELEMENT_ADDRESS_INFO;
typedef struct _SHORT_SIZEDARR WORD_SIZEDARR;
typedef struct tagPELARRAY * LPPELARRAY;
typedef struct tagJOYCAPS2A JOYCAPS2A;
typedef enum tagCHANGEKIND CHANGEKIND;
typedef struct _TAPE_PREPARE TAPE_PREPARE;
typedef int ( * _onexit_t)();
typedef struct tagPELARRAY * NPPELARRAY;
typedef struct _QualityOfService QOS;
typedef struct tagMOUSEKEYS * LPMOUSEKEYS;
typedef struct _GRADIENT_RECT GRADIENT_RECT;
typedef struct tagEMREXTFLOODFILL EMREXTFLOODFILL;
typedef void ( * PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC)(void *,unsigned long,char *,char *,void *);
typedef HRESULT ( * LPFNCANUNLOADNOW)();
typedef struct IEnumVARIANT * LPENUMVARIANT;
typedef long ( * I_RpcProxyIsValidMachineFn)(char *,char *,unsigned long);
typedef struct tagTEXTMETRICA * NPTEXTMETRIC;
typedef struct tagOFN_NT4W * LPOPENFILENAME_NT4W;
typedef int ( * RPC_MGMT_AUTHORIZATION_FN)(void *,unsigned long,long *);
typedef struct tagTEXTMETRICA * LPTEXTMETRIC;
typedef struct _SPC_SERIALIZED_OBJECT SPC_SERIALIZED_OBJECT;
typedef class std::basic_ios<char,std::char_traits<char> > ios;
typedef struct _CERT_KEY_CONTEXT CERT_KEY_CONTEXT;
typedef struct tagMCI_STATUS_PARMS * LPMCI_STATUS_PARMS;
typedef struct tagMETAHEADER * LPMETAHEADER;
typedef struct _FloatOutStruct FOS;
typedef struct _IMAGE_NT_HEADERS IMAGE_NT_HEADERS32;
typedef struct tagXFORM * LPXFORM;
typedef struct _ENUM_SERVICE_STATUS_PROCESSA * LPENUM_SERVICE_STATUS_PROCESSA;
typedef struct tagJOYCAPS2W JOYCAPS2W;
typedef struct tagRemHGLOBAL RemHGLOBAL;
typedef long SSIZE_T;
typedef unsigned long * PSIZE_T;
typedef struct _OFSTRUCT * POFSTRUCT;
typedef struct tagMINMAXINFO * PMINMAXINFO;
typedef struct tagMIDIOUTCAPSA * NPMIDIOUTCAPSA;
typedef struct tagMCI_LOAD_PARMSW MCI_LOAD_PARMSW;
typedef struct tagMIDIOUTCAPSA * LPMIDIOUTCAPSA;
typedef HRESULT ( * PFN_PROVIDER_SIGTRUST_CALL)(struct _CRYPT_PROVIDER_DATA *);
typedef struct _WSAVersion * PWSAVERSION;
typedef struct tagSERIALKEYSW * LPSERIALKEYSW;
typedef struct tagPDEXA * LPPRINTDLGEX;
typedef struct tagWAVEOUTCAPSW WAVEOUTCAPSW;
typedef struct tagRECT * LPBORDERWIDTHS;
typedef struct _PSFEATURE_OUTPUT PSFEATURE_OUTPUT;
typedef struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR * PMINIDUMP_FUNCTION_TABLE_DESCRIPTOR;
typedef struct tagJOYCAPS2A * NPJOYCAPS2;
typedef struct _LIST_ENTRY * PRLIST_ENTRY;
typedef struct tagJOYCAPS2A * LPJOYCAPS2;
typedef struct _currencyfmtA CURRENCYFMT;
typedef struct _CRYPT_PROVIDER_PRIVDATA CRYPT_PROVIDER_PRIVDATA;
typedef struct _DISK_RECORD * PDISK_RECORD;
typedef struct tagMCI_LOAD_PARMSA MCI_LOAD_PARMSA;
typedef struct _GUID CLSID;
typedef void * PACCESS_TOKEN;
typedef struct _SERVICE_TABLE_ENTRYW SERVICE_TABLE_ENTRYW;
typedef struct _SPC_FINANCIAL_CRITERIA * PSPC_FINANCIAL_CRITERIA;
typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;
typedef struct IEncodingFilterFactory * LPENCODINGFILTERFACTORY;
typedef struct tagMCI_OVLY_WINDOW_PARMSA * LPMCI_OVLY_WINDOW_PARMS;
typedef struct _TI_FINDCHILDREN_PARAMS TI_FINDCHILDREN_PARAMS;
typedef struct _WSANSClassInfoA * LPWSANSCLASSINFO;
typedef struct _MINIDUMP_STRING * PMINIDUMP_STRING;
typedef struct tagCOLORCORRECTPALETTE * PEMRCOLORCORRECTPALETTE;
typedef struct _ACL_REVISION_INFORMATION ACL_REVISION_INFORMATION;
typedef wchar_t _Wint_t;
typedef struct tagSERIALKEYSA * LPSERIALKEYSA;
typedef struct tagRemBRUSH RemHBRUSH;
typedef struct tagMDINEXTMENU * PMDINEXTMENU;
typedef HRESULT ( * PFN_PROVIDER_OBJTRUST_CALL)(struct _CRYPT_PROVIDER_DATA *);
typedef int ( * DATEFMT_ENUMPROCEXA)(char *,unsigned long);
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING IMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct tagEMRSETICMPROFILE * PEMRSETICMPROFILEA;
typedef struct _GET_MEDIA_TYPES * PGET_MEDIA_TYPES;
typedef struct _CONSOLE_CURSOR_INFO * PCONSOLE_CURSOR_INFO;
typedef struct tagTEXTMETRICW * LPTEXTMETRICW;
typedef struct _SYSTEM_ALARM_OBJECT_ACE * PSYSTEM_ALARM_OBJECT_ACE;
typedef struct tagTEXTMETRICW * NPTEXTMETRICW;
typedef struct tagMIXERCONTROLW * PMIXERCONTROLW;
typedef struct _IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32;
typedef struct tagOFN_NT4A * LPOPENFILENAME_NT4;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
typedef struct tagJOYCAPS2A JOYCAPS2;
typedef struct _CERT_CHAIN_POLICY_STATUS CERT_CHAIN_POLICY_STATUS;
typedef void * (RPC_CLIENT_ALLOC)(unsigned int);
typedef struct tagRGBQUAD RGBQUAD;
typedef struct _IMAGEHLP_MODULE IMAGEHLP_MODULE;
typedef struct _ABCFLOAT ABCFLOAT;
typedef struct tagBITMAPCOREHEADER * LPBITMAPCOREHEADER;
typedef enum _MINIDUMP_STREAM_TYPE MINIDUMP_STREAM_TYPE;
typedef struct _CERT_POLICY_QUALIFIER_INFO * PCERT_POLICY_QUALIFIER_INFO;
typedef unsigned char[16] SPC_UUID;
typedef struct tagTITLEBARINFO * LPTITLEBARINFO;
typedef unsigned short VARTYPE;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY * PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;
typedef struct tagTEXTMETRICA * NPTEXTMETRICA;
typedef struct tagEMRCREATEPEN * PEMRCREATEPEN;
typedef enum tagOLEUPDATE * POLEUPDATE;
typedef struct tagTEXTMETRICA * LPTEXTMETRICA;
typedef struct _CRYPTOAPI_BLOB * PCRYPT_DER_BLOB;
typedef int ( * DATEFMT_ENUMPROCEXW)(unsigned short *,unsigned long);
typedef int ( * PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY)(struct _CMSG_CONTENT_ENCRYPT_INFO *,unsigned long,void *);
typedef enum _MEDIA_TYPE * PMEDIA_TYPE;
typedef struct tagEMRCREATECOLORSPACEW EMRCREATECOLORSPACEW;
typedef int ( * PFN_CERT_STORE_PROV_DELETE_CERT)(void *,struct _CERT_CONTEXT *,unsigned long);
typedef struct _CRYPT_PROVIDER_REGDEFUSAGE CRYPT_PROVIDER_REGDEFUSAGE;
typedef int ( * PSYMBOLSERVERPINGPROC)(char *);
typedef struct tagBSTRBLOB * LPBSTRBLOB;
typedef void (DRVCALLBACK)(struct HDRVR__ *,unsigned int,unsigned long,unsigned long,unsigned long);
typedef struct _CRYPT_BIT_BLOB * PCRYPT_BIT_BLOB;
typedef struct hostent HOSTENT;
typedef struct tagMIDIOUTCAPSA MIDIOUTCAPSA;
typedef struct _MINIDUMP_HANDLE_DATA_STREAM * PMINIDUMP_HANDLE_DATA_STREAM;
typedef void ( * LPOCNDSCPROC)(unsigned long,unsigned long,void *);
typedef struct _CRYPTOAPI_BLOB * PCRYPT_DATA_BLOB;
typedef struct _CRL_FIND_ISSUED_FOR_PARA * PCRL_FIND_ISSUED_FOR_PARA;
typedef int ( * _PIFV)();
typedef struct HTASK__ * HTASK;
typedef struct _NT_TIB64 NT_TIB64;
typedef struct _CRL_DIST_POINT * PCRL_DIST_POINT;
typedef struct tagEMRNAMEDESCAPE * PEMRNAMEDESCAPE;
typedef struct _PSHNOTIFY PSHNOTIFY;
typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR * PRTL_VERIFIER_PROVIDER_DESCRIPTOR;
typedef struct _WSABUF WSABUF;
typedef struct tagPDEXA * LPPRINTDLGEXA;
typedef struct _OSVERSIONINFOA * LPOSVERSIONINFO;
typedef struct tagJOYCAPS2A * NPJOYCAPS2A;
typedef struct _OSVERSIONINFOA OSVERSIONINFO;
typedef struct _WSANSClassInfoW * LPWSANSCLASSINFOW;
typedef struct tagEMREXCLUDECLIPRECT * PEMREXCLUDECLIPRECT;
typedef struct tagJOYCAPS2A * LPJOYCAPS2A;
typedef struct _PRIVILEGE_SET * PPRIVILEGE_SET;
typedef struct tagMIXERLINECONTROLSA MIXERLINECONTROLS;
typedef struct tagEMRSETCOLORSPACE * PEMRDELETECOLORSPACE;
typedef struct _CRYPT_URL_ARRAY * PCRYPT_URL_ARRAY;
typedef struct _OLESTREAM * LPOLESTREAM;
typedef struct tagMCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMS;
typedef struct _STORAGE_BUS_RESET_REQUEST * PSTORAGE_BUS_RESET_REQUEST;
typedef struct _ldiv_t ldiv_t;
typedef struct tagMCI_LOAD_PARMSA MCI_LOAD_PARMS;
typedef struct _userCLIPFORMAT * wireCLIPFORMAT;
typedef short s_short;
typedef struct _MINIDUMP_UNLOADED_MODULE_LIST MINIDUMP_UNLOADED_MODULE_LIST;
typedef struct _FAT_STATISTICS FAT_STATISTICS;
typedef unsigned short u_short;
typedef void * RPC_AUTHZ_HANDLE;
typedef struct tagLOGCOLORSPACEW LOGCOLORSPACEW;
typedef struct _PARTITION_INFORMATION PARTITION_INFORMATION;
typedef void * HDEVNOTIFY;
typedef struct _devicemodeA DEVMODEA;
typedef struct tagJOYCAPS2W * LPJOYCAPS2W;
typedef struct tagRemFORMATETC * LPREMFORMATETC;
typedef struct tagJOYCAPS2W * NPJOYCAPS2W;
typedef struct _WSANSClassInfoA * LPWSANSCLASSINFOA;
typedef struct tagPDEXW * LPPRINTDLGEXW;
typedef struct _DSSSEED DSSSEED;
typedef struct tagSERIALKEYSA * LPSERIALKEYS;
typedef struct SCARD_T1_REQUEST * PSCARD_T1_REQUEST;
typedef struct SCARD_T0_REQUEST * PSCARD_T0_REQUEST;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER IMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct midiproptempo_tag MIDIPROPTEMPO;
typedef struct _CRYPTOAPI_BLOB CERT_BLOB;
typedef struct tagSTYLEBUFW * PSTYLEBUFW;
typedef struct tagPDA * LPPRINTDLGA;
typedef struct tagGUITHREADINFO * PGUITHREADINFO;
typedef void ( * PFN_CERT_STORE_PROV_CLOSE)(void *,unsigned long);
typedef unsigned short * PBAD_TRACK_NUMBER;
typedef struct _SERVICE_STATUS * LPSERVICE_STATUS;
typedef struct _EXCEPTION_POINTERS EXCEPTION_POINTERS;
typedef struct tagIMEMENUITEMINFOA * NPIMEMENUITEMINFO;
typedef unsigned long _fsize_t;
typedef struct tagMCI_ANIM_STEP_PARMS * PMCI_ANIM_STEP_PARMS;
typedef struct tagIMEMENUITEMINFOA * LPIMEMENUITEMINFO;
typedef struct _PRINTPROCESSOR_INFO_1A * LPPRINTPROCESSOR_INFO_1;
typedef struct tagEMRPOLYLINE16 * PEMRPOLYLINETO16;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA * LPMIXERCONTROLDETAILS_LISTTEXT;
typedef int mbstate_t;
typedef struct tagMDICREATESTRUCTA MDICREATESTRUCT;
typedef struct _VOLUME_DISK_EXTENTS VOLUME_DISK_EXTENTS;
typedef struct tagMULTIKEYHELPA * LPMULTIKEYHELPA;
typedef int ( * PFN_CPD_ADD_CERT)(struct _CRYPT_PROVIDER_DATA *,unsigned long,int,unsigned long,struct _CERT_CONTEXT *);
typedef struct _PRINTER_DEFAULTSA * PPRINTER_DEFAULTS;
typedef enum _WSAESETSERVICEOP WSAESETSERVICEOP;
typedef struct tagEMRSETDIBITSTODEVICE * PEMRSETDIBITSTODEVICE;
typedef struct tagCBT_CREATEWNDA * LPCBT_CREATEWND;
typedef enum _IMAGEHLP_SYMBOL_TYPE_INFO IMAGEHLP_SYMBOL_TYPE_INFO;
typedef struct tagPDW * LPPRINTDLGW;
typedef struct tagRPCOLEMESSAGE * PRPCOLEMESSAGE;
typedef struct _CERT_NAME_INFO * PCERT_NAME_INFO;
typedef struct tMIXERCONTROLDETAILS * LPMIXERCONTROLDETAILS;
typedef struct _DRIVER_INFO_1A * PDRIVER_INFO_1;
typedef struct tagEMRPOLYLINE16 EMRPOLYLINETO16;
typedef struct tagVersionedStream * LPVERSIONEDSTREAM;
typedef int INT_PTR;
typedef struct tagMCI_WAVE_OPEN_PARMSW MCI_WAVE_OPEN_PARMSW;
typedef struct tagMCI_ANIM_WINDOW_PARMSW * LPMCI_ANIM_WINDOW_PARMSW;
typedef struct tagMULTIKEYHELPW * LPMULTIKEYHELPW;
typedef struct _SERVICE_FAILURE_ACTIONSW SERVICE_FAILURE_ACTIONSW;
typedef struct _DEBUG_EVENT * LPDEBUG_EVENT;
typedef enum tagEXTCONN EXTCONN;
typedef enum tagURLZONE URLZONE;
typedef unsigned __int64 ( * PTRANSLATE_ADDRESS_ROUTINE64)(void *,void *,struct _tagADDRESS64 *);
typedef struct servent * LPSERVENT;
typedef struct _DEVICE_MEDIA_INFO DEVICE_MEDIA_INFO;
typedef enum tagBINDSTATUS BINDSTATUS;
typedef struct _MIDL_STUB_DESC * PMIDL_STUB_DESC;
typedef struct _CERT_DH_PARAMETERS * PCERT_DH_PARAMETERS;
typedef struct _DRIVER_INFO_1A * LPDRIVER_INFO_1;
typedef struct tagPDA PRINTDLG;
typedef struct _DRIVER_INFO_2A * LPDRIVER_INFO_2;
typedef struct _COMSTAT * LPCOMSTAT;
typedef struct IEnumUnknown * LPENUMUNKNOWN;
typedef struct _DRIVER_INFO_3A * LPDRIVER_INFO_3;
typedef long ( * RegCloseKeyProc)(struct HKEY__ *);
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST JOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct _DRIVER_INFO_4A * LPDRIVER_INFO_4;
typedef unsigned int ALG_ID;
typedef struct _DRIVER_INFO_5A * LPDRIVER_INFO_5;
typedef struct _DRIVER_INFO_6A * LPDRIVER_INFO_6;
typedef struct _CRYPT_RC2_CBC_PARAMETERS CRYPT_RC2_CBC_PARAMETERS;
typedef struct _CERT_PHYSICAL_STORE_INFO * PCERT_PHYSICAL_STORE_INFO;
typedef struct tagWAVEINCAPS2W WAVEINCAPS2W;
typedef struct _CRYPT_ATTRIBUTES CMSG_ATTR;
typedef struct _tagSTACKFRAME * LPSTACKFRAME;
typedef struct tagEMRSELECTCLIPPATH EMRSETSTRETCHBLTMODE;
typedef struct _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;
typedef struct _DISPLAY_DEVICEW * LPDISPLAY_DEVICEW;
typedef struct __unnamed * NDR_SCONTEXT;
typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEWINDOWEXTEX;
typedef struct _PRINTER_DEFAULTSW * LPPRINTER_DEFAULTSW;
typedef int ( * PENUMLOADED_MODULES_CALLBACK64)(char *,unsigned __int64,unsigned long,void *);
typedef struct tagNEWTEXTMETRICW * NPNEWTEXTMETRICW;
typedef void ( * terminate_handler)();
typedef struct tagMCI_ANIM_OPEN_PARMSA * LPMCI_ANIM_OPEN_PARMS;
typedef struct tagNEWTEXTMETRICW * LPNEWTEXTMETRICW;
typedef struct _CMSG_HASHED_ENCODE_INFO * PCMSG_HASHED_ENCODE_INFO;
typedef struct _MONITOR_INFO_1A * PMONITOR_INFO_1A;
typedef struct SCARD_READERSTATEA SCARD_READERSTATE;
typedef struct _CRYPT_KEY_PROV_INFO CRYPT_KEY_PROV_INFO;
typedef struct _NTFS_STATISTICS * PNTFS_STATISTICS;
typedef struct _CERT_DSS_PARAMETERS CERT_DSS_PARAMETERS;
typedef struct _PRINTER_DEFAULTSA * LPPRINTER_DEFAULTSA;
typedef struct tagMCI_ANIM_RECT_PARMS MCI_ANIM_RECT_PARMS;
typedef struct tagCLIPDATA CLIPDATA;
typedef struct HPALETTE__ * HPALETTE;
typedef long FXPT2DOT30;
typedef void * NDR_CCONTEXT;
typedef struct _DISPLAY_DEVICEA * LPDISPLAY_DEVICEA;
typedef unsigned long PROPID;
typedef char * __exString;
typedef void * RPC_SS_THREAD_HANDLE;
typedef unsigned int DWORD32;
typedef struct _IMAGE_NT_HEADERS * PIMAGE_NT_HEADERS32;
typedef struct _ACE_HEADER ACE_HEADER;
typedef struct _DRIVER_INFO_1W * PDRIVER_INFO_1W;
typedef struct IOleInPlaceSite * LPOLEINPLACESITE;
typedef int ( * OLDFONTENUMPROCW)(struct tagLOGFONTW *,struct tagTEXTMETRICW *,unsigned long,long);
typedef struct tagPDA * LPPRINTDLG;
typedef struct _CERT_CHAIN * PCERT_CHAIN;
typedef struct _LOTTO_LOG_DATA_ LOTTO_LOG_DATA;
typedef struct _GLYPHMETRICSFLOAT * PGLYPHMETRICSFLOAT;
typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO * PCMSG_MAIL_LIST_RECIPIENT_INFO;
typedef struct _CERT_RDN CERT_RDN;
typedef enum __MIDL_IInternetSecurityManager_0002 SZM_FLAGS;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA * LPMIXERCONTROLDETAILS_LISTTEXTA;
typedef struct tagMULTIKEYHELPA * LPMULTIKEYHELP;
typedef unsigned int ( * LPFRHOOKPROC)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct _userSTGMEDIUM * wireSTGMEDIUM;
typedef struct _MINIDUMP_MODULE_LIST * PMINIDUMP_MODULE_LIST;
typedef int ( * EnumProcessModulesProc)(void *,struct HINSTANCE__ * *,unsigned long,unsigned long *);
typedef struct _ACTION_HEADER * PACTION_HEADER;
typedef struct HENHMETAFILE__ * HENHMETAFILE;
typedef unsigned long error_status_t;
typedef struct midiproptimediv_tag MIDIPROPTIMEDIV;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef struct _DRIVER_INFO_1A * PDRIVER_INFO_1A;
typedef void * HCERTCHAINENGINE;
typedef struct _MONITOR_INFO_2A * PMONITOR_INFO_2A;
typedef struct tagEMRSELECTCLIPPATH * PEMRSETMAPMODE;
typedef struct tagEMRMODIFYWORLDTRANSFORM * PEMRMODIFYWORLDTRANSFORM;
typedef struct tagMCI_VD_STEP_PARMS MCI_VD_STEP_PARMS;
typedef HRESULT ( * PFN_PROVIDER_CLEANUP_CALL)(struct _CRYPT_PROVIDER_DATA *);
typedef struct _CERT_BASIC_CONSTRAINTS_INFO * PCERT_BASIC_CONSTRAINTS_INFO;
typedef struct tMIXERCONTROLDETAILS_UNSIGNED * LPMIXERCONTROLDETAILS_UNSIGNED;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW * LPMIXERCONTROLDETAILS_LISTTEXTW;
typedef struct tagEMRANGLEARC EMRANGLEARC;
typedef struct _FORM_INFO_1W * LPFORM_INFO_1W;
typedef struct tagCLIENTCREATESTRUCT CLIENTCREATESTRUCT;
typedef struct _CRYPT_PROVIDER_SGNR * PCRYPT_PROVIDER_SGNR;
typedef struct _LUID * PLUID;
typedef struct _MODULEINFO MODULEINFO;
typedef struct tagMIDIINCAPS2A MIDIINCAPS2A;
typedef struct tagPDA PRINTDLGA;
typedef struct tagEMREXTSELECTCLIPRGN * PEMREXTSELECTCLIPRGN;
typedef struct HDESK__ * HDESK;
typedef struct _LOAD_DLL_DEBUG_INFO LOAD_DLL_DEBUG_INFO;
typedef enum _CHANGER_DEVICE_PROBLEM_TYPE CHANGER_DEVICE_PROBLEM_TYPE;
typedef struct _PROPSHEETPAGEA_V1 * LPCPROPSHEETPAGEA_V1;
typedef struct _RPC_CLIENT_INTERFACE * PRPC_CLIENT_INTERFACE;
typedef struct pcmwaveformat_tag PCMWAVEFORMAT;
typedef struct _PRINTER_INFO_3 PRINTER_INFO_3;
typedef struct _FLOAT128 FLOAT128;
typedef struct SCARD_T0_REQUEST * LPSCARD_T0_REQUEST;
typedef struct _CERT_PAIR * PCERT_PAIR;
typedef struct tagMCI_ANIM_UPDATE_PARMS * PMCI_ANIM_UPDATE_PARMS;
typedef struct _SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION;
typedef void ( * STUB_THUNK)(struct _MIDL_STUB_MESSAGE *);
typedef struct tagPDW PRINTDLGW;
typedef struct IBindProtocol * LPBINDPROTOCOL;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U IMAGE_RESOURCE_DIR_STRING_U;
typedef enum tagSTGC STGC;
typedef struct _CRL_DIST_POINT_NAME CRL_DIST_POINT_NAME;
typedef int ( * PDBOpenValidate3Proc)(char *,char *,long *,char *,char *,unsigned long *,unsigned long *,struct PDB * *);
typedef struct SERVICE_STATUS_HANDLE__ * SERVICE_STATUS_HANDLE;
typedef struct tagLOGFONTA LOGFONT;
typedef struct _PRINTER_DEFAULTSA * LPPRINTER_DEFAULTS;
typedef struct IEnumSTATSTG * LPENUMSTATSTG;
typedef struct _IMAGE_RESOURCE_DIRECTORY * PIMAGE_RESOURCE_DIRECTORY;
typedef struct tagMONCBSTRUCT * PMONCBSTRUCT;
typedef struct _DISPLAY_DEVICEA * LPDISPLAY_DEVICE;
typedef void ( * _PMFN)();
typedef struct _PROPSHEETPAGEW_V1 * LPCPROPSHEETPAGEW_V1;
typedef struct _RECTL * LPCRECTL;
typedef struct _OVERLAPPED * LPWSAOVERLAPPED;
typedef int ( * PFN_CPD_ADD_SGNR)(struct _CRYPT_PROVIDER_DATA *,int,unsigned long,struct _CRYPT_PROVIDER_SGNR *);
typedef struct tagMCI_OPEN_PARMSW * PMCI_OPEN_PARMSW;
typedef struct _DOC_INFO_3W * LPDOC_INFO_3W;
typedef struct _CRYPTOAPI_BLOB * PCRYPT_ATTR_BLOB;
typedef struct tagSTICKYKEYS STICKYKEYS;
typedef struct tagLOCALESIGNATURE * LPLOCALESIGNATURE;
typedef struct HDRVR__ * HDRVR;
typedef struct _CRYPTOAPI_BLOB CRYPT_DIGEST_BLOB;
typedef struct tagEMRGLSBOUNDEDRECORD * PEMRGLSBOUNDEDRECORD;
typedef struct _IO_COUNTERS * PIO_COUNTERS;
typedef struct _OFNOTIFYA OFNOTIFY;
typedef struct _DOC_INFO_3A * LPDOC_INFO_3A;
typedef struct _SYSTEM_POWER_STATUS * LPSYSTEM_POWER_STATUS;
typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY WIN_TRUST_ACTDATA_SUBJECT_ONLY;
typedef struct tagNONCLIENTMETRICSA * PNONCLIENTMETRICSA;
typedef struct tagTTPOLYCURVE * LPTTPOLYCURVE;
typedef struct MENUITEMTEMPLATEHEADER * PMENUITEMTEMPLATEHEADER;
typedef struct tagSTATPROPSETSTG STATPROPSETSTG;
typedef struct IOleAdviseHolder * LPOLEADVISEHOLDER;
typedef struct _CERT_BASIC_CONSTRAINTS2_INFO CERT_BASIC_CONSTRAINTS2_INFO;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN MIXERCONTROLDETAILS_BOOLEAN;
typedef struct waveformat_tag * LPWAVEFORMAT;
typedef struct waveformat_tag * NPWAVEFORMAT;
typedef struct tagCABSTR CABSTR;
typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 * PIMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _GDI_OBJECT GDI_OBJECT;
typedef struct IEnumSTATPROPSETSTG * LPENUMSTATPROPSETSTG;
typedef struct IRunningObjectTable * LPRUNNINGOBJECTTABLE;
typedef struct _NOTIFYICONDATAA * PNOTIFYICONDATAA;
typedef struct IEnumMoniker * LPENUMMONIKER;
typedef struct ICancelMethodCalls * LPCANCELMETHODCALLS;
typedef struct tagMCI_VD_STEP_PARMS * PMCI_VD_STEP_PARMS;
typedef struct _LUID LUID;
typedef union _ULARGE_INTEGER ULARGE_INTEGER;
typedef struct tagCHOOSEFONTW CHOOSEFONTW;
typedef HRESULT ( * LPFNGETCLASSOBJECT)(struct _GUID *,struct _GUID *,void * *);
typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
typedef struct _GUID GUID;
typedef union _LARGE_INTEGER * PLARGE_INTEGER;
typedef struct _NDR_CS_ROUTINES NDR_CS_ROUTINES;
typedef int ( * CALINFO_ENUMPROCEXA)(char *,unsigned long);
typedef enum tagMKSYS MKSYS;
typedef unsigned __int64 RVA64;
typedef void (WAVECALLBACK)(struct HDRVR__ *,unsigned int,unsigned long,unsigned long,unsigned long);
typedef struct tagMONITORINFOEXA MONITORINFOEXA;
typedef struct _CROSS_CERT_DIST_POINTS_INFO CROSS_CERT_DIST_POINTS_INFO;
typedef struct HMIDISTRM__ * * LPHMIDISTRM;
typedef int ( * CALINFO_ENUMPROCEXW)(unsigned short *,unsigned long);
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA CERT_CHAIN_FIND_BY_ISSUER_PARA;
typedef struct _numberfmtA NUMBERFMTA;
typedef struct tagCHOOSEFONTA CHOOSEFONTA;
typedef struct _CERT_BASIC_CONSTRAINTS_INFO CERT_BASIC_CONSTRAINTS_INFO;
typedef struct _GUID UUID;
typedef int ( * GRAYSTRINGPROC)(struct HDC__ *,long,int);
typedef struct _MINIDUMP_THREAD_EX * PMINIDUMP_THREAD_EX;
typedef unsigned int SOCKET;
typedef struct _devicemodeA * PDEVMODE;
typedef struct tMIXERCONTROLDETAILS_SIGNED MIXERCONTROLDETAILS_SIGNED;
typedef struct _IMAGEHLP_DUPLICATE_SYMBOL * PIMAGEHLP_DUPLICATE_SYMBOL;
typedef struct _TOKEN_AUDIT_POLICY_ELEMENT TOKEN_AUDIT_POLICY_ELEMENT;
typedef struct _KDHELP KDHELP;
typedef struct tagEMRSELECTCLIPPATH EMRSETMAPMODE;
typedef struct _CRYPTOAPI_BLOB CRYPT_DATA_BLOB;
typedef struct _OFNOTIFYW OFNOTIFYW;
typedef void * RPC_IF_HANDLE;
typedef struct tagIMEMENUITEMINFOW IMEMENUITEMINFOW;
typedef enum _SC_ENUM_TYPE SC_ENUM_TYPE;
typedef struct _IMAGE_OPTIONAL_HEADER64 * PIMAGE_OPTIONAL_HEADER64;
typedef struct tagMIXERCONTROLA * PMIXERCONTROL;
typedef unsigned long NLS_FUNCTION;
typedef struct _SPC_PE_IMAGE_DATA * PSPC_PE_IMAGE_DATA;
typedef struct _PSFEATURE_OUTPUT * PPSFEATURE_OUTPUT;
typedef struct tagCIEXYZ * LPCIEXYZ;
typedef struct HDDEDATA__ * ( * PFNCALLBACK)(unsigned int,unsigned int,struct HCONV__ *,struct HSZ__ *,struct HSZ__ *,struct HDDEDATA__ *,unsigned long,unsigned long);
typedef struct _OFNOTIFYA OFNOTIFYA;
typedef struct _DOC_INFO_3A * LPDOC_INFO_3;
typedef struct tagOBJECTDESCRIPTOR * PLINKSRCDESCRIPTOR;
typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;
typedef struct tagMCI_SAVE_PARMSA * PMCI_SAVE_PARMS;
typedef struct _CRYPT_DECRYPT_MESSAGE_PARA CRYPT_DECRYPT_MESSAGE_PARA;
typedef struct _PERF_OBJECT_TYPE * PPERF_OBJECT_TYPE;
typedef int ( * PFINDFILEINPATHCALLBACK)(char *,void *);
typedef struct HINSTANCE__ * HINSTANCE;
typedef struct _CTL_CONTEXT CTL_CONTEXT;
typedef struct _DISK_PERFORMANCE * PDISK_PERFORMANCE;
typedef struct tagRemSNB * wireSNB;
typedef struct _RemotableHandle * wireHICON;
typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA * PCERT_REGISTRY_STORE_ROAMING_PARA;
typedef struct tagGCP_RESULTSA GCP_RESULTS;
typedef struct _TAPE_WRITE_MARKS * PTAPE_WRITE_MARKS;
typedef struct _NETRESOURCEA * LPNETRESOURCEA;
typedef char * LPCTSTR;
typedef struct _CMC_PEND_INFO * PCMC_PEND_INFO;
typedef struct tagMIXERLINECONTROLSW MIXERLINECONTROLSW;
typedef struct _cpinfo CPINFO;
typedef struct _SYSTEM_AUDIT_ACE * PSYSTEM_AUDIT_ACE;
typedef struct _OSVERSIONINFOW OSVERSIONINFOW;
typedef struct _devicemodeW * PDEVMODEW;
typedef int ( * PSYMBOLSERVEROPENPROC)();
typedef unsigned int u_int;
typedef struct tagWAVEOUTCAPSA * NPWAVEOUTCAPSA;
typedef struct _CRYPT_PROVIDER_CERT * PCRYPT_PROVIDER_CERT;
typedef struct _PRINTER_NOTIFY_INFO_DATA PRINTER_NOTIFY_INFO_DATA;
typedef int ( * PFN_CERT_STORE_PROV_FIND_CTL)(void *,struct _CERT_STORE_PROV_FIND_INFO *,struct _CTL_CONTEXT *,unsigned long,void * *,struct _CTL_CONTEXT * *);
typedef struct tagPOINT POINT;
typedef struct tWAVEFORMATEX * LPCWAVEFORMATEX;
typedef struct _QUERY_SERVICE_LOCK_STATUSW * LPQUERY_SERVICE_LOCK_STATUSW;
typedef struct _DOCINFOA DOCINFO;
typedef struct tagWAVEOUTCAPSA * LPWAVEOUTCAPSA;
typedef struct _CRYPT_ENCODE_PARA CRYPT_ENCODE_PARA;
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
typedef struct _userHBITMAP * wireHBITMAP;
typedef struct _PROPSHEETPAGEA_V3 * LPPROPSHEETPAGEA_LATEST;
typedef struct _PROPSHEETPAGEA_V3 PROPSHEETPAGEA_LATEST;
typedef struct _BY_HANDLE_FILE_INFORMATION BY_HANDLE_FILE_INFORMATION;
typedef int ( * PSYMBOLSERVERPROC)(char *,char *,void *,unsigned long,unsigned long,char *);
typedef struct _WSANAMESPACE_INFOA WSANAMESPACE_INFOA;
typedef struct _JOB_INFO_2A * PJOB_INFO_2;
typedef struct tagEXTLOGFONTW * PEXTLOGFONTW;
typedef struct tagHELPWININFOA * LPHELPWININFOA;
typedef unsigned long HCRYPTKEY;
typedef struct _JOB_INFO_3 * PJOB_INFO_3;
typedef struct _MESSAGE_RESOURCE_DATA * PMESSAGE_RESOURCE_DATA;
typedef struct tagMCI_GETDEVCAPS_PARMS * PMCI_GETDEVCAPS_PARMS;
typedef struct _JOB_INFO_1A * PJOB_INFO_1;
typedef struct sockaddr_storage * PSOCKADDR_STORAGE;
typedef struct tagMCI_OVLY_WINDOW_PARMSW MCI_OVLY_WINDOW_PARMSW;
typedef struct tagCHOOSEFONTA CHOOSEFONT;
typedef struct tagLOGCOLORSPACEA LOGCOLORSPACE;
typedef struct tagOBJECTDESCRIPTOR * LPLINKSRCDESCRIPTOR;
typedef struct midievent_tag MIDIEVENT;
typedef struct _devicemodeA * PDEVMODEA;
typedef struct tagOBJECTDESCRIPTOR OBJECTDESCRIPTOR;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE ACCESS_ALLOWED_CALLBACK_ACE;
typedef struct _remoteMETAFILEPICT remoteMETAFILEPICT;
typedef struct tagIMEMENUITEMINFOW * LPIMEMENUITEMINFOW;
typedef struct tagEMRSELECTCLIPPATH * PEMRSETLAYOUT;
typedef struct tagIMEMENUITEMINFOW * NPIMEMENUITEMINFOW;
typedef struct IOleCache * LPOLECACHE;
typedef struct _PRINTER_DEFAULTSW * PPRINTER_DEFAULTSW;
typedef struct _cpinfoexA CPINFOEX;
typedef unsigned long APARTMENTID;
typedef struct _MINIDUMP_THREAD_EX_CALLBACK MINIDUMP_THREAD_EX_CALLBACK;
typedef int _Mbstatet;
typedef struct sockaddr_storage SOCKADDR_STORAGE;
typedef struct _IMAGE_IMPORT_BY_NAME * PIMAGE_IMPORT_BY_NAME;
typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
typedef struct _STORAGE_DEVICE_NUMBER * PSTORAGE_DEVICE_NUMBER;
typedef struct tagMIDIOUTCAPS2A * PMIDIOUTCAPS2A;
typedef unsigned long ACCESS_MASK;
typedef struct tagMIDIINCAPSA * PMIDIINCAPSA;
typedef struct tagSTYLEBUFA * PSTYLEBUF;
typedef struct tagNONCLIENTMETRICSA * LPNONCLIENTMETRICSA;
typedef struct tagCOLORCORRECTPALETTE EMRCOLORCORRECTPALETTE;
typedef int __ehstate_t;
typedef struct tagENUMLOGFONTEXA ENUMLOGFONTEXA;
typedef struct tagRemHENHMETAFILE RemHENHMETAFILE;
typedef struct _MINIDUMP_LOCATION_DESCRIPTOR64 MINIDUMP_LOCATION_DESCRIPTOR64;
typedef unsigned short[128] PATCHARRAY;
typedef struct IOleCache2 * LPOLECACHE2;
typedef struct _DRIVER_INFO_6A * PDRIVER_INFO_6;
typedef struct _MIDL_STUB_MESSAGE * PMIDL_STUB_MESSAGE;
typedef struct _SHQUERYRBINFO * LPSHQUERYRBINFO;
typedef struct tagNONCLIENTMETRICSW * LPNONCLIENTMETRICSW;
typedef struct HWAVEOUT__ * HWAVEOUT;
typedef struct tagMCI_SAVE_PARMSA * LPMCI_SAVE_PARMS;
typedef struct _CMC_STATUS_INFO * PCMC_STATUS_INFO;
typedef struct tagEMRFILLRGN EMRFILLRGN;
typedef struct _JOB_INFO_2A * LPJOB_INFO_2;
typedef enum _AUDIT_EVENT_TYPE AUDIT_EVENT_TYPE;
typedef int ( * DESKTOPENUMPROCW)(unsigned short *,long);
typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF * PIMAGE_AUX_SYMBOL_TOKEN_DEF;
typedef union _SLIST_HEADER * PSLIST_HEADER;
typedef int * PLONG32;
typedef union _FILE_SEGMENT_ELEMENT * PFILE_SEGMENT_ELEMENT;
typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA * PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
typedef unsigned int ( * YIELDPROC)(unsigned int,unsigned long);
typedef struct _GENERIC_BINDING_ROUTINE_PAIR GENERIC_BINDING_ROUTINE_PAIR;
typedef int ( * PFN_CERT_STORE_PROV_FIND_CRL)(void *,struct _CERT_STORE_PROV_FIND_INFO *,struct _CRL_CONTEXT *,unsigned long,void * *,struct _CRL_CONTEXT * *);
typedef struct _PRINTER_INFO_4A PRINTER_INFO_4A;
typedef enum tagSTGTY STGTY;
typedef unsigned int ULONG32;
typedef struct tagVARIANT * LPVARIANTARG;
typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIERTO16;
typedef unsigned short ino_t;
typedef struct _PERF_DATA_BLOCK * PPERF_DATA_BLOCK;
typedef enum tagDESCKIND DESCKIND;
typedef struct tagMETARECORD METARECORD;
typedef struct fd_set FD_SET;
typedef struct tagLOCALETAB LOCALETAB;
typedef struct _PROVIDOR_INFO_1A PROVIDOR_INFO_1A;
typedef struct _TOKEN_OWNER * PTOKEN_OWNER;
typedef struct tagMCI_ANIM_OPEN_PARMSW * LPMCI_ANIM_OPEN_PARMSW;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETBRUSHORGEX;
typedef struct IPropertyStorage * LPPROPERTYSTORAGE;
typedef struct _PRINTER_INFO_4W PRINTER_INFO_4W;
typedef struct _STORAGE_HOTPLUG_INFO * PSTORAGE_HOTPLUG_INFO;
typedef unsigned short * PCWSTR;
typedef struct _OUTLINETEXTMETRICA OUTLINETEXTMETRICA;
typedef struct _CRYPT_PROVUI_DATA * PCRYPT_PROVUI_DATA;
typedef struct _CERT_RDN * PCERT_RDN;
typedef struct tagPIXELFORMATDESCRIPTOR * LPPIXELFORMATDESCRIPTOR;
typedef struct tagMCI_SYSINFO_PARMSA MCI_SYSINFO_PARMSA;
typedef struct tagEMRFILLPATH EMRSTROKEPATH;
typedef struct _DRIVER_INFO_6W * PDRIVER_INFO_6W;
typedef struct tagCHOOSECOLORA CHOOSECOLORA;
typedef struct _RASTERIZER_STATUS * LPRASTERIZER_STATUS;
typedef struct _PORT_INFO_1A PORT_INFO_1;
typedef struct tagCHOOSECOLORA * LPCHOOSECOLORA;
typedef struct _NETRESOURCEA NETRESOURCEA;
typedef struct _CRYPT_ATTRIBUTES * PCMSG_ATTR;
typedef struct _PORT_INFO_3A PORT_INFO_3;
typedef struct _PORT_INFO_2A PORT_INFO_2;
typedef struct _MINIDUMP_MODULE_CALLBACK MINIDUMP_MODULE_CALLBACK;
typedef unsigned short COLOR16;
typedef struct _cpinfoexA CPINFOEXA;
typedef struct _JOB_INFO_2W * LPJOB_INFO_2W;
typedef struct tagMCI_SAVE_PARMSW * LPMCI_SAVE_PARMSW;
typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA * PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
typedef struct tagNONCLIENTMETRICSA * LPNONCLIENTMETRICS;
typedef struct _CERT_REVOCATION_INFO CERT_REVOCATION_INFO;
typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO CMSG_KEY_TRANS_ENCRYPT_INFO;
typedef struct _IMAGEHLP_LINE IMAGEHLP_LINE;
typedef struct _CRL_ISSUING_DIST_POINT * PCRL_ISSUING_DIST_POINT;
typedef struct _RPC_TRANSFER_SYNTAX RPC_TRANSFER_SYNTAX;
typedef struct _CRYPT_ALGORITHM_IDENTIFIER CRYPT_ALGORITHM_IDENTIFIER;
typedef struct _CERT_GENERAL_SUBTREE CERT_GENERAL_SUBTREE;
typedef struct _PROVIDOR_INFO_2A PROVIDOR_INFO_2A;
typedef int ( * PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC)(struct _CRYPT_ALGORITHM_IDENTIFIER *,struct _CRYPTOAPI_BLOB *,unsigned char *,unsigned long *,void *);
typedef struct _ACE_HEADER * PACE_HEADER;
typedef struct _BYTE_SIZEDARR BYTE_SIZEDARR;
typedef enum tagADVF ADVF;
typedef struct _FORM_INFO_1A * LPFORM_INFO_1;
typedef struct _DRIVER_INFO_6A * PDRIVER_INFO_6A;
typedef char * PCTSTR;
typedef struct _BIDI_REQUEST_CONTAINER BIDI_REQUEST_CONTAINER;
typedef struct tagABORTPATH * PEMRREALIZEPALETTE;
typedef int ( * PFN_CANCEL_ASYNC_RETRIEVAL_FUNC)(void *);
typedef struct tagMCI_SAVE_PARMSA * LPMCI_SAVE_PARMSA;
typedef struct _CERT_DSS_PARAMETERS * PCERT_DSS_PARAMETERS;
typedef struct _cpinfoexW CPINFOEXW;
typedef struct _JOB_INFO_2A * LPJOB_INFO_2A;
typedef void * ( * PFUNCTION_TABLE_ACCESS_ROUTINE)(void *,unsigned long);
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS CRYPT_PKCS8_IMPORT_PARAMS;
typedef struct _CRYPT_ALGORITHM_IDENTIFIER * PCRYPT_ALGORITHM_IDENTIFIER;
typedef struct tagCANDIDATEFORM * LPCANDIDATEFORM;
typedef struct _CERT_AUTHORITY_INFO_ACCESS * PCERT_AUTHORITY_INFO_ACCESS;
typedef struct tagCRGB CRGB;
typedef struct val_context * PVALCONTEXT;
typedef struct tagCANDIDATEFORM * NPCANDIDATEFORM;
typedef struct tagOIFI * LPOLEINPLACEFRAMEINFO;
typedef struct _CTL_FIND_USAGE_PARA * PCTL_FIND_USAGE_PARA;
typedef struct tagMDINEXTMENU * LPMDINEXTMENU;
typedef unsigned char * RPC_BUFPTR;
typedef struct tagEMRSETVIEWPORTORGEX * PEMRSETVIEWPORTORGEX;
typedef struct _BIDI_DATA * PBIDI_DATA;
typedef struct _PRINTER_INFO_4A PRINTER_INFO_4;
typedef struct _MEMORY_BASIC_INFORMATION MEMORY_BASIC_INFORMATION;
typedef struct _EXIT_PROCESS_DEBUG_INFO * LPEXIT_PROCESS_DEBUG_INFO;
typedef enum tagREGKIND REGKIND;
typedef struct tagALTTABINFO ALTTABINFO;
typedef class MSG_S2G_HEADER MSG_G2S_HEADER;
typedef struct tagBITMAPFILEHEADER BITMAPFILEHEADER;
typedef struct tagEMRSELECTCLIPPATH EMRSETTEXTALIGN;
typedef void ( * unexpected_handler)();
typedef struct tagTYPEATTR * LPTYPEATTR;
typedef struct IMAGE_COR20_HEADER * PIMAGE_COR20_HEADER;
typedef struct tagHARDWAREHOOKSTRUCT * LPHARDWAREHOOKSTRUCT;
typedef struct _CRYPTPROTECT_PROMPTSTRUCT * PCRYPTPROTECT_PROMPTSTRUCT;
typedef struct OPENCARDNAME_EXA * LPOPENCARDNAME_EXA;
typedef unsigned long GEOTYPE;
typedef void ( * LPOVERLAPPED_COMPLETION_ROUTINE)(unsigned long,unsigned long,struct _OVERLAPPED *);
typedef int ( * PROC)();
typedef struct _ICONINFO * PICONINFO;
typedef void * HMETAFILEPICT;
typedef struct _MEMORY_BASIC_INFORMATION64 * PMEMORY_BASIC_INFORMATION64;
typedef struct tagWNDCLASSEXA * PWNDCLASSEX;
typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA * PCERT_REGISTRY_STORE_CLIENT_GPT_PARA;
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
typedef struct _BIN_RESULTS * PBIN_RESULTS;
typedef struct tagCONVINFO CONVINFO;
typedef struct tagLOGBRUSH * PLOGBRUSH;
typedef struct tagOLEVERB * LPOLEVERB;
typedef struct _GUID IID;
typedef struct _DOC_INFO_2W * LPDOC_INFO_2W;
typedef struct WINTRUST_CERT_INFO_ * PWINTRUST_CERT_INFO;
typedef struct _CMC_TAGGED_CONTENT_INFO CMC_TAGGED_CONTENT_INFO;
typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP LOGICAL_PROCESSOR_RELATIONSHIP;
typedef unsigned short * * LPBSTR;
typedef struct _DOC_INFO_2A * LPDOC_INFO_2A;
typedef struct DLGITEMTEMPLATE * PDLGITEMTEMPLATE;
typedef struct tagMCI_SYSINFO_PARMSA * LPMCI_SYSINFO_PARMS;
typedef struct _MINIDUMP_UNLOADED_MODULE MINIDUMP_UNLOADED_MODULE;
typedef enum tagBIND_FLAGS BIND_FLAGS;
typedef struct IEnumSTATDATA * LPENUMSTATDATA;
typedef struct _WIN32_STREAM_ID * LPWIN32_STREAM_ID;
typedef struct _IMAGE_OPTIONAL_HEADER IMAGE_OPTIONAL_HEADER;
typedef void (RPC_ADDRESS_CHANGE_FN)(void *);
typedef struct _PERF_INSTANCE_DEFINITION * PPERF_INSTANCE_DEFINITION;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING * PIMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct tagMEASUREITEMSTRUCT * LPMEASUREITEMSTRUCT;
typedef int ( * LPFNADDPROPSHEETPAGE)(struct _PSP *,long);
typedef struct _IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS64;
typedef struct tagNONCLIENTMETRICSA * PNONCLIENTMETRICS;
typedef struct tagOBJECTDESCRIPTOR LINKSRCDESCRIPTOR;
typedef enum _RPC_NOTIFICATION_TYPES RPC_NOTIFICATION_TYPES;
typedef struct _ENUM_SERVICE_STATUS_PROCESSW * LPENUM_SERVICE_STATUS_PROCESSW;
typedef unsigned long LGRPID;
typedef struct _SID SID;
typedef struct _TIB TIB;
typedef struct _CPS_URLS * PCPS_URLS;
typedef struct _NOTIFYICONDATAA NOTIFYICONDATAA;
typedef struct _TAPE_SET_POSITION TAPE_SET_POSITION;
typedef struct _CRYPT_SIGN_MESSAGE_PARA CRYPT_SIGN_MESSAGE_PARA;
typedef struct tagMIDIOUTCAPSW * LPMIDIOUTCAPSW;
typedef struct _SYSTEM_ALARM_CALLBACK_ACE * PSYSTEM_ALARM_CALLBACK_ACE;
typedef struct tagEMRPOLYLINE EMRPOLYGON;
typedef int ( * PFIND_EXE_FILE_CALLBACK)(void *,char *,void *);
typedef struct tagCOMBOBOXINFO * PCOMBOBOXINFO;
typedef struct tagMIDIOUTCAPSW * NPMIDIOUTCAPSW;
typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
typedef struct tagWAVEOUTCAPSA WAVEOUTCAPSA;
typedef void ( * new_handler)();
typedef struct DLGTEMPLATE * LPCDLGTEMPLATE;
typedef enum _STORAGE_BUS_TYPE STORAGE_BUS_TYPE;
typedef struct HMIDIIN__ * HMIDIIN;
typedef unsigned short * PWSTR;
typedef char * LPCSTR;
typedef struct _userHGLOBAL userHGLOBAL;
typedef struct _PERF_DATA_BLOCK PERF_DATA_BLOCK;
typedef struct _TIME_ZONE_INFORMATION * LPTIME_ZONE_INFORMATION;
typedef struct _numberfmtA NUMBERFMT;
typedef struct tagLOGPALETTE * LPLOGPALETTE;
typedef struct _SID_IDENTIFIER_AUTHORITY * PSID_IDENTIFIER_AUTHORITY;
typedef unsigned short CLIPFORMAT;
typedef struct _SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRYA;
typedef struct tagLOGPALETTE * NPLOGPALETTE;
typedef struct _NOTIFYICONDATAW NOTIFYICONDATAW;
typedef struct _CMC_TAGGED_REQUEST * PCMC_TAGGED_REQUEST;
typedef struct _s__RTTIClassHierarchyDescriptor __RTTIClassHierarchyDescriptor;
typedef struct tagMONITORINFOEXA MONITORINFOEX;
typedef enum tagBINDSPEED BINDSPEED;
typedef struct _LOADED_IMAGE LOADED_IMAGE;
typedef struct _CERT_POLICY_MAPPING * PCERT_POLICY_MAPPING;
typedef struct _RECTL RECTL;
typedef struct _TAPE_CREATE_PARTITION * PTAPE_CREATE_PARTITION;
typedef int ( * PFN_CRYPT_ENUM_OID_INFO)(struct _CRYPT_OID_INFO *,void *);
typedef struct IHttpNegotiate * LPHTTPNEGOTIATE;
typedef struct tagEMRSETICMPROFILE * PEMRSETICMPROFILEW;
typedef struct tagCANDIDATEFORM CANDIDATEFORM;
typedef struct _IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA64;
typedef struct tagEMRSELECTCLIPPATH * PEMRSETTEXTALIGN;
typedef struct _TAPE_GET_STATISTICS TAPE_GET_STATISTICS;
typedef int ( * func57408716)(struct _PSP *,long);
typedef int ( * LPFNADDPROPSHEETPAGES)(void *,func57408716,long);
typedef struct tagDIBSECTION * PDIBSECTION;
typedef struct tagMIXERCONTROLA * PMIXERCONTROLA;
typedef struct IEnumFORMATETC * LPENUMFORMATETC;
typedef struct IOleInPlaceUIWindow * LPOLEINPLACEUIWINDOW;
typedef struct DLGITEMTEMPLATE * PDLGITEMTEMPLATEW;
typedef union tagCY CY;
typedef long LONG_PTR;
typedef struct _DISK_EXTENT * PDISK_EXTENT;
typedef struct SYSTEM_BATTERY_STATE * PSYSTEM_BATTERY_STATE;
typedef int ( * PFN_PROVIDER_CERTCHKPOLICY_CALL)(struct _CRYPT_PROVIDER_DATA *,unsigned long,int,unsigned long);
typedef struct _tagStartParam StartParam;
typedef unsigned long ( * PTRANSLATE_ADDRESS_ROUTINE)(void *,void *,struct _tagADDRESS *);
typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
typedef struct _DOC_INFO_2A * LPDOC_INFO_2;
typedef struct DLGITEMTEMPLATE * PDLGITEMTEMPLATEA;
typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;
typedef struct _MINIDUMP_MODULE_LIST MINIDUMP_MODULE_LIST;
typedef struct _CERT_TRUST_LIST_INFO * PCERT_TRUST_LIST_INFO;
typedef long ( * PVECTORED_EXCEPTION_HANDLER)(struct _EXCEPTION_POINTERS *);
typedef struct _CMSG_HASHED_ENCODE_INFO CMSG_HASHED_ENCODE_INFO;
typedef enum _SID_NAME_USE SID_NAME_USE;
typedef struct _CHANGER_MOVE_MEDIUM * PCHANGER_MOVE_MEDIUM;
typedef struct _EXIT_THREAD_DEBUG_INFO * LPEXIT_THREAD_DEBUG_INFO;
typedef struct tagBITMAPCOREHEADER * PBITMAPCOREHEADER;
typedef struct _flowspec FLOWSPEC;
typedef int ( * NT_IS_DEBUGGER_PRESENT)();
typedef struct _NOTIFYICONDATAA NOTIFYICONDATA;
typedef unsigned int ( * LPPAGESETUPHOOK)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE * PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
typedef struct HDDEDATA__ * (FNCALLBACK)(unsigned int,unsigned int,struct HCONV__ *,struct HSZ__ *,struct HSZ__ *,struct HDDEDATA__ *,unsigned long,unsigned long);
typedef struct tagMIDIOUTCAPSW MIDIOUTCAPSW;
typedef unsigned char * PFORMAT_STRING;
typedef struct tagWAVEOUTCAPSA * NPWAVEOUTCAPS;
typedef struct tagWAVEOUTCAPSA * LPWAVEOUTCAPS;
typedef struct _MINIDUMP_CALLBACK_INFORMATION MINIDUMP_CALLBACK_INFORMATION;
typedef struct tagPALETTEENTRY * PPALETTEENTRY;
typedef struct _CHANGER_EXCHANGE_MEDIUM * PCHANGER_EXCHANGE_MEDIUM;
typedef struct _NETRESOURCEA * LPNETRESOURCE;
typedef struct DLGTEMPLATE * LPCDLGTEMPLATEA;
typedef struct tagEMRPOLYPOLYLINE16 * PEMRPOLYPOLYGON16;
typedef struct tagHARDWAREHOOKSTRUCT * PHARDWAREHOOKSTRUCT;
typedef struct _SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR;
typedef struct HWAVE__ * HWAVE;
typedef struct _SINGLE_LIST_ENTRY * PSINGLE_LIST_ENTRY;
typedef struct tagOleMenuGroupWidths OLEMENUGROUPWIDTHS;
typedef struct _CRYPTOAPI_BLOB * PCERT_RDN_VALUE_BLOB;
typedef struct _MINIDUMP_MEMORY64_LIST MINIDUMP_MEMORY64_LIST;
typedef struct _CRYPTOAPI_BLOB CERT_NAME_BLOB;
typedef struct tagMCI_BREAK_PARMS * PMCI_BREAK_PARMS;
typedef struct _TAPE_GET_DRIVE_PARAMETERS * PTAPE_GET_DRIVE_PARAMETERS;
typedef struct tagEMRSELECTCLIPPATH EMRSETLAYOUT;
typedef struct tagHELPWININFOA * LPHELPWININFO;
typedef struct _STORAGE_DEVICE_NUMBER STORAGE_DEVICE_NUMBER;
typedef struct tagRECT RECT;
typedef struct _numberfmtA * LPNUMBERFMT;
typedef struct _MOUSE_EVENT_RECORD * PMOUSE_EVENT_RECORD;
typedef struct tagLOGCOLORSPACEA LOGCOLORSPACEA;
typedef int intptr_t;
typedef struct _MEMORYSTATUS MEMORYSTATUS;
typedef struct tagRECT * LPCRECT;
typedef struct _VERIFY_INFORMATION * PVERIFY_INFORMATION;
typedef void ( * PFN_CRYPT_FREE)(void *);
typedef struct _CONSOLE_SCREEN_BUFFER_INFO CONSOLE_SCREEN_BUFFER_INFO;
typedef struct IBindCtx * LPBINDCTX;
typedef int ( * _RTC_error_fn)(int,char *,int,char *,char *,<NoType>);
typedef struct _devicemodeW DEVMODEW;
typedef struct _PROCESS_INFORMATION PROCESS_INFORMATION;
typedef struct _WSAQuerySetA WSAQUERYSET;
typedef struct DLGTEMPLATE * LPCDLGTEMPLATEW;
typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
typedef struct _WSANAMESPACE_INFOA WSANAMESPACE_INFO;
typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY * LPWIN_TRUST_SUBJECT_FILE_AND_DISPLAY;
typedef struct _IMAGEHLP_SYMBOL IMAGEHLP_SYMBOL;
typedef void * HANDLE;
typedef struct _CERT_RDN_ATTR * PCERT_RDN_ATTR;
typedef struct _MINIDUMP_MODULE MINIDUMP_MODULE;
typedef struct _DRIVE_LAYOUT_INFORMATION DRIVE_LAYOUT_INFORMATION;
typedef struct tagMIDIOUTCAPS2A * PMIDIOUTCAPS2;
typedef struct _CERT_AUTHORITY_KEY_ID_INFO * PCERT_AUTHORITY_KEY_ID_INFO;
typedef struct _CMSG_ENVELOPED_ENCODE_INFO * PCMSG_ENVELOPED_ENCODE_INFO;
typedef struct tagSTYLEBUFA * PSTYLEBUFA;
typedef long ( * WNDPROC)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct value_entW VALENTW;
typedef enum __MIDL_IBindStatusCallback_0001 BINDVERB;
typedef struct tagCOPYDATASTRUCT COPYDATASTRUCT;
typedef void ( * LPWAVECALLBACK)(struct HDRVR__ *,unsigned int,unsigned long,unsigned long,unsigned long);
typedef struct _PRINTER_NOTIFY_INFO_DATA * LPPRINTER_NOTIFY_INFO_DATA;
typedef struct _BLENDFUNCTION * PBLENDFUNCTION;
typedef struct SPC_SIGINFO_ SPC_SIGINFO;
typedef struct _IMAGE_FILE_HEADER * PIMAGE_FILE_HEADER;
typedef struct _TRANSMIT_FILE_BUFFERS TRANSMIT_FILE_BUFFERS;
typedef struct _MODEMSETTINGS * LPMODEMSETTINGS;
typedef struct _userHENHMETAFILE * wireHENHMETAFILE;
typedef struct _MAT2 MAT2;
typedef struct tagSTGMEDIUM STGMEDIUM;
typedef struct _SERVICE_DESCRIPTIONA SERVICE_DESCRIPTION;
typedef enum _tagOIBDG_FLAGS OIBDG_FLAGS;
typedef struct tagMCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMSA;
typedef struct tagMCI_ANIM_WINDOW_PARMSA * LPMCI_ANIM_WINDOW_PARMSA;
typedef struct tagMIDIOUTCAPSA * PMIDIOUTCAPS;
typedef struct tagENUMLOGFONTEXA ENUMLOGFONTEX;
typedef long ( * RegOpenKeyExAProc)(struct HKEY__ *,char *,unsigned long,unsigned long,struct HKEY__ * *);
typedef struct _BIDI_REQUEST_CONTAINER * PBIDI_REQUEST_CONTAINER;
typedef struct _BIDI_RESPONSE_DATA * LPBIDI_RESPONSE_DATA;
typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO CMSG_MAIL_LIST_ENCRYPT_INFO;
typedef enum _BIN_TYPES BIN_TYPES;
typedef struct _SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONSA;
typedef struct tagPARAMDESCEX * LPPARAMDESCEX;
typedef struct _FLAGGED_WORD_BLOB * UP_FLAGGED_WORD_BLOB;
typedef struct _JOB_INFO_3 * LPJOB_INFO_3;
typedef struct value_entA VALENTA;
typedef struct _NDR_CORRELATION_INFO * PNDR_CORRELATION_INFO;
typedef struct tagMCI_VD_PLAY_PARMS * PMCI_VD_PLAY_PARMS;
typedef unsigned short * PSECURITY_DESCRIPTOR_CONTROL;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE ACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
typedef struct tagLOGPEN LOGPEN;
typedef void ( * PFN_CMSG_FREE)(void *);
typedef struct tagEMRSTRETCHBLT * PEMRSTRETCHBLT;
typedef struct tagNONCLIENTMETRICSA NONCLIENTMETRICS;
typedef struct _GUID * LPGUID;
typedef struct tagWAVEINCAPS2A WAVEINCAPS2A;
typedef union _ULARGE_INTEGER * PULARGE_INTEGER;
typedef char * PCUTSTR;
typedef struct _PRINTER_INFO_5A PRINTER_INFO_5A;
typedef struct _CRYPT_BLOB_ARRAY CRYPT_BLOB_ARRAY;
typedef struct sockaddr_storage * LPSOCKADDR_STORAGE;
typedef struct _CERT_AUTHORITY_KEY_ID2_INFO * PCERT_AUTHORITY_KEY_ID2_INFO;
typedef struct _cpinfoexA * LPCPINFOEXA;
typedef struct _CRYPT_PROVIDER_DATA * PCRYPT_PROVIDER_DATA;
typedef struct _NT_TIB NT_TIB;
typedef struct tagCREATESTRUCTA CREATESTRUCT;
typedef unsigned short * LPWCH;
typedef struct tagNEWTEXTMETRICA * LPNEWTEXTMETRICA;
typedef struct _MINIDUMP_MODULE * PMINIDUMP_MODULE;
typedef unsigned short * LPUWSTR;
typedef unsigned short PRINTEROP_FLAGS;
typedef void * HCRYPTOIDFUNCSET;
typedef struct tagNEWTEXTMETRICA * NPNEWTEXTMETRICA;
typedef struct _OUTLINETEXTMETRICA OUTLINETEXTMETRIC;
typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO * PCRYPT_TIME_STAMP_REQUEST_INFO;
typedef struct tagDELETEITEMSTRUCT * LPDELETEITEMSTRUCT;
typedef struct tagCAUB CAUB;
typedef struct tagFILTERKEYS FILTERKEYS;
typedef struct _MONITOR_INFO_1W * PMONITOR_INFO_1W;
typedef struct tagEMRLINETO EMRLINETO;
typedef struct tagMCI_SYSINFO_PARMSA MCI_SYSINFO_PARMS;
typedef struct _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;
typedef struct _cpinfoexW * LPCPINFOEXW;
typedef struct _PRINTER_INFO_5W PRINTER_INFO_5W;
typedef struct _UNLOAD_DLL_DEBUG_INFO UNLOAD_DLL_DEBUG_INFO;
typedef struct tagEMRFILLPATH * PEMRSTROKEPATH;
typedef struct _IMAGE_SYMBOL IMAGE_SYMBOL;
typedef struct _CERT_STORE_PROV_FIND_INFO * PCCERT_STORE_PROV_FIND_INFO;
typedef struct _CERT_CHAIN_POLICY_STATUS * PCERT_CHAIN_POLICY_STATUS;
typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO CMSG_KEY_AGREE_RECIPIENT_INFO;
typedef struct _NT_TIB32 NT_TIB32;
typedef struct tagMIDIOUTCAPSW * PMIDIOUTCAPSW;
typedef enum tagExtendedErrorParamTypes ExtendedErrorParamTypes;
typedef int ( * OLDFONTENUMPROCA)(struct tagLOGFONTA *,struct tagTEXTMETRICA *,unsigned long,long);
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY * PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;
typedef struct _MINIDUMP_HANDLE_DESCRIPTOR MINIDUMP_HANDLE_DESCRIPTOR;
typedef struct _CHANGER_ELEMENT_STATUS_EX CHANGER_ELEMENT_STATUS_EX;
typedef struct _TAPE_WMI_OPERATIONS * PTAPE_WMI_OPERATIONS;
typedef struct _IMAGE_RELOCATION * PIMAGE_RELOCATION;
typedef struct _NT_TIB32 * PNT_TIB32;
typedef enum __MIDL_IBindStatusCallback_0005 BINDINFO_OPTIONS;
typedef struct tagCHOOSECOLORA * LPCHOOSECOLOR;
typedef struct _CHANGER_ELEMENT CHANGER_ELEMENT;
typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION * PCHANGER_SEND_VOLUME_TAG_INFORMATION;
typedef void * DIGEST_HANDLE;
typedef struct tagDROPSTRUCT * PDROPSTRUCT;
typedef struct ILockBytes * LPLOCKBYTES;
typedef struct _CSADDR_INFO CSADDR_INFO;
typedef struct tagMEASUREITEMSTRUCT MEASUREITEMSTRUCT;
typedef struct _SYMBOL_INFO_PACKAGE SYMBOL_INFO_PACKAGE;
typedef struct _WINDOW_BUFFER_SIZE_RECORD WINDOW_BUFFER_SIZE_RECORD;
typedef char * LPTCH;
typedef struct tagEMRSETPIXELV EMRSETPIXELV;
typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA * PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
typedef struct _MONITOR_INFO_2W * PMONITOR_INFO_2W;
typedef struct tagMIDIOUTCAPSA * PMIDIOUTCAPSA;
typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;
typedef struct value_entA VALENT;
typedef struct tagENUMLOGFONTEXA * LPENUMLOGFONTEX;
typedef int ( * PCRYPT_DECRYPT_PRIVATE_KEY_FUNC)(struct _CRYPT_ALGORITHM_IDENTIFIER,struct _CRYPTOAPI_BLOB,unsigned char *,unsigned long *,void *);
typedef enum tagOLEUPDATE OLEUPDATE;
typedef struct _OVERLAPPED * LPOVERLAPPED;
typedef struct _FORM_INFO_1A * LPFORM_INFO_1A;
typedef struct tagMIDIINCAPS2W MIDIINCAPS2W;
typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEVIEWPORTEXTEX;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER IMAGE_SEPARATE_DEBUG_HEADER;
typedef struct tagMONMSGSTRUCT * PMONMSGSTRUCT;
typedef struct tagStorageLayout StorageLayout;
typedef struct _CERT_KEY_ATTRIBUTES_INFO * PCERT_KEY_ATTRIBUTES_INFO;
typedef struct tagRECT * PRECT;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT * PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct tagCREATESTRUCTW CREATESTRUCTW;
typedef struct tagNONCLIENTMETRICSA NONCLIENTMETRICSA;
typedef long streamoff;
typedef struct tagMCI_VD_PLAY_PARMS MCI_VD_PLAY_PARMS;
typedef struct _PRIVKEYVER3 DHPRIVKEY_VER3;
typedef struct tagMCI_PLAY_PARMS * LPMCI_PLAY_PARMS;
typedef struct HWAVEIN__ * * LPHWAVEIN;
typedef struct _PRINTER_INFO_5A PRINTER_INFO_5;
typedef struct _cpinfoexA * LPCPINFOEX;
typedef struct tagMONCONVSTRUCT MONCONVSTRUCT;
typedef int ( * PFN_CERT_STORE_PROV_READ_CERT)(void *,struct _CERT_CONTEXT *,unsigned long,struct _CERT_CONTEXT * *);
typedef struct tagCREATESTRUCTA CREATESTRUCTA;
typedef struct _MINIDUMP_INCLUDE_THREAD_CALLBACK * PMINIDUMP_INCLUDE_THREAD_CALLBACK;
typedef struct _CRYPT_URL_INFO CRYPT_URL_INFO;
typedef struct OPENCARDNAME_EXA * LPOPENCARDNAME_EX;
typedef struct _CERT_ALT_NAME_ENTRY * PCERT_ALT_NAME_ENTRY;
typedef enum tagSF_TYPE SF_TYPE;
typedef long clock_t;
typedef struct tagMONITORINFOEXA * LPMONITORINFOEX;
typedef struct _DISK_PERFORMANCE DISK_PERFORMANCE;
typedef struct _ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUS;
typedef struct _CRYPTOAPI_BLOB * PCRYPT_INTEGER_BLOB;
typedef struct _userHPALETTE * wireHPALETTE;
typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION * PCRYPT_ASYNC_RETRIEVAL_COMPLETION;
typedef struct _PATHNAME_BUFFER * PPATHNAME_BUFFER;
typedef struct tagNONCLIENTMETRICSW NONCLIENTMETRICSW;
typedef struct _SHNAMEMAPPINGA SHNAMEMAPPING;
typedef struct _TOKEN_CONTROL TOKEN_CONTROL;
typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA * PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
typedef unsigned long ( * LPFNDEVCAPS)(char *,char *,unsigned int,char *,struct _devicemodeA *);
typedef struct _IMAGE_OPTIONAL_HEADER IMAGE_OPTIONAL_HEADER32;
typedef struct tagCABOOL CABOOL;
typedef struct _DOC_INFO_1W * LPDOC_INFO_1W;
typedef struct _DRAWPATRECT * PDRAWPATRECT;
typedef struct _CTL_USAGE_MATCH CTL_USAGE_MATCH;
typedef struct tagCONVCONTEXT * PCONVCONTEXT;
typedef enum _MINIDUMP_TYPE MINIDUMP_TYPE;
typedef struct _GRADIENT_TRIANGLE * LPGRADIENT_TRIANGLE;
typedef int ( * UILANGUAGE_ENUMPROCW)(unsigned short *,long);
typedef int ( * REGISTERWORDENUMPROCA)(char *,unsigned long,char *,void *);
typedef struct tagSCROLLINFO * LPCSCROLLINFO;
typedef struct _PSFEATURE_CUSTPAPER PSFEATURE_CUSTPAPER;
typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 * PIMAGE_LOAD_CONFIG_DIRECTORY32;
typedef struct _PROCESS_HEAP_ENTRY * LPPROCESS_HEAP_ENTRY;
typedef struct _DRIVER_INFO_5W * LPDRIVER_INFO_5W;
typedef struct _DOC_INFO_1A * LPDOC_INFO_1A;
typedef struct tagLOGBRUSH32 * PLOGBRUSH32;
typedef struct tagMETARECORD * PMETARECORD;
typedef struct _MINIDUMP_THREAD_CALLBACK MINIDUMP_THREAD_CALLBACK;
typedef unsigned long ( * LPOCNCONNPROCA)(unsigned long,char *,char *,void *);
typedef struct tagEMRPOLYDRAW16 * PEMRPOLYDRAW16;
typedef struct tWAVEFORMATEX * PWAVEFORMATEX;
typedef struct _SYSTEM_POWER_POLICY * PSYSTEM_POWER_POLICY;
typedef struct tagCONVCONTEXT CONVCONTEXT;
typedef struct IDataObject * LPDATAOBJECT;
typedef struct tagEMRSCALEVIEWPORTEXTEX * PEMRSCALEVIEWPORTEXTEX;
typedef struct _ENUM_SERVICE_STATUS_PROCESSW ENUM_SERVICE_STATUS_PROCESSW;
typedef struct _CHANGER_MOVE_MEDIUM CHANGER_MOVE_MEDIUM;
typedef unsigned long HCRYPTPROV;
typedef int ( * REGISTERWORDENUMPROCW)(unsigned short *,unsigned long,unsigned short *,void *);
typedef struct _wireVARIANT * wireVARIANT;
typedef int ( * ENUMRESTYPEPROCW)(struct HINSTANCE__ *,unsigned short *,long);
typedef struct tagEXTLOGFONTA EXTLOGFONT;
typedef void * * PHCRYPTASYNC;
typedef struct tagWAVEOUTCAPS2A WAVEOUTCAPS2;
typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYGON16;
typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;
typedef struct hostent * PHOSTENT;
typedef struct tagJOYCAPSW * NPJOYCAPSW;
typedef enum tagPENDINGTYPE PENDINGTYPE;
typedef struct tagNEWTEXTMETRICEXW NEWTEXTMETRICEXW;
typedef struct tagJOYCAPSW * LPJOYCAPSW;
typedef struct _SID * PISID;
typedef struct _DRIVER_INFO_4W DRIVER_INFO_4W;
typedef struct _DRIVER_INFO_5W DRIVER_INFO_5W;
typedef enum _tagPARSEACTION PARSEACTION;
typedef struct tagINTERFACEINFO INTERFACEINFO;
typedef struct _DRIVER_INFO_6W DRIVER_INFO_6W;
typedef struct tagSCROLLINFO * LPSCROLLINFO;
typedef struct SC_HANDLE__ * SC_HANDLE;
typedef struct _DRIVER_INFO_1W DRIVER_INFO_1W;
typedef struct _DRIVER_INFO_2W DRIVER_INFO_2W;
typedef struct _DRIVER_INFO_4W * LPDRIVER_INFO_4W;
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
typedef struct _DRIVER_INFO_3W DRIVER_INFO_3W;
typedef char * PTSTR;
typedef struct QOS_OBJECT_HDR * LPQOS_OBJECT_HDR;
typedef struct _IMAGEHLP_SYMBOL * PIMAGEHLP_SYMBOL;
typedef struct _CONSOLE_FONT_INFO CONSOLE_FONT_INFO;
typedef struct _SPC_SP_OPUS_INFO SPC_SP_OPUS_INFO;
typedef struct tagMCI_OVLY_RECT_PARMS * LPMCI_OVLY_RECT_PARMS;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE * PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef enum __MIDL_IBindStatusCallback_0004 URL_ENCODING;
typedef struct _OFNOTIFYA * LPOFNOTIFY;
typedef struct _GUID * __rcGUID_t;
typedef struct HRSRC__ * HRSRC;
typedef struct tagCANDIDATEFORM * PCANDIDATEFORM;
typedef struct _CERT_PAIR CERT_PAIR;
typedef struct _SHFILEOPSTRUCTA SHFILEOPSTRUCT;
typedef struct _devicemodeW * LPDEVMODEW;
typedef struct _OSVERSIONINFOEXA OSVERSIONINFOEX;
typedef struct _IMAGE_OS2_HEADER IMAGE_OS2_HEADER;
typedef int ( * PSYMBOLSERVERSETOPTIONSPROC)(unsigned int,unsigned __int64);
typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
typedef struct _devicemodeW * NPDEVMODEW;
typedef struct tagJOYCAPSW JOYCAPSW;
typedef unsigned char * PSECURITY_CONTEXT_TRACKING_MODE;
typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA * PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
typedef struct _CERT_CHAIN_CONTEXT * PCCERT_CHAIN_CONTEXT;
typedef void * HOLEMENU;
typedef struct _SYMBOL_INFO SYMBOL_INFO;
typedef struct tagCOMPOSITIONFORM COMPOSITIONFORM;
typedef int ( * ENUMRESLANGPROCA)(struct HINSTANCE__ *,char *,char *,unsigned short,long);
typedef struct tagEXTLOGFONTW EXTLOGFONTW;
typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT * LPWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;
typedef struct _COMM_FAULT_OFFSETS COMM_FAULT_OFFSETS;
typedef struct tagMENUBARINFO * PMENUBARINFO;
typedef struct _DOC_INFO_1A * LPDOC_INFO_1;
typedef struct _ABC * PABC;
typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA CRYPT_KEY_SIGN_MESSAGE_PARA;
typedef int ( * PDBGHELP_CREATE_USER_DUMP_CALLBACK)(unsigned long,void * *,unsigned long *,void *);
typedef struct _TIME_ZONE_INFORMATION TIME_ZONE_INFORMATION;
typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO CMSG_MAIL_LIST_RECIPIENT_INFO;
typedef char * SZ;
typedef struct tagMONHSZSTRUCTA * PMONHSZSTRUCT;
typedef struct tagCOPYDATASTRUCT * PCOPYDATASTRUCT;
typedef struct tagEXTLOGFONTA EXTLOGFONTA;
typedef struct tagMONERRSTRUCT * PMONERRSTRUCT;
typedef struct _OFNOTIFYW * LPOFNOTIFYW;
typedef struct _EH3_EXCEPTION_REGISTRATION * PEH3_EXCEPTION_REGISTRATION;
typedef struct tagRemHBITMAP RemHBITMAP;
typedef struct tagWAVEOUTCAPS2A WAVEOUTCAPS2A;
typedef struct _CRYPT_PROVUI_FUNCS CRYPT_PROVUI_FUNCS;
typedef struct tagEMRALPHABLEND * PEMRALPHABLEND;
typedef struct _RASTERIZER_STATUS RASTERIZER_STATUS;
typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;
typedef struct tagRPC_EE_INFO_PARAM RPC_EE_INFO_PARAM;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION JOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct _CHANGER_ELEMENT_STATUS * PCHANGER_ELEMENT_STATUS;
typedef enum tagLOCKTYPE LOCKTYPE;
typedef struct _TRANSMIT_FILE_BUFFERS * LPTRANSMIT_FILE_BUFFERS;
typedef struct _SHFILEOPSTRUCTW SHFILEOPSTRUCTW;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER * PIMAGE_ROM_OPTIONAL_HEADER;
typedef struct _ABC * LPABC;
typedef struct _DRIVER_INFO_6W * LPDRIVER_INFO_6W;
typedef struct _MIDL_SERVER_INFO_ * PMIDL_SERVER_INFO;
typedef unsigned char * PUINT8;
typedef unsigned short wctype_t;
typedef struct _CERT_REVOCATION_STATUS CERT_REVOCATION_STATUS;
typedef struct _ABC * NPABC;
typedef struct tagICONMETRICSA ICONMETRICS;
typedef struct tagTYPEDESC TYPEDESC;
typedef struct _BLENDFUNCTION BLENDFUNCTION;
typedef struct tagDISPPARAMS DISPPARAMS;
typedef struct _SECURITY_DESCRIPTOR * PISECURITY_DESCRIPTOR;
typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO CMSG_KEY_AGREE_ENCRYPT_INFO;
typedef struct _IMAGEHLP_SYMBOL_PACKAGE IMAGEHLP_SYMBOL_PACKAGE;
typedef struct tagWAVEOUTCAPS2W WAVEOUTCAPS2W;
typedef void * HCERTSTORE;
typedef struct _OFNOTIFYA * LPOFNOTIFYA;
typedef void ( * RTL_VERIFIER_DLL_LOAD_CALLBACK)(unsigned short *,void *,unsigned long,void *);
typedef struct tagMOUSEMOVEPOINT * LPMOUSEMOVEPOINT;
typedef struct OPENCARD_SEARCH_CRITERIAW * POPENCARD_SEARCH_CRITERIAW;
typedef struct tagMCI_WAVE_OPEN_PARMSA * LPMCI_WAVE_OPEN_PARMS;
typedef struct _DWORD_BLOB * UP_DWORD_BLOB;
typedef struct _SHFILEOPSTRUCTA SHFILEOPSTRUCTA;
typedef long * PSSIZE_T;
typedef struct _MMIOINFO * LPCMMIOINFO;
typedef struct _SOCKET_ADDRESS SOCKET_ADDRESS;
typedef struct _IMAGE_BOUND_FORWARDER_REF * PIMAGE_BOUND_FORWARDER_REF;
typedef unsigned int ( * PFNGETPROFILEPATHA)(char *,char *,unsigned int);
typedef struct tagIDLDESC IDLDESC;
typedef struct _UUID_VECTOR UUID_VECTOR;
typedef struct _TOKEN_GROUPS TOKEN_GROUPS;
typedef struct _DRIVER_INFO_1W * LPDRIVER_INFO_1W;
typedef struct tagMCI_ANIM_STEP_PARMS MCI_ANIM_STEP_PARMS;
typedef struct tagMCI_OVLY_WINDOW_PARMSA * PMCI_OVLY_WINDOW_PARMSA;
typedef int ( * PFIND_DEBUG_FILE_CALLBACK)(void *,char *,void *);
typedef struct _OFNOTIFYEXW * LPOFNOTIFYEXW;
typedef struct tagTYPEATTR TYPEATTR;
typedef struct IInternetBindInfo * LPIINTERNETBINDINFO;
typedef struct _DRIVER_INFO_4A * PDRIVER_INFO_4;
typedef struct tagBITMAPFILEHEADER * LPBITMAPFILEHEADER;
typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
typedef struct _KEY_TYPE_SUBTYPE * PKEY_TYPE_SUBTYPE;
typedef struct _OFNOTIFYEXA * LPOFNOTIFYEXA;
typedef struct _KEY_TYPE_SUBTYPE KEY_TYPE_SUBTYPE;
typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO * PCMSG_KEY_TRANS_RECIPIENT_INFO;
typedef unsigned long POINTER_64_INT;
typedef class std::basic_ostream<char,std::char_traits<char> > ostream;
typedef struct tagREGISTERWORDW * PREGISTERWORDW;
typedef struct tagMCI_OVLY_WINDOW_PARMSW * PMCI_OVLY_WINDOW_PARMSW;
typedef struct _IMAGEHLP_DUPLICATE_SYMBOL IMAGEHLP_DUPLICATE_SYMBOL;
typedef struct tagCBT_CREATEWNDW CBT_CREATEWNDW;
typedef class std::basic_istream<char,std::char_traits<char> > istream;
typedef struct _MINIDUMP_UNLOADED_MODULE_LIST * PMINIDUMP_UNLOADED_MODULE_LIST;
typedef struct _TAPE_ERASE * PTAPE_ERASE;
typedef struct _SHQUERYRBINFO SHQUERYRBINFO;
typedef struct tagMCI_OPEN_PARMSW MCI_OPEN_PARMSW;
typedef struct _PRINTPROCESSOR_INFO_1W * LPPRINTPROCESSOR_INFO_1W;
typedef struct _MOUSE_EVENT_RECORD MOUSE_EVENT_RECORD;
typedef struct tagWNDCLASSW * PWNDCLASSW;
typedef struct IDropTarget * LPDROPTARGET;
typedef struct tagDRAWITEMSTRUCT * LPDRAWITEMSTRUCT;
typedef struct tagEMRSETPALETTEENTRIES EMRSETPALETTEENTRIES;
typedef struct tagWAVEINCAPSW WAVEINCAPSW;
typedef unsigned long HREFTYPE;
typedef struct _MODEMSETTINGS MODEMSETTINGS;
typedef struct _FLAGGED_BYTE_BLOB * UP_FLAGGED_BYTE_BLOB;
typedef enum tagOLEMISC OLEMISC;
typedef void * PSECURITY_DESCRIPTOR;
typedef unsigned short * PCUWSTR;
typedef struct tagAUXCAPS2A * PAUXCAPS2A;
typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILE;
typedef struct _SPC_SERIALIZED_OBJECT * PSPC_SERIALIZED_OBJECT;
typedef void * HLOCAL;
typedef struct HKEY__ * HKEY;
typedef unsigned short * PCWCH;
typedef struct tagMCI_ANIM_RECT_PARMS * PMCI_ANIM_RECT_PARMS;
typedef struct tagMCI_SET_PARMS * PMCI_SET_PARMS;
typedef struct tagWAVEINCAPSA WAVEINCAPSA;
typedef char * LPUTSTR;
typedef int ( * PROPENUMPROC)(struct HWND__ *,char *,void *);
typedef struct _DISPLAY_DEVICEA * PDISPLAY_DEVICE;
typedef struct tagRemSTGMEDIUM RemSTGMEDIUM;
typedef struct _CRYPT_URL_ARRAY CRYPT_URL_ARRAY;
typedef struct tagMCI_OPEN_PARMSA MCI_OPEN_PARMSA;
typedef struct _SERVICE_TABLE_ENTRYA * LPSERVICE_TABLE_ENTRY;
typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
typedef unsigned __int64 DWORD64;
typedef struct _SYSTEM_ALARM_ACE SYSTEM_ALARM_ACE;
typedef struct _IMAGE_NT_HEADERS64 * PIMAGE_NT_HEADERS64;
typedef long * PLONG_PTR;
typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION * PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
typedef enum _TOKEN_TYPE TOKEN_TYPE;
typedef struct _PSINJECTDATA * PPSINJECTDATA;
typedef struct _SERVICE_FAILURE_ACTIONSA * LPSERVICE_FAILURE_ACTIONSA;
typedef unsigned long ULONG_PTR;
typedef struct tagMCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMS;
typedef enum _tagPSUACTION PSUACTION;
typedef struct tagALTTABINFO * PALTTABINFO;
typedef struct tagWINDOWINFO * PWINDOWINFO;
typedef unsigned int MMRESULT;
typedef struct tagEVENTMSG * NPEVENTMSGMSG;
typedef struct _DRIVER_INFO_4W * PDRIVER_INFO_4W;
typedef struct tagEVENTMSG * LPEVENTMSGMSG;
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE PRINTER_NOTIFY_OPTIONS_TYPE;
typedef struct HWND__ * HWND;
typedef struct _CERT_DH_PARAMETERS CERT_DH_PARAMETERS;
typedef struct _DERBY_HISTORY_INFO_ DERBY_HISTORY_INFO;
typedef struct tagTOGGLEKEYS TOGGLEKEYS;
typedef struct _SHNAMEMAPPINGA * LPSHNAMEMAPPING;
typedef struct _DRIVER_INFO_3W * LPDRIVER_INFO_3W;
typedef struct tagINTERFACEINFO * LPINTERFACEINFO;
typedef struct tagMCI_OVLY_WINDOW_PARMSA * PMCI_OVLY_WINDOW_PARMS;
typedef struct tagEMRSETTEXTCOLOR EMRSETBKCOLOR;
typedef struct tagEMRRESIZEPALETTE EMRRESIZEPALETTE;
typedef struct _IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY;
typedef void * I_RPC_HANDLE;
typedef struct tagSTGMEDIUM * LPSTGMEDIUM;
typedef struct wavehdr_tag WAVEHDR;
typedef struct _DISK_HISTOGRAM * PDISK_HISTOGRAM;
typedef struct _CONTEXT CONTEXT;
typedef struct IOleWindow * LPOLEWINDOW;
typedef struct _SCHANNEL_ALG * PSCHANNEL_ALG;
typedef struct _DRIVER_INFO_4A * PDRIVER_INFO_4A;
typedef struct _OFNOTIFYEXA * LPOFNOTIFYEX;
typedef struct _TOKEN_CONTROL * PTOKEN_CONTROL;
typedef struct _SYSTEM_POWER_POLICY SYSTEM_POWER_POLICY;
typedef struct _SYSTEM_ALARM_ACE * PSYSTEM_ALARM_ACE;
typedef struct _MINIDUMP_THREAD_EX_CALLBACK * PMINIDUMP_THREAD_EX_CALLBACK;
typedef struct tagEMRSELECTCLIPPATH EMRSETICMMODE;
typedef struct tagRemHMETAFILEPICT RemHMETAFILEPICT;
typedef struct _CRYPT_SMIME_CAPABILITIES CRYPT_SMIME_CAPABILITIES;
typedef struct _CMSG_RC4_AUX_INFO * PCMSG_RC4_AUX_INFO;
typedef struct tagWAVEINCAPS2A WAVEINCAPS2;
typedef struct tagWAVEINCAPSA * PWAVEINCAPS;
typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
typedef struct tagMSG * NPMSG;
typedef struct _FORMAT_PARAMETERS * PFORMAT_PARAMETERS;
typedef int ( * PROPENUMPROCW)(struct HWND__ *,unsigned short *,void *);
typedef struct tagMSG * LPMSG;
typedef struct _CMSG_RC2_AUX_INFO * PCMSG_RC2_AUX_INFO;
typedef struct _IMAGE_RELOCATION IMAGE_RELOCATION;
typedef struct _DRIVER_INFO_2W * LPDRIVER_INFO_2W;
typedef struct tagMCI_SEEK_PARMS MCI_SEEK_PARMS;
typedef struct tagFINDREPLACEW * LPFINDREPLACEW;
typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILEA;
typedef struct tagMCI_VD_PLAY_PARMS * LPMCI_VD_PLAY_PARMS;
typedef int BOOL;
typedef struct _PRINTER_INFO_6 PRINTER_INFO_6;
typedef struct _RPC_PROTSEQ_ENDPOINT RPC_PROTSEQ_ENDPOINT;
typedef struct in_addr * LPIN_ADDR;
typedef struct tagTLIBATTR * LPTLIBATTR;
typedef struct tagMCI_OVLY_SAVE_PARMSW MCI_OVLY_SAVE_PARMSW;
typedef struct tagWAVEINCAPSA WAVEINCAPS;
typedef int ( * PROPENUMPROCA)(struct HWND__ *,char *,void *);
typedef struct tagMODULEENTRY32 * LPMODULEENTRY32;
typedef struct _MAT2 * LPMAT2;
typedef struct tagMCI_LOAD_PARMSA * PMCI_LOAD_PARMSA;
typedef void ( * RPC_HTTP_PROXY_FREE_STRING)(unsigned short *);
typedef struct tagMCI_OPEN_PARMSA MCI_OPEN_PARMS;
typedef enum tagINVOKEKIND INVOKEKIND;
typedef struct _flowspec * LPFLOWSPEC;
typedef struct _OSVERSIONINFOW RTL_OSVERSIONINFOW;
typedef enum tagOLEUPDATE * LPOLEUPDATE;
typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILEW;
typedef struct _ImageArchitectureHeader * PIMAGE_ARCHITECTURE_HEADER;
typedef struct _MEMORY_BASIC_INFORMATION32 MEMORY_BASIC_INFORMATION32;
typedef unsigned int MCIDEVICEID;
typedef struct _CERT_REVOCATION_PARA * PCERT_REVOCATION_PARA;
typedef union tagBINDPTR * LPBINDPTR;
typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO CMSG_KEY_TRANS_RECIPIENT_INFO;
typedef HRESULT ( * PFN_PROVIDER_TESTFINALPOLICY_CALL)(struct _CRYPT_PROVIDER_DATA *);
typedef struct tagREGISTERWORDA REGISTERWORD;
typedef int ( * ENUMRESNAMEPROCA)(struct HINSTANCE__ *,char *,char *,long);
typedef struct _PRINTPROCESSOR_INFO_1W PRINTPROCESSOR_INFO_1W;
typedef struct tagPOINT * NPPOINT;
typedef struct _SHNAMEMAPPINGA SHNAMEMAPPINGA;
typedef struct tagMCI_OVLY_SAVE_PARMSW * LPMCI_OVLY_SAVE_PARMSW;
typedef int * LPBOOL;
typedef void ( * _PHNDLR)(int);
typedef struct tagPOINT * LPPOINT;
typedef struct _GRADIENT_TRIANGLE GRADIENT_TRIANGLE;
typedef struct _PERF_COUNTER_BLOCK * PPERF_COUNTER_BLOCK;
typedef struct HKL__ * HKL;
typedef struct _SC_ACTION * LPSC_ACTION;
typedef enum tagFUNCKIND FUNCKIND;
typedef struct _PROPSHEETPAGEW_V3 * LPPROPSHEETPAGEW_V3;
typedef struct _PROPSHEETPAGEW * LPPROPSHEETPAGEW_V2;
typedef int ( * DBIQueryModFromAddrProc)(struct DBI *,unsigned short,long,struct Mod * *,unsigned short *,long *,long *);
typedef struct _PROPSHEETPAGEW_V1 * LPPROPSHEETPAGEW_V1;
typedef struct tMIXERCONTROLDETAILS_SIGNED * PMIXERCONTROLDETAILS_SIGNED;
typedef enum tagSTATFLAG STATFLAG;
typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR * PCRYPT_ENROLLMENT_NAME_VALUE_PAIR;
typedef struct tagRECT * LPRECT;
typedef struct tagMODULEENTRY32 MODULEENTRY32;
typedef struct _TOKEN_AUDIT_POLICY TOKEN_AUDIT_POLICY;
typedef struct tagRECT * NPRECT;
typedef struct _SEC_WINNT_AUTH_IDENTITY_W * PSEC_WINNT_AUTH_IDENTITY_W;
typedef struct _MODEMDEVCAPS * PMODEMDEVCAPS;
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX * PCACTIVATION_CONTEXT_QUERY_INDEX;
typedef struct tagLOGCOLORSPACEA * LPLOGCOLORSPACE;
typedef unsigned long SCARDHANDLE;
typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 NDR_USER_MARSHAL_INFO_LEVEL1;
typedef struct ICreateTypeInfo2 * LPCREATETYPEINFO2;
typedef char * LPCCH;
typedef struct tagWAVEOUTCAPS2A * LPWAVEOUTCAPS2A;
typedef struct tagWAVEOUTCAPS2A * NPWAVEOUTCAPS2A;
typedef struct _s__RTTIBaseClassArray __RTTIBaseClassArray;
typedef struct tagMCI_OVLY_LOAD_PARMSW * PMCI_OVLY_LOAD_PARMSW;
typedef struct tagBITMAPINFO * PBITMAPINFO;
typedef struct tagABORTPATH * PEMRABORTPATH;
typedef struct _JOB_INFO_2A * PJOB_INFO_2A;
typedef struct tagWAVEOUTCAPS2W * NPWAVEOUTCAPS2W;
typedef struct _MMIOINFO * PMMIOINFO;
typedef enum __MIDL_IInternetSecurityManager_0001 PUAF;
typedef struct tagWAVEOUTCAPS2W * LPWAVEOUTCAPS2W;
typedef struct _CMSG_RC4_AUX_INFO CMSG_RC4_AUX_INFO;
typedef struct ICreateTypeInfo * LPCREATETYPEINFO;
typedef struct tagEMRRESTOREDC * PEMRRESTOREDC;
typedef struct _WSANAMESPACE_INFOA * LPWSANAMESPACE_INFO;
typedef struct tagEMRSETCOLORADJUSTMENT EMRSETCOLORADJUSTMENT;
typedef struct joyinfo_tag JOYINFO;
typedef struct _CHANGER_ELEMENT_LIST CHANGER_ELEMENT_LIST;
typedef enum _IMAGEHLP_STATUS_REASON IMAGEHLP_STATUS_REASON;
typedef struct tagMCI_OVLY_LOAD_PARMSA * PMCI_OVLY_LOAD_PARMSA;
typedef struct WSAData WSADATA;
typedef struct _CTL_INFO CTL_INFO;
typedef struct _CERT_REVOCATION_PARA CERT_REVOCATION_PARA;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef class std::basic_streambuf<char,std::char_traits<char> > streambuf;
typedef struct tagREGISTERWORDA REGISTERWORDA;
typedef int ( * PFN_FREEDEFUSAGE)(char *,struct _CRYPT_PROVIDER_DEFUSAGE *);
typedef struct _MINIDUMP_THREAD_EX_LIST * PMINIDUMP_THREAD_EX_LIST;
typedef char * PCHAR;
typedef struct SC_HANDLE__ * * LPSC_HANDLE;
typedef struct IBindCtx * LPBC;
typedef wchar_t WCHAR;
typedef __int64 __time64_t;
typedef char TCHAR;
typedef struct tagEMRTEXT EMRTEXT;
typedef unsigned char UCHAR;
typedef struct timecaps_tag * PTIMECAPS;
typedef struct tagMETHODDATA METHODDATA;
typedef struct _MINIDUMP_THREAD_LIST * PMINIDUMP_THREAD_LIST;
typedef struct _CERT_LDAP_STORE_OPENED_PARA * PCERT_LDAP_STORE_OPENED_PARA;
typedef enum tagShutdownType ShutdownType;
typedef struct tagREGISTERWORDW REGISTERWORDW;
typedef unsigned long ( * PFE_EXPORT_FUNC)(unsigned char *,void *,unsigned long);
typedef struct tagMONHSZSTRUCTA * PMONHSZSTRUCTA;
typedef class type_info * __RTtypeidReturnType;
typedef struct _CERT_SYSTEM_STORE_INFO CERT_SYSTEM_STORE_INFO;
typedef struct _JOB_INFO_1A * PJOB_INFO_1A;
typedef struct _PROPSHEETPAGEA * LPPROPSHEETPAGEA;
typedef void * ( * PSYMBOL_FUNCENTRY_CALLBACK64)(void *,unsigned __int64,unsigned __int64);
typedef int ( * PSYM_ENUMERATESYMBOLS_CALLBACK)(struct _SYMBOL_INFO *,unsigned long,void *);
typedef unsigned char BCHAR;
typedef char CCHAR;
typedef struct _RECTL * LPRECTL;
typedef void ( * PFN_CPD_MEM_FREE)(void *);
typedef struct _CRYPT_CREDENTIALS * PCRYPT_CREDENTIALS;
typedef struct tagTTPOLYGONHEADER TTPOLYGONHEADER;
typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO * PCMSG_MAIL_LIST_ENCRYPT_INFO;
typedef unsigned char FCHAR;
typedef struct tagRECONVERTSTRING RECONVERTSTRING;
typedef struct _UNLOAD_DLL_DEBUG_INFO * LPUNLOAD_DLL_DEBUG_INFO;
typedef struct ICatalogFileInfo * LPCATALOGFILEINFO;
typedef struct tagMIXERLINEW MIXERLINEW;
typedef struct tagEMRSETMITERLIMIT * PEMRSETMITERLIMIT;
typedef struct _PROPSHEETPAGEW * LPCPROPSHEETPAGEW;
typedef struct tagPANOSE * LPPANOSE;
typedef void * GLOBALHANDLE;
typedef unsigned short * LPCWSTR;
typedef struct tagWAVEOUTCAPS2A * LPWAVEOUTCAPS2;
typedef struct tagCOLORADJUSTMENT * LPCOLORADJUSTMENT;
typedef int ( * PFN_CPD_ADD_STORE)(struct _CRYPT_PROVIDER_DATA *,void *);
typedef struct tagPRINTPAGERANGE PRINTPAGERANGE;
typedef struct tagWAVEOUTCAPS2A * NPWAVEOUTCAPS2;
typedef struct tagPOINTS POINTS;
typedef struct _wireSAFEARRAY * * wirePSAFEARRAY;
typedef struct _IMAGEHLP_LINE * PIMAGEHLP_LINE;
typedef struct tagCOLORADJUSTMENT * PCOLORADJUSTMENT;
typedef struct _CRYPT_HASH_INFO * PCRYPT_HASH_INFO;
typedef struct _DISCDLGSTRUCTW DISCDLGSTRUCTW;
typedef struct tagFINDREPLACEW FINDREPLACEW;
typedef struct tagMENUITEMINFOA * LPCMENUITEMINFO;
typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD IMAGEHLP_DEFERRED_SYMBOL_LOAD;
typedef struct tagEMRBITBLT * PEMRBITBLT;
typedef struct _userHMETAFILE userHMETAFILE;
typedef struct tagMCI_WAVE_OPEN_PARMSA * LPMCI_WAVE_OPEN_PARMSA;
typedef struct _MINIDUMP_THREAD MINIDUMP_THREAD;
typedef unsigned int ( * LPCFHOOKPROC)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct _PROPSHEETPAGEA * LPCPROPSHEETPAGEA;
typedef int ( * PFN_CMSG_EXPORT_MAIL_LIST)(struct _CMSG_CONTENT_ENCRYPT_INFO *,struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO *,struct _CMSG_MAIL_LIST_ENCRYPT_INFO *,unsigned long,void *);
typedef struct _GENERIC_MAPPING * PGENERIC_MAPPING;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETVIEWPORTORGEX;
typedef struct _CRYPT_PASSWORD_CREDENTIALSA * PCRYPT_PASSWORD_CREDENTIALS;
typedef struct tagLOGPALETTE * PLOGPALETTE;
typedef struct _CTL_CONTEXT * PCTL_CONTEXT;
typedef struct _FPO_DATA * PFPO_DATA;
typedef struct tagMIXERCAPSW MIXERCAPSW;
typedef struct joyinfoex_tag * PJOYINFOEX;
typedef struct tagEMRPOLYPOLYLINE * PEMRPOLYPOLYLINE;
typedef struct _MEMORYSTATUSEX * LPMEMORYSTATUSEX;
typedef struct tagMCI_OVLY_LOAD_PARMSA * PMCI_OVLY_LOAD_PARMS;
typedef struct tagMCI_ANIM_OPEN_PARMSW MCI_ANIM_OPEN_PARMSW;
typedef struct _IMAGEHLP_CBA_EVENT * PIMAGEHLP_CBA_EVENT;
typedef union _SLIST_HEADER SLIST_HEADER;
typedef struct tagREGISTERWORDA * LPREGISTERWORD;
typedef struct tagMOUSEHOOKSTRUCT * LPMOUSEHOOKSTRUCT;
typedef struct tagREGISTERWORDA * NPREGISTERWORD;
typedef struct _PROCESSOR_POWER_POLICY * PPROCESSOR_POWER_POLICY;
typedef unsigned short LANGID;
typedef struct _MINIDUMP_THREAD_LIST MINIDUMP_THREAD_LIST;
typedef char * PSTR;
typedef unsigned short _ino_t;
typedef struct tagMIDIINCAPS2A * PMIDIINCAPS2;
typedef struct tagENUMLOGFONTW * LPENUMLOGFONTW;
typedef union _IMAGE_AUX_SYMBOL IMAGE_AUX_SYMBOL;
typedef void ( * func57408716)(void *);
typedef unsigned long ( * PFLS_ALLOC_FUNCTION)(func57408716);
typedef struct tagCHARSETINFO * LPCHARSETINFO;
typedef struct _CERT_ID * PCERT_ID;
typedef struct tagCHARSETINFO * NPCHARSETINFO;
typedef struct _SC_ACTION SC_ACTION;
typedef struct _EFS_KEY_INFO EFS_KEY_INFO;
typedef struct _CMC_TAGGED_CERT_REQUEST * PCMC_TAGGED_CERT_REQUEST;
typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR RTL_VERIFIER_PROVIDER_DESCRIPTOR;
typedef struct tagEMRSETARCDIRECTION EMRSETARCDIRECTION;
typedef struct tagCSPLATFORM CSPLATFORM;
typedef struct _PORT_INFO_2A PORT_INFO_2A;
typedef enum _DEVICE_POWER_STATE * PDEVICE_POWER_STATE;
typedef struct _CHANGER_READ_ELEMENT_STATUS CHANGER_READ_ELEMENT_STATUS;
typedef struct _MEMORYSTATUS * LPMEMORYSTATUS;
typedef void ( * LPWSAOVERLAPPED_COMPLETION_ROUTINE)(unsigned long,unsigned long,struct _OVERLAPPED *,unsigned long);
typedef struct _PROPSHEETPAGEW_V1 PROPSHEETPAGEW_V1;
typedef struct _REMSECURITY_ATTRIBUTES * PREMSECURITY_ATTRIBUTES;
typedef unsigned short * BSTR;
typedef struct _DRIVER_INFO_5A * PDRIVER_INFO_5;
typedef struct _PROPSHEETPAGEW_V3 PROPSHEETPAGEW_V3;
typedef struct IWrappedProtocol * LPIWRAPPEDPROTOCOL;
typedef struct _WIN32_FIND_DATAA WIN32_FIND_DATAA;
typedef struct _PROPSHEETPAGEW PROPSHEETPAGEW_V2;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE * PSYSTEM_AUDIT_CALLBACK_ACE;
typedef unsigned long * PKSPIN_LOCK;
typedef struct _CERT_ACCESS_DESCRIPTION * PCERT_ACCESS_DESCRIPTION;
typedef struct HSTR__ * HSTR;
typedef struct _PROVIDOR_INFO_2A PROVIDOR_INFO_2;
typedef struct _CERT_ALT_NAME_INFO CERT_ALT_NAME_INFO;
typedef struct _KDHELP64 * PKDHELP64;
typedef struct _JOB_INFO_1A * LPJOB_INFO_1;
typedef struct _PROVIDOR_INFO_1A PROVIDOR_INFO_1;
typedef struct IInternet * LPIINTERNET;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR * PIMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct tagMIXERLINEW * PMIXERLINEW;
typedef struct tagCREATESTRUCTW * LPCREATESTRUCTW;
typedef struct tagEMRFORMAT EMRFORMAT;
typedef struct _WSAVersion * LPWSAVERSION;
typedef void MENUTEMPLATEA;
typedef struct _CERT_STORE_PROV_FIND_INFO CERT_STORE_PROV_FIND_INFO;
typedef int ( * PENUMLOADED_MODULES_CALLBACK)(char *,unsigned long,unsigned long,void *);
typedef unsigned short * LPWSTR;
typedef struct tagAUXCAPS2A * PAUXCAPS2;
typedef void * LPMENUTEMPLATEA;
typedef struct _ADAPTER_STATUS * PADAPTER_STATUS;
typedef struct _OBJECT_TYPE_LIST * POBJECT_TYPE_LIST;
typedef struct tagTLIBATTR TLIBATTR;
typedef struct _PRINTER_INFO_7A PRINTER_INFO_7A;
typedef struct _IMAGE_DEBUG_DIRECTORY IMAGE_DEBUG_DIRECTORY;
typedef unsigned long FLONG;
typedef struct _PORT_INFO_3A PORT_INFO_3A;
typedef struct _MODLOAD_DATA * PMODLOAD_DATA;
typedef struct _SERVICE_TABLE_ENTRYA * LPSERVICE_TABLE_ENTRYA;
typedef struct tagSTYLESTRUCT STYLESTRUCT;
typedef struct tagWINDOWINFO WINDOWINFO;
typedef struct _MESSAGE_RESOURCE_DATA MESSAGE_RESOURCE_DATA;
typedef struct _SECURITY_QUALITY_OF_SERVICE * PSECURITY_QUALITY_OF_SERVICE;
typedef struct wavehdr_tag * PWAVEHDR;
typedef void * LPMENUTEMPLATEW;
typedef struct tagDELETEITEMSTRUCT DELETEITEMSTRUCT;
typedef struct _SERVICE_FAILURE_ACTIONSA * LPSERVICE_FAILURE_ACTIONS;
typedef void MENUTEMPLATEW;
typedef struct _FULL_PTR_XLAT_TABLES FULL_PTR_XLAT_TABLES;
typedef struct tagMIXERLINEA * PMIXERLINEA;
typedef struct _IMAGEHLP_SYMBOL64_PACKAGE * PIMAGEHLP_SYMBOL64_PACKAGE;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST * PJOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct tagAUXCAPSA * PAUXCAPS;
typedef struct tagCREATESTRUCTA * LPCREATESTRUCTA;
typedef void (RPC_CLIENT_FREE)(void *);
typedef long * PLONG;
typedef enum tagSTREAM_SEEK STREAM_SEEK;
typedef struct _PROCESS_INFORMATION * PPROCESS_INFORMATION;
typedef struct tagOBJECTDESCRIPTOR * LPOBJECTDESCRIPTOR;
typedef struct _PRINTER_INFO_7W PRINTER_INFO_7W;
typedef struct _CRL_DIST_POINTS_INFO CRL_DIST_POINTS_INFO;
typedef struct _CRYPT_OID_INFO * PCCRYPT_OID_INFO;
typedef struct _CRL_CONTEXT * PCRL_CONTEXT;
typedef unsigned long ULONG;
typedef struct IOleObject * LPOLEOBJECT;
typedef struct tagHELPWININFOA HELPWININFOA;
typedef struct _tagSTACKFRAME64 * LPSTACKFRAME64;
typedef struct tagEMRPOLYLINE * PEMRPOLYLINETO;
typedef void * HCRYPTOIDFUNCADDR;
typedef struct tagREGISTERWORDA * LPREGISTERWORDA;
typedef struct _DRIVER_INFO_5W * PDRIVER_INFO_5W;
typedef struct tagENUMLOGFONTW ENUMLOGFONTW;
typedef struct tagREGISTERWORDA * NPREGISTERWORDA;
typedef struct tagEMRCREATEPEN EMRCREATEPEN;
typedef struct tagMIDIINCAPS2A * PMIDIINCAPS2A;
typedef struct _RACE_SCHEDULE_ * LP_RACE_SCHEDULE;
typedef char * LPTSTR;
typedef struct _ADMINISTRATOR_POWER_POLICY ADMINISTRATOR_POWER_POLICY;
typedef struct _DCB * LPDCB;
typedef struct _JOB_INFO_1W * LPJOB_INFO_1W;
typedef struct tagCADBL CADBL;
typedef struct tagMONMSGSTRUCT MONMSGSTRUCT;
typedef int ( * PFN_CERT_ENUM_SYSTEM_STORE_LOCATION)(unsigned short *,unsigned long,void *,void *);
typedef struct _s_ThrowInfo ThrowInfo;
typedef struct _WIN32_STREAM_ID WIN32_STREAM_ID;
typedef struct tagEMRPOLYLINE16 EMRPOLYLINE16;
typedef struct tagMIDIINCAPS2W * PMIDIINCAPS2W;
typedef struct _MODULE_TYPE_INFO * PMODULE_TYPE_INFO;
typedef struct _CMSG_CMS_RECIPIENT_INFO * PCMSG_CMS_RECIPIENT_INFO;
typedef struct tagREGISTERWORDW * NPREGISTERWORDW;
typedef struct _OUTLINETEXTMETRICA * LPOUTLINETEXTMETRIC;
typedef void ( * PMFN)();
typedef struct tagREGISTERWORDW * LPREGISTERWORDW;
typedef struct _DRIVER_INFO_5A * PDRIVER_INFO_5A;
typedef struct _OUTLINETEXTMETRICA * NPOUTLINETEXTMETRIC;
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
typedef int ptrdiff_t;
typedef struct _CMSG_ENCRYPTED_ENCODE_INFO CMSG_ENCRYPTED_ENCODE_INFO;
typedef struct tagMCI_SEEK_PARMS * PMCI_SEEK_PARMS;
typedef struct mmtime_tag MMTIME;
typedef struct _JOB_INFO_1A * LPJOB_INFO_1A;
typedef struct tagAUXCAPSW * PAUXCAPSW;
typedef struct _TOKEN_PRIVILEGES TOKEN_PRIVILEGES;
typedef void MENUTEMPLATE;
typedef void * LPMENUTEMPLATE;
typedef struct tagEMRSETVIEWPORTORGEX * PEMRSETBRUSHORGEX;
typedef enum tagApplicationType ApplicationType;
typedef struct _RPC_SYNTAX_IDENTIFIER RPC_SYNTAX_IDENTIFIER;
typedef struct _PORT_INFO_1A PORT_INFO_1A;
typedef struct _PRINTER_INFO_7A PRINTER_INFO_7;
typedef struct _IMAGE_LINENUMBER * PIMAGE_LINENUMBER;
typedef struct WINTRUST_FILE_INFO_ WINTRUST_FILE_INFO;
typedef unsigned char BOOLEAN;
typedef struct _tiddata * _ptiddata;
typedef struct sockaddr_in SOCKADDR_IN;
typedef struct _STORAGE_BUS_RESET_REQUEST STORAGE_BUS_RESET_REQUEST;
typedef struct HMIDISTRM__ * HMIDISTRM;
typedef enum _TOKEN_INFORMATION_CLASS * PTOKEN_INFORMATION_CLASS;
typedef struct _CRYPT_SIGN_MESSAGE_PARA * PCRYPT_SIGN_MESSAGE_PARA;
typedef struct tagAUXCAPSA * PAUXCAPSA;
typedef struct tagCREATESTRUCTA * LPCREATESTRUCT;
typedef struct tagMIXERLINEA * PMIXERLINE;
typedef void ( * SENDASYNCPROC)(struct HWND__ *,unsigned int,unsigned long,long);
typedef struct _ZONEATTRIBUTES * LPZONEATTRIBUTES;
typedef struct HMENU__ * HMENU;
typedef int ( * DLGPROC)(struct HWND__ *,unsigned int,unsigned int,long);
typedef struct _FILESYSTEM_STATISTICS FILESYSTEM_STATISTICS;
typedef struct _CTL_VERIFY_USAGE_STATUS * PCTL_VERIFY_USAGE_STATUS;
typedef struct _TAPE_SET_DRIVE_PARAMETERS * PTAPE_SET_DRIVE_PARAMETERS;
typedef struct HWAVEOUT__ * * LPHWAVEOUT;
typedef struct _PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUES;
typedef struct tagEMRFRAMERGN EMRFRAMERGN;
typedef struct _PROV_ENUMALGS PROV_ENUMALGS;
typedef struct ICreateTypeLib * LPCREATETYPELIB;
enum tagSYSKIND
{
    SYS_WIN16=0,
    SYS_WIN32=1,
    SYS_MAC=2,
    SYS_WIN64=3
};
enum tagDOMNodeType
{
    NODE_INVALID=0,
    NODE_ELEMENT=1,
    NODE_ATTRIBUTE=2,
    NODE_TEXT=3,
    NODE_CDATA_SECTION=4,
    NODE_ENTITY_REFERENCE=5,
    NODE_ENTITY=6,
    NODE_PROCESSING_INSTRUCTION=7,
    NODE_COMMENT=8,
    NODE_DOCUMENT=9,
    NODE_DOCUMENT_TYPE=10,
    NODE_DOCUMENT_FRAGMENT=11,
    NODE_NOTATION=12
};
enum tagXMLEMEM_TYPE
{
    XMLELEMTYPE_ELEMENT=0,
    XMLELEMTYPE_TEXT=1,
    XMLELEMTYPE_COMMENT=2,
    XMLELEMTYPE_DOCUMENT=3,
    XMLELEMTYPE_DTD=4,
    XMLELEMTYPE_PI=5,
    XMLELEMTYPE_OTHER=6
};
enum tagBINDSTATUS
{
    BINDSTATUS_FINDINGRESOURCE=1,
    BINDSTATUS_CONNECTING=2,
    BINDSTATUS_REDIRECTING=3,
    BINDSTATUS_BEGINDOWNLOADDATA=4,
    BINDSTATUS_DOWNLOADINGDATA=5,
    BINDSTATUS_ENDDOWNLOADDATA=6,
    BINDSTATUS_BEGINDOWNLOADCOMPONENTS=7,
    BINDSTATUS_INSTALLINGCOMPONENTS=8,
    BINDSTATUS_ENDDOWNLOADCOMPONENTS=9,
    BINDSTATUS_USINGCACHEDCOPY=10,
    BINDSTATUS_SENDINGREQUEST=11,
    BINDSTATUS_CLASSIDAVAILABLE=12,
    BINDSTATUS_MIMETYPEAVAILABLE=13,
    BINDSTATUS_CACHEFILENAMEAVAILABLE=14,
    BINDSTATUS_BEGINSYNCOPERATION=15,
    BINDSTATUS_ENDSYNCOPERATION=16,
    BINDSTATUS_BEGINUPLOADDATA=17,
    BINDSTATUS_UPLOADINGDATA=18,
    BINDSTATUS_ENDUPLOADDATA=19,
    BINDSTATUS_PROTOCOLCLASSID=20,
    BINDSTATUS_ENCODING=21,
    BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE=22,
    BINDSTATUS_CLASSINSTALLLOCATION=23,
    BINDSTATUS_DECODING=24,
    BINDSTATUS_LOADINGMIMEHANDLER=25,
    BINDSTATUS_CONTENTDISPOSITIONATTACH=26,
    BINDSTATUS_FILTERREPORTMIMETYPE=27,
    BINDSTATUS_CLSIDCANINSTANTIATE=28,
    BINDSTATUS_IUNKNOWNAVAILABLE=29,
    BINDSTATUS_DIRECTBIND=30,
    BINDSTATUS_RAWMIMETYPE=31,
    BINDSTATUS_PROXYDETECTING=32,
    BINDSTATUS_ACCEPTRANGES=33,
    BINDSTATUS_COOKIE_SENT=34,
    BINDSTATUS_COMPACT_POLICY_RECEIVED=35,
    BINDSTATUS_COOKIE_SUPPRESSED=36,
    BINDSTATUS_COOKIE_STATE_UNKNOWN=37,
    BINDSTATUS_COOKIE_STATE_ACCEPT=38,
    BINDSTATUS_COOKIE_STATE_REJECT=39,
    BINDSTATUS_COOKIE_STATE_PROMPT=40,
    BINDSTATUS_COOKIE_STATE_LEASH=41,
    BINDSTATUS_COOKIE_STATE_DOWNGRADE=42,
    BINDSTATUS_POLICY_HREF=43,
    BINDSTATUS_P3P_HEADER=44,
    BINDSTATUS_SESSION_COOKIE_RECEIVED=45,
    BINDSTATUS_PERSISTENT_COOKIE_RECEIVED=46,
    BINDSTATUS_SESSION_COOKIES_ALLOWED=47
};
enum VARENUM
{
    VT_EMPTY=0,
    VT_NULL=1,
    VT_I2=2,
    VT_I4=3,
    VT_R4=4,
    VT_R8=5,
    VT_CY=6,
    VT_DATE=7,
    VT_BSTR=8,
    VT_DISPATCH=9,
    VT_ERROR=10,
    VT_BOOL=11,
    VT_VARIANT=12,
    VT_UNKNOWN=13,
    VT_DECIMAL=14,
    VT_I1=16,
    VT_UI1=17,
    VT_UI2=18,
    VT_UI4=19,
    VT_I8=20,
    VT_UI8=21,
    VT_INT=22,
    VT_UINT=23,
    VT_VOID=24,
    VT_HRESULT=25,
    VT_PTR=26,
    VT_SAFEARRAY=27,
    VT_CARRAY=28,
    VT_USERDEFINED=29,
    VT_LPSTR=30,
    VT_LPWSTR=31,
    VT_RECORD=36,
    VT_INT_PTR=37,
    VT_UINT_PTR=38,
    VT_FILETIME=64,
    VT_BLOB=65,
    VT_STREAM=66,
    VT_STORAGE=67,
    VT_STREAMED_OBJECT=68,
    VT_STORED_OBJECT=69,
    VT_BLOB_OBJECT=70,
    VT_CF=71,
    VT_CLSID=72,
    VT_VERSIONED_STREAM=73,
    VT_BSTR_BLOB=4095,
    VT_VECTOR=4096,
    VT_ARRAY=8192,
    VT_BYREF=16384,
    VT_RESERVED=32768,
    VT_ILLEGAL=65535,
    VT_ILLEGALMASKED=4095,
    VT_TYPEMASK=4095
};
enum tagApplicationType
{
    ServerApplication=0,
    LibraryApplication=1
};
enum tagShutdownType
{
    IdleShutdown=0,
    ForcedShutdown=1
};
enum _tagPARSEACTION
{
    PARSE_CANONICALIZE=1,
    PARSE_FRIENDLY=2,
    PARSE_SECURITY_URL=3,
    PARSE_ROOTDOCUMENT=4,
    PARSE_DOCUMENT=5,
    PARSE_ANCHOR=6,
    PARSE_ENCODE=7,
    PARSE_DECODE=8,
    PARSE_PATH_FROM_URL=9,
    PARSE_URL_FROM_PATH=10,
    PARSE_MIME=11,
    PARSE_SERVER=12,
    PARSE_SCHEMA=13,
    PARSE_SITE=14,
    PARSE_DOMAIN=15,
    PARSE_LOCATION=16,
    PARSE_SECURITY_DOMAIN=17,
    PARSE_ESCAPE=18,
    PARSE_UNESCAPE=19
};
enum tagCHANGEKIND
{
    CHANGEKIND_ADDMEMBER=0,
    CHANGEKIND_DELETEMEMBER=1,
    CHANGEKIND_SETNAMES=2,
    CHANGEKIND_SETDOCUMENTATION=3,
    CHANGEKIND_GENERAL=4,
    CHANGEKIND_INVALIDATE=5,
    CHANGEKIND_CHANGEFAILED=6,
    CHANGEKIND_MAX=7
};
enum _tagPSUACTION
{
    PSU_DEFAULT=1,
    PSU_SECURITY_URL_ONLY=2
};
enum _tagQUERYOPTION
{
    QUERY_EXPIRATION_DATE=1,
    QUERY_TIME_OF_LAST_CHANGE=2,
    QUERY_CONTENT_ENCODING=3,
    QUERY_CONTENT_TYPE=4,
    QUERY_REFRESH=5,
    QUERY_RECOMBINE=6,
    QUERY_CAN_NAVIGATE=7,
    QUERY_USES_NETWORK=8,
    QUERY_IS_CACHED=9,
    QUERY_IS_INSTALLEDENTRY=10,
    QUERY_IS_CACHED_OR_MAPPED=11,
    QUERY_USES_CACHE=12,
    QUERY_IS_SECURE=13,
    QUERY_IS_SAFE=14
};
enum tagTYSPEC
{
    TYSPEC_CLSID=0,
    TYSPEC_FILEEXT=1,
    TYSPEC_MIMETYPE=2,
    TYSPEC_FILENAME=3,
    TYSPEC_PROGID=4,
    TYSPEC_PACKAGENAME=5,
    TYSPEC_OBJECTID=6
};
enum __MIDL_ICodeInstall_0001
{
    CIP_DISK_FULL=0,
    CIP_ACCESS_DENIED=1,
    CIP_NEWER_VERSION_EXISTS=2,
    CIP_OLDER_VERSION_EXISTS=3,
    CIP_NAME_CONFLICT=4,
    CIP_TRUST_VERIFICATION_COMPONENT_MISSING=5,
    CIP_EXE_SELF_REGISTERATION_TIMEOUT=6,
    CIP_UNSAFE_TO_ABORT=7,
    CIP_NEED_REBOOT=8
};
enum tagTYPEKIND
{
    TKIND_ENUM=0,
    TKIND_RECORD=1,
    TKIND_MODULE=2,
    TKIND_INTERFACE=3,
    TKIND_DISPATCH=4,
    TKIND_COCLASS=5,
    TKIND_ALIAS=6,
    TKIND_UNION=7,
    TKIND_MAX=8
};
enum tagDESCKIND
{
    DESCKIND_NONE=0,
    DESCKIND_FUNCDESC=1,
    DESCKIND_VARDESC=2,
    DESCKIND_TYPECOMP=3,
    DESCKIND_IMPLICITAPPOBJ=4,
    DESCKIND_MAX=5
};
enum ReplacesCorHdrNumericDefines
{
    COMIMAGE_FLAGS_ILONLY=1,
    COMIMAGE_FLAGS_32BITREQUIRED=2,
    COMIMAGE_FLAGS_IL_LIBRARY=4,
    COMIMAGE_FLAGS_STRONGNAMESIGNED=8,
    COMIMAGE_FLAGS_TRACKDEBUGDATA=65536,
    COR_VERSION_MAJOR_V2=2,
    COR_VERSION_MAJOR=2,
    COR_VERSION_MINOR=0,
    COR_DELETED_NAME_LENGTH=8,
    COR_VTABLEGAP_NAME_LENGTH=8,
    NATIVE_TYPE_MAX_CB=1,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=255,
    IMAGE_COR_MIH_METHODRVA=1,
    IMAGE_COR_MIH_EHRVA=2,
    IMAGE_COR_MIH_BASICBLOCK=8,
    COR_VTABLE_32BIT=1,
    COR_VTABLE_64BIT=2,
    COR_VTABLE_FROM_UNMANAGED=4,
    COR_VTABLE_CALL_MOST_DERIVED=16,
    IMAGE_COR_EATJ_THUNK_SIZE=32,
    MAX_CLASS_NAME=1024,
    MAX_PACKAGE_NAME=1024
};
enum tagCALLCONV
{
    CC_FASTCALL=0,
    CC_CDECL=1,
    CC_MSCPASCAL=2,
    CC_PASCAL=2,
    CC_MACPASCAL=3,
    CC_STDCALL=4,
    CC_FPFASTCALL=5,
    CC_SYSCALL=6,
    CC_MPWCDECL=7,
    CC_MPWPASCAL=8,
    CC_MAX=9
};
enum tagFUNCKIND
{
    FUNC_VIRTUAL=0,
    FUNC_PUREVIRTUAL=1,
    FUNC_NONVIRTUAL=2,
    FUNC_STATIC=3,
    FUNC_DISPATCH=4
};
enum tagVARKIND
{
    VAR_PERINSTANCE=0,
    VAR_STATIC=1,
    VAR_CONST=2,
    VAR_DISPATCH=3
};
enum tagURLZONE
{
    URLZONE_PREDEFINED_MIN=0,
    URLZONE_LOCAL_MACHINE=0,
    URLZONE_INTRANET=1,
    URLZONE_TRUSTED=2,
    URLZONE_INTERNET=3,
    URLZONE_UNTRUSTED=4,
    URLZONE_PREDEFINED_MAX=999,
    URLZONE_USER_MIN=1000,
    URLZONE_USER_MAX=10000
};
enum _URLZONEREG
{
    URLZONEREG_DEFAULT=0,
    URLZONEREG_HKLM=1,
    URLZONEREG_HKCU=2
};
enum tagBINDSTRING
{
    BINDSTRING_HEADERS=1,
    BINDSTRING_ACCEPT_MIMES=2,
    BINDSTRING_EXTRA_URL=3,
    BINDSTRING_LANGUAGE=4,
    BINDSTRING_USERNAME=5,
    BINDSTRING_PASSWORD=6,
    BINDSTRING_UA_PIXELS=7,
    BINDSTRING_UA_COLOR=8,
    BINDSTRING_OS=9,
    BINDSTRING_USER_AGENT=10,
    BINDSTRING_ACCEPT_ENCODINGS=11,
    BINDSTRING_POST_COOKIE=12,
    BINDSTRING_POST_DATA_MIME=13,
    BINDSTRING_URL=14,
    BINDSTRING_IID=15,
    BINDSTRING_FLAG_BIND_TO_OBJECT=16,
    BINDSTRING_PTR_BIND_CONTEXT=17
};
enum XLAT_SIDE
{
    XLAT_SERVER=1,
    XLAT_CLIENT=2
};
enum _RPC_ASYNC_EVENT
{
    RpcCallComplete=0,
    RpcSendComplete=1,
    RpcReceiveComplete=2
};
enum _ELEMENT_TYPE
{
    AllElements=0,
    ChangerTransport=1,
    ChangerSlot=2,
    ChangerIEPort=3,
    ChangerDrive=4,
    ChangerDoor=5,
    ChangerKeypad=6,
    ChangerMaxElement=7
};
enum _EXCEPTION_DISPOSITION
{
    ExceptionContinueExecution=0,
    ExceptionContinueSearch=1,
    ExceptionNestedException=2,
    ExceptionCollidedUnwind=3
};
enum _SYSTEM_POWER_STATE
{
    PowerSystemUnspecified=0,
    PowerSystemWorking=1,
    PowerSystemSleeping1=2,
    PowerSystemSleeping2=3,
    PowerSystemSleeping3=4,
    PowerSystemHibernate=5,
    PowerSystemShutdown=6,
    PowerSystemMaximum=7
};
enum tagOLEWHICHMK
{
    OLEWHICHMK_CONTAINER=1,
    OLEWHICHMK_OBJREL=2,
    OLEWHICHMK_OBJFULL=3
};
enum _MEDIA_TYPE
{
    Unknown=0,
    F5_1Pt2_512=1,
    F3_1Pt44_512=2,
    F3_2Pt88_512=3,
    F3_20Pt8_512=4,
    F3_720_512=5,
    F5_360_512=6,
    F5_320_512=7,
    F5_320_1024=8,
    F5_180_512=9,
    F5_160_512=10,
    RemovableMedia=11,
    FixedMedia=12,
    F3_120M_512=13,
    F3_640_512=14,
    F5_640_512=15,
    F5_720_512=16,
    F3_1Pt2_512=17,
    F3_1Pt23_1024=18,
    F5_1Pt23_1024=19,
    F3_128Mb_512=20,
    F3_230Mb_512=21,
    F8_256_128=22,
    F3_200Mb_512=23,
    F3_240M_512=24,
    F3_32M_512=25
};
enum tagExtendedErrorParamTypes
{
    eeptAnsiString=1,
    eeptUnicodeString=2,
    eeptLongVal=3,
    eeptShortVal=4,
    eeptPointerVal=5,
    eeptNone=6,
    eeptBinary=7
};
enum PROXY_PHASE
{
    PROXY_CALCSIZE=0,
    PROXY_GETBUFFER=1,
    PROXY_MARSHAL=2,
    PROXY_SENDRECEIVE=3,
    PROXY_UNMARSHAL=4
};
enum _WSACOMPLETIONTYPE
{
    NSP_NOTIFY_IMMEDIATELY=0,
    NSP_NOTIFY_HWND=1,
    NSP_NOTIFY_EVENT=2,
    NSP_NOTIFY_PORT=3,
    NSP_NOTIFY_APC=4
};
enum tagSTDMSHLFLAGS
{
    SMEXF_SERVER=1,
    SMEXF_HANDLER=2
};
enum __MIDL_IInternetSecurityManager_0002
{
    SZM_CREATE=0,
    SZM_DELETE=1
};
enum _WSAESETSERVICEOP
{
    RNRSERVICE_REGISTER=0,
    RNRSERVICE_DEREGISTER=1,
    RNRSERVICE_DELETE=2
};
enum tagOLEVERBATTRIB
{
    OLEVERBATTRIB_NEVERDIRTIES=1,
    OLEVERBATTRIB_ONCONTAINERMENU=2
};
enum PIDMSI_STATUS_VALUE
{
    PIDMSI_STATUS_NORMAL=0,
    PIDMSI_STATUS_NEW=1,
    PIDMSI_STATUS_PRELIM=2,
    PIDMSI_STATUS_DRAFT=3,
    PIDMSI_STATUS_INPROGRESS=4,
    PIDMSI_STATUS_EDIT=5,
    PIDMSI_STATUS_REVIEW=6,
    PIDMSI_STATUS_PROOF=7,
    PIDMSI_STATUS_FINAL=8,
    PIDMSI_STATUS_OTHER=32767
};
enum tagMEMCTX
{
    MEMCTX_TASK=1,
    MEMCTX_SHARED=2,
    MEMCTX_MACSYSTEM=3,
    MEMCTX_UNKNOWN=-1,
    MEMCTX_SAME=-2
};
enum tagLIBFLAGS
{
    LIBFLAG_FRESTRICTED=1,
    LIBFLAG_FCONTROL=2,
    LIBFLAG_FHIDDEN=4,
    LIBFLAG_FHASDISKIMAGE=8
};
enum _DEVICE_POWER_STATE
{
    PowerDeviceUnspecified=0,
    PowerDeviceD0=1,
    PowerDeviceD1=2,
    PowerDeviceD2=3,
    PowerDeviceD3=4,
    PowerDeviceMaximum=5
};
enum tagSTATFLAG
{
    STATFLAG_DEFAULT=0,
    STATFLAG_NONAME=1,
    STATFLAG_NOOPEN=2
};
enum tagINVOKEKIND
{
    INVOKE_FUNC=1,
    INVOKE_PROPERTYGET=2,
    INVOKE_PROPERTYPUT=4,
    INVOKE_PROPERTYPUTREF=8
};
enum _TOKEN_INFORMATION_CLASS
{
    TokenUser=1,
    TokenGroups=2,
    TokenPrivileges=3,
    TokenOwner=4,
    TokenPrimaryGroup=5,
    TokenDefaultDacl=6,
    TokenSource=7,
    TokenType=8,
    TokenImpersonationLevel=9,
    TokenStatistics=10,
    TokenRestrictedSids=11,
    TokenSessionId=12,
    TokenGroupsAndPrivileges=13,
    TokenSessionReference=14,
    TokenSandBoxInert=15,
    TokenAuditPolicy=16,
    MaxTokenInfoClass=17
};
enum _LOGICAL_PROCESSOR_RELATIONSHIP
{
    RelationProcessorCore=0,
    RelationNumaNode=1
};
enum _CHANGER_DEVICE_PROBLEM_TYPE
{
    DeviceProblemNone=0,
    DeviceProblemHardware=1,
    DeviceProblemCHMError=2,
    DeviceProblemDoorOpen=3,
    DeviceProblemCalibrationError=4,
    DeviceProblemTargetFailure=5,
    DeviceProblemCHMMoveError=6,
    DeviceProblemCHMZeroError=7,
    DeviceProblemCartridgeInsertError=8,
    DeviceProblemPositionError=9,
    DeviceProblemSensorError=10,
    DeviceProblemCartridgeEjectError=11,
    DeviceProblemGripperError=12,
    DeviceProblemDriveError=13
};
enum _tagPI_FLAGS
{
    PI_PARSE_URL=1,
    PI_FILTER_MODE=2,
    PI_FORCE_ASYNC=4,
    PI_USE_WORKERTHREAD=8,
    PI_MIMEVERIFICATION=16,
    PI_CLSIDLOOKUP=32,
    PI_DATAPROGRESS=64,
    PI_SYNCHRONOUS=128,
    PI_APARTMENTTHREADED=256,
    PI_CLASSINSTALL=512,
    PI_PASSONBINDCTX=8192,
    PI_NOMIMEHANDLER=32768,
    PI_LOADAPPDIRECT=16384,
    PD_FORCE_SWITCH=65536,
    PI_PREFERDEFAULTHANDLER=131072
};
enum tagCLSCTX
{
    CLSCTX_INPROC_SERVER=1,
    CLSCTX_INPROC_HANDLER=2,
    CLSCTX_LOCAL_SERVER=4,
    CLSCTX_INPROC_SERVER16=8,
    CLSCTX_REMOTE_SERVER=16,
    CLSCTX_INPROC_HANDLER16=32,
    CLSCTX_RESERVED1=64,
    CLSCTX_RESERVED2=128,
    CLSCTX_RESERVED3=256,
    CLSCTX_RESERVED4=512,
    CLSCTX_NO_CODE_DOWNLOAD=1024,
    CLSCTX_RESERVED5=2048,
    CLSCTX_NO_CUSTOM_MARSHAL=4096,
    CLSCTX_ENABLE_CODE_DOWNLOAD=8192,
    CLSCTX_NO_FAILURE_LOG=16384,
    CLSCTX_DISABLE_AAA=32768,
    CLSCTX_ENABLE_AAA=65536,
    CLSCTX_FROM_DEFAULT_CONTEXT=131072
};
enum _STORAGE_BUS_TYPE
{
    BusTypeUnknown=0,
    BusTypeScsi=1,
    BusTypeAtapi=2,
    BusTypeAta=3,
    BusType1394=4,
    BusTypeSsa=5,
    BusTypeFibre=6,
    BusTypeUsb=7,
    BusTypeRAID=8,
    BusTypeMaxReserved=127
};
enum STUB_PHASE
{
    STUB_UNMARSHAL=0,
    STUB_CALL_SERVER=1,
    STUB_MARSHAL=2,
    STUB_CALL_SERVER_NO_HRESULT=3
};
enum _APTTYPE
{
    APTTYPE_CURRENT=-1,
    APTTYPE_STA=0,
    APTTYPE_MTA=1,
    APTTYPE_NA=2,
    APTTYPE_MAINSTA=3
};
enum _THDTYPE
{
    THDTYPE_BLOCKMESSAGES=0,
    THDTYPE_PROCESSMESSAGES=1
};
enum tagDVASPECT
{
    DVASPECT_CONTENT=1,
    DVASPECT_THUMBNAIL=2,
    DVASPECT_ICON=4,
    DVASPECT_DOCPRINT=8
};
enum CDerbyManager::__unnamed
{
    STA=0,
    SPD=1,
    ACC=2,
    END=3,
    COR=4
};
enum _SECURITY_IMPERSONATION_LEVEL
{
    SecurityAnonymous=0,
    SecurityIdentification=1,
    SecurityImpersonation=2,
    SecurityDelegation=3
};
enum tagSERVERCALL
{
    SERVERCALL_ISHANDLED=0,
    SERVERCALL_REJECTED=1,
    SERVERCALL_RETRYLATER=2
};
enum _AUDIT_EVENT_TYPE
{
    AuditEventObjectAccess=0,
    AuditEventDirectoryServiceAccess=1
};
enum __MIDL_IBindStatusCallback_0002
{
    BINDINFOF_URLENCODESTGMEDDATA=1,
    BINDINFOF_URLENCODEDEXTRAINFO=2
};
enum tagTYPEFLAGS
{
    TYPEFLAG_FAPPOBJECT=1,
    TYPEFLAG_FCANCREATE=2,
    TYPEFLAG_FLICENSED=4,
    TYPEFLAG_FPREDECLID=8,
    TYPEFLAG_FHIDDEN=16,
    TYPEFLAG_FCONTROL=32,
    TYPEFLAG_FDUAL=64,
    TYPEFLAG_FNONEXTENSIBLE=128,
    TYPEFLAG_FOLEAUTOMATION=256,
    TYPEFLAG_FRESTRICTED=512,
    TYPEFLAG_FAGGREGATABLE=1024,
    TYPEFLAG_FREPLACEABLE=2048,
    TYPEFLAG_FDISPATCHABLE=4096,
    TYPEFLAG_FREVERSEBIND=8192,
    TYPEFLAG_FPROXY=16384
};
enum tagREGCLS
{
    REGCLS_SINGLEUSE=0,
    REGCLS_MULTIPLEUSE=1,
    REGCLS_MULTI_SEPARATE=2,
    REGCLS_SUSPENDED=4,
    REGCLS_SURROGATE=8
};
enum tagUSERCLASSTYPE
{
    USERCLASSTYPE_FULL=1,
    USERCLASSTYPE_SHORT=2,
    USERCLASSTYPE_APPNAME=3
};
enum __MIDL_IInternetSecurityManager_0001
{
    PUAF_DEFAULT=0,
    PUAF_NOUI=1,
    PUAF_ISFILE=2,
    PUAF_WARN_IF_DENIED=4,
    PUAF_FORCEUI_FOREGROUND=8,
    PUAF_CHECK_TIFS=16,
    PUAF_DONTCHECKBOXINDIALOG=32,
    PUAF_TRUSTED=64,
    PUAF_ACCEPT_WILDCARD_SCHEME=128,
    PUAF_ENFORCERESTRICTED=256
};
enum __MIDL_IInternetZoneManager_0001
{
    MAX_ZONE_PATH=260,
    MAX_ZONE_DESCRIPTION=200
};
enum tagMKREDUCE
{
    MKRREDUCE_ONE=196608,
    MKRREDUCE_TOUSER=131072,
    MKRREDUCE_THROUGHUSER=65536,
    MKRREDUCE_ALL=0
};
enum tagSF_TYPE
{
    SF_ERROR=10,
    SF_I1=16,
    SF_I2=2,
    SF_I4=3,
    SF_I8=20,
    SF_BSTR=8,
    SF_UNKNOWN=13,
    SF_DISPATCH=9,
    SF_VARIANT=12,
    SF_RECORD=36,
    SF_HAVEIID=32781
};
enum tagBINDSPEED
{
    BINDSPEED_INDEFINITE=1,
    BINDSPEED_MODERATE=2,
    BINDSPEED_IMMEDIATE=3
};
enum __MIDL_IBindStatusCallback_0003
{
    BINDF_ASYNCHRONOUS=1,
    BINDF_ASYNCSTORAGE=2,
    BINDF_NOPROGRESSIVERENDERING=4,
    BINDF_OFFLINEOPERATION=8,
    BINDF_GETNEWESTVERSION=16,
    BINDF_NOWRITECACHE=32,
    BINDF_NEEDFILE=64,
    BINDF_PULLDATA=128,
    BINDF_IGNORESECURITYPROBLEM=256,
    BINDF_RESYNCHRONIZE=512,
    BINDF_HYPERLINK=1024,
    BINDF_NO_UI=2048,
    BINDF_SILENTOPERATION=4096,
    BINDF_PRAGMA_NO_CACHE=8192,
    BINDF_GETCLASSOBJECT=16384,
    BINDF_RESERVED_1=32768,
    BINDF_FREE_THREADED=65536,
    BINDF_DIRECT_READ=131072,
    BINDF_FORMS_SUBMIT=262144,
    BINDF_GETFROMCACHE_IF_NET_FAIL=524288,
    BINDF_FROMURLMON=1048576,
    BINDF_FWD_BACK=2097152,
    BINDF_PREFERDEFAULTHANDLER=4194304,
    BINDF_ENFORCERESTRICTED=8388608
};
enum tagDATADIR
{
    DATADIR_GET=1,
    DATADIR_SET=2
};
enum _WSAEcomparator
{
    COMP_EQUAL=0,
    COMP_NOTLESS=1
};
enum _IDL_CS_CONVERT
{
    IDL_CS_NO_CONVERT=0,
    IDL_CS_IN_PLACE_CONVERT=1,
    IDL_CS_NEW_BUFFER_CONVERT=2
};
enum tagSTGMOVE
{
    STGMOVE_MOVE=0,
    STGMOVE_COPY=1,
    STGMOVE_SHALLOWCOPY=2
};
enum tagDISCARDCACHE
{
    DISCARDCACHE_SAVEIFDIRTY=0,
    DISCARDCACHE_NOSAVE=1
};
enum tagVARFLAGS
{
    VARFLAG_FREADONLY=1,
    VARFLAG_FSOURCE=2,
    VARFLAG_FBINDABLE=4,
    VARFLAG_FREQUESTEDIT=8,
    VARFLAG_FDISPLAYBIND=16,
    VARFLAG_FDEFAULTBIND=32,
    VARFLAG_FHIDDEN=64,
    VARFLAG_FRESTRICTED=128,
    VARFLAG_FDEFAULTCOLLELEM=256,
    VARFLAG_FUIDEFAULT=512,
    VARFLAG_FNONBROWSABLE=1024,
    VARFLAG_FREPLACEABLE=2048,
    VARFLAG_FIMMEDIATEBIND=4096
};
enum tagURLTEMPLATE
{
    URLTEMPLATE_CUSTOM=0,
    URLTEMPLATE_PREDEFINED_MIN=65536,
    URLTEMPLATE_LOW=65536,
    URLTEMPLATE_MEDLOW=66816,
    URLTEMPLATE_MEDIUM=69632,
    URLTEMPLATE_HIGH=73728,
    URLTEMPLATE_PREDEFINED_MAX=131072
};
enum tagEXTCONN
{
    EXTCONN_STRONG=1,
    EXTCONN_WEAK=2,
    EXTCONN_CALLABLE=4
};
enum __MIDL_IBindStatusCallback_0004
{
    URL_ENCODING_NONE=0,
    URL_ENCODING_ENABLE_UTF8=268435456,
    URL_ENCODING_DISABLE_UTF8=536870912
};
enum _TAPE_DRIVE_PROBLEM_TYPE
{
    TapeDriveProblemNone=0,
    TapeDriveReadWriteWarning=1,
    TapeDriveReadWriteError=2,
    TapeDriveReadWarning=3,
    TapeDriveWriteWarning=4,
    TapeDriveReadError=5,
    TapeDriveWriteError=6,
    TapeDriveHardwareError=7,
    TapeDriveUnsupportedMedia=8,
    TapeDriveScsiConnectionError=9,
    TapeDriveTimetoClean=10,
    TapeDriveCleanDriveNow=11,
    TapeDriveMediaLifeExpired=12,
    TapeDriveSnappedTape=13
};
enum __MIDL_IBindStatusCallback_0005
{
    BINDINFO_OPTIONS_WININETFLAG=65536,
    BINDINFO_OPTIONS_ENABLE_UTF8=131072,
    BINDINFO_OPTIONS_DISABLE_UTF8=262144,
    BINDINFO_OPTIONS_USE_IE_ENCODING=524288,
    BINDINFO_OPTIONS_BINDTOOBJECT=1048576
};
enum __MIDL_IBindStatusCallback_0006
{
    BSCF_FIRSTDATANOTIFICATION=1,
    BSCF_INTERMEDIATEDATANOTIFICATION=2,
    BSCF_LASTDATANOTIFICATION=4,
    BSCF_DATAFULLYAVAILABLE=8,
    BSCF_AVAILABLEDATASIZEUNKNOWN=16
};
enum tagOLERENDER
{
    OLERENDER_NONE=0,
    OLERENDER_DRAW=1,
    OLERENDER_FORMAT=2,
    OLERENDER_ASIS=3
};
enum tagSTREAM_SEEK
{
    STREAM_SEEK_SET=0,
    STREAM_SEEK_CUR=1,
    STREAM_SEEK_END=2
};
enum _BIN_TYPES
{
    RequestSize=0,
    RequestLocation=1
};
enum SYSNLS_FUNCTION
{
    COMPARE_STRING=1
};
enum tagDCOM_CALL_STATE
{
    DCOM_NONE=0,
    DCOM_CALL_COMPLETE=1,
    DCOM_CALL_CANCELED=2
};
enum _TOKEN_TYPE
{
    TokenPrimary=1,
    TokenImpersonation=2
};
enum _STORAGE_MEDIA_TYPE
{
    DDS_4mm=32,
    MiniQic=33,
    Travan=34,
    QIC=35,
    MP_8mm=36,
    AME_8mm=37,
    AIT1_8mm=38,
    DLT=39,
    NCTP=40,
    IBM_3480=41,
    IBM_3490E=42,
    IBM_Magstar_3590=43,
    IBM_Magstar_MP=44,
    STK_DATA_D3=45,
    SONY_DTF=46,
    DV_6mm=47,
    DMI=48,
    SONY_D2=49,
    CLEANER_CARTRIDGE=50,
    CD_ROM=51,
    CD_R=52,
    CD_RW=53,
    DVD_ROM=54,
    DVD_R=55,
    DVD_RW=56,
    MO_3_RW=57,
    MO_5_WO=58,
    MO_5_RW=59,
    MO_5_LIMDOW=60,
    PC_5_WO=61,
    PC_5_RW=62,
    PD_5_RW=63,
    ABL_5_WO=64,
    PINNACLE_APEX_5_RW=65,
    SONY_12_WO=66,
    PHILIPS_12_WO=67,
    HITACHI_12_WO=68,
    CYGNET_12_WO=69,
    KODAK_14_WO=70,
    MO_NFR_525=71,
    NIKON_12_RW=72,
    IOMEGA_ZIP=73,
    IOMEGA_JAZ=74,
    SYQUEST_EZ135=75,
    SYQUEST_EZFLYER=76,
    SYQUEST_SYJET=77,
    AVATAR_F2=78,
    MP2_8mm=79,
    DST_S=80,
    DST_M=81,
    DST_L=82,
    VXATape_1=83,
    VXATape_2=84,
    STK_9840=85,
    LTO_Ultrium=86,
    LTO_Accelis=87,
    DVD_RAM=88,
    AIT_8mm=89,
    ADR_1=90,
    ADR_2=91,
    STK_9940=92
};
enum __MIDL_IBindStatusCallback_0001
{
    BINDVERB_GET=0,
    BINDVERB_POST=1,
    BINDVERB_PUT=2,
    BINDVERB_CUSTOM=3
};
enum _SC_STATUS_TYPE
{
    SC_STATUS_PROCESS_INFO=0
};
enum _ACTIVATION_CONTEXT_INFO_CLASS
{
    ActivationContextBasicInformation=1,
    ActivationContextDetailedInformation=2,
    AssemblyDetailedInformationInActivationContext=3,
    FileInformationInAssemblyOfAssemblyInActivationContext=4,
    MaxActivationContextInfoClass=5,
    AssemblyDetailedInformationInActivationContxt=3,
    FileInformationInAssemblyOfAssemblyInActivationContxt=4
};
enum tagCOINIT
{
    COINIT_APARTMENTTHREADED=2
};
enum _USER_MARSHAL_CB_TYPE
{
    USER_MARSHAL_CB_BUFFER_SIZE=0,
    USER_MARSHAL_CB_MARSHALL=1,
    USER_MARSHAL_CB_UNMARSHALL=2,
    USER_MARSHAL_CB_FREE=3
};
enum tagMSHLFLAGS
{
    MSHLFLAGS_NORMAL=0,
    MSHLFLAGS_TABLESTRONG=1,
    MSHLFLAGS_TABLEWEAK=2,
    MSHLFLAGS_NOPING=4,
    MSHLFLAGS_RESERVED1=8,
    MSHLFLAGS_RESERVED2=16,
    MSHLFLAGS_RESERVED3=32,
    MSHLFLAGS_RESERVED4=64
};
enum LATENCY_TIME
{
    LT_DONT_CARE=0,
    LT_LOWEST_LATENCY=1
};
enum BIDI_TYPE
{
    BIDI_NULL=0,
    BIDI_INT=1,
    BIDI_FLOAT=2,
    BIDI_BOOL=3,
    BIDI_STRING=4,
    BIDI_TEXT=5,
    BIDI_ENUM=6,
    BIDI_BLOB=7
};
enum tagOLECONTF
{
    OLECONTF_EMBEDDINGS=1,
    OLECONTF_LINKS=2,
    OLECONTF_OTHERS=4,
    OLECONTF_ONLYUSER=8,
    OLECONTF_ONLYIFRUNNING=16
};
enum _RPC_NOTIFICATION_TYPES
{
    RpcNotificationTypeNone=0,
    RpcNotificationTypeEvent=1,
    RpcNotificationTypeApc=2,
    RpcNotificationTypeIoc=3,
    RpcNotificationTypeHwnd=4,
    RpcNotificationTypeCallback=5
};
enum _HEAP_INFORMATION_CLASS
{
    HeapCompatibilityInformation=0
};
enum _CM_SERVICE_LOAD_TYPE
{
    BootLoad=0,
    SystemLoad=1,
    AutoLoad=2,
    DemandLoad=3,
    DisableLoad=4
};
enum tagPENDINGTYPE
{
    PENDINGTYPE_TOPLEVEL=1,
    PENDINGTYPE_NESTED=2
};
enum tagSTGTY
{
    STGTY_STORAGE=1,
    STGTY_STREAM=2,
    STGTY_LOCKBYTES=3,
    STGTY_PROPERTY=4
};
enum POWER_ACTION
{
    PowerActionNone=0,
    PowerActionReserved=1,
    PowerActionSleep=2,
    PowerActionHibernate=3,
    PowerActionShutdown=4,
    PowerActionShutdownReset=5,
    PowerActionShutdownOff=6,
    PowerActionWarmEject=7
};
enum tagOLEMISC
{
    OLEMISC_RECOMPOSEONRESIZE=1,
    OLEMISC_ONLYICONIC=2,
    OLEMISC_INSERTNOTREPLACE=4,
    OLEMISC_STATIC=8,
    OLEMISC_CANTLINKINSIDE=16,
    OLEMISC_CANLINKBYOLE1=32,
    OLEMISC_ISLINKOBJECT=64,
    OLEMISC_INSIDEOUT=128,
    OLEMISC_ACTIVATEWHENVISIBLE=256,
    OLEMISC_RENDERINGISDEVICEINDEPENDENT=512,
    OLEMISC_INVISIBLEATRUNTIME=1024,
    OLEMISC_ALWAYSRUN=2048,
    OLEMISC_ACTSLIKEBUTTON=4096,
    OLEMISC_ACTSLIKELABEL=8192,
    OLEMISC_NOUIACTIVATE=16384,
    OLEMISC_ALIGNABLE=32768,
    OLEMISC_SIMPLEFRAME=65536,
    OLEMISC_SETCLIENTSITEFIRST=131072,
    OLEMISC_IMEMODE=262144,
    OLEMISC_IGNOREACTIVATEWHENVISIBLE=524288,
    OLEMISC_WANTSTOMENUMERGE=1048576,
    OLEMISC_SUPPORTSMULTILEVELUNDO=2097152
};
enum tagOLEGETMONIKER
{
    OLEGETMONIKER_ONLYIFTHERE=1,
    OLEGETMONIKER_FORCEASSIGN=2,
    OLEGETMONIKER_UNASSIGN=3,
    OLEGETMONIKER_TEMPFORUSER=4
};
enum tagOLEUPDATE
{
    OLEUPDATE_ALWAYS=1,
    OLEUPDATE_ONCALL=3
};
enum tagFUNCFLAGS
{
    FUNCFLAG_FRESTRICTED=1,
    FUNCFLAG_FSOURCE=2,
    FUNCFLAG_FBINDABLE=4,
    FUNCFLAG_FREQUESTEDIT=8,
    FUNCFLAG_FDISPLAYBIND=16,
    FUNCFLAG_FDEFAULTBIND=32,
    FUNCFLAG_FHIDDEN=64,
    FUNCFLAG_FUSESGETLASTERROR=128,
    FUNCFLAG_FDEFAULTCOLLELEM=256,
    FUNCFLAG_FUIDEFAULT=512,
    FUNCFLAG_FNONBROWSABLE=1024,
    FUNCFLAG_FREPLACEABLE=2048,
    FUNCFLAG_FIMMEDIATEBIND=4096
};
enum tagOLECLOSE
{
    OLECLOSE_SAVEIFDIRTY=0,
    OLECLOSE_NOSAVE=1,
    OLECLOSE_PROMPTSAVE=2
};
enum __MIDL_IMonikerProp_0001
{
    MIMETYPEPROP=0,
    USE_SRC_URL=1
};
enum tagSTGC
{
    STGC_DEFAULT=0,
    STGC_OVERWRITE=1,
    STGC_ONLYIFCURRENT=2,
    STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE=4,
    STGC_CONSOLIDATE=8
};
enum _CM_SERVICE_NODE_TYPE
{
    DriverType=1,
    FileSystemType=2,
    Win32ServiceOwnProcess=16,
    Win32ServiceShareProcess=32,
    AdapterType=4,
    RecognizerType=8
};
enum _GET_FILEEX_INFO_LEVELS
{
    GetFileExInfoStandard=0,
    GetFileExMaxInfoLevel=1
};
enum _SID_NAME_USE
{
    SidTypeUser=1,
    SidTypeGroup=2,
    SidTypeDomain=3,
    SidTypeAlias=4,
    SidTypeWellKnownGroup=5,
    SidTypeDeletedAccount=6,
    SidTypeInvalid=7,
    SidTypeUnknown=8,
    SidTypeComputer=9
};
enum _SC_ACTION_TYPE
{
    SC_ACTION_NONE=0,
    SC_ACTION_RESTART=1,
    SC_ACTION_REBOOT=2,
    SC_ACTION_RUN_COMMAND=3
};
enum _SC_ENUM_TYPE
{
    SC_ENUM_PROCESS_INFO=0
};
enum tagMKSYS
{
    MKSYS_NONE=0,
    MKSYS_GENERICCOMPOSITE=1,
    MKSYS_FILEMONIKER=2,
    MKSYS_ANTIMONIKER=3,
    MKSYS_ITEMMONIKER=4,
    MKSYS_POINTERMONIKER=5,
    MKSYS_CLASSMONIKER=7,
    MKSYS_OBJREFMONIKER=8,
    MKSYS_SESSIONMONIKER=9
};
enum tagMSHCTX
{
    MSHCTX_LOCAL=0,
    MSHCTX_NOSHAREDMEM=1,
    MSHCTX_DIFFERENTMACHINE=2,
    MSHCTX_INPROC=3,
    MSHCTX_CROSSCTX=4
};
enum POWER_INFORMATION_LEVEL
{
    SystemPowerPolicyAc=0,
    SystemPowerPolicyDc=1,
    VerifySystemPolicyAc=2,
    VerifySystemPolicyDc=3,
    SystemPowerCapabilities=4,
    SystemBatteryState=5,
    SystemPowerStateHandler=6,
    ProcessorStateHandler=7,
    SystemPowerPolicyCurrent=8,
    AdministratorPowerPolicy=9,
    SystemReserveHiberFile=10,
    ProcessorInformation=11,
    SystemPowerInformation=12,
    ProcessorStateHandler2=13,
    LastWakeTime=14,
    LastSleepTime=15,
    SystemExecutionState=16,
    SystemPowerStateNotifyHandler=17,
    ProcessorPowerPolicyAc=18,
    ProcessorPowerPolicyDc=19,
    VerifyProcessorPowerPolicyAc=20,
    VerifyProcessorPowerPolicyDc=21,
    ProcessorPowerPolicyCurrent=22,
    SystemPowerStateLogging=23,
    SystemPowerLoggingEntry=24
};
enum __MIDL_IInternetZoneManager_0002
{
    ZAFLAGS_CUSTOM_EDIT=1,
    ZAFLAGS_ADD_SITES=2,
    ZAFLAGS_REQUIRE_VERIFICATION=4,
    ZAFLAGS_INCLUDE_PROXY_OVERRIDE=8,
    ZAFLAGS_INCLUDE_INTRANET_SITES=16,
    ZAFLAGS_NO_UI=32,
    ZAFLAGS_SUPPORTS_VERIFICATION=64,
    ZAFLAGS_UNC_AS_INTRANET=128
};
enum tagOLELINKBIND
{
    OLELINKBIND_EVENIFCLASSDIFF=1
};
enum _tagOIBDG_FLAGS
{
    OIBDG_APARTMENTTHREADED=256,
    OIBDG_DATAONLY=4096
};
enum SYSGEOCLASS
{
    GEOCLASS_NATION=16,
    GEOCLASS_REGION=14
};
enum RPC_ADDRESS_CHANGE_TYPE
{
    PROTOCOL_NOT_LOADED=1,
    PROTOCOL_LOADED=2,
    PROTOCOL_ADDRESS_CHANGE=3
};
enum _CM_ERROR_CONTROL_TYPE
{
    IgnoreError=0,
    NormalError=1,
    SevereError=2,
    CriticalError=3
};
enum tagLOCKTYPE
{
    LOCK_WRITE=1,
    LOCK_EXCLUSIVE=2,
    LOCK_ONLYONCE=4
};
enum tagADVF
{
    ADVF_NODATA=1,
    ADVF_PRIMEFIRST=2,
    ADVF_ONLYONCE=4,
    ADVF_DATAONSTOP=64,
    ADVFCACHE_NOHANDLER=8,
    ADVFCACHE_FORCEBUILTIN=16,
    ADVFCACHE_ONSAVE=32
};
enum tagTYMED
{
    TYMED_HGLOBAL=1,
    TYMED_FILE=2,
    TYMED_ISTREAM=4,
    TYMED_ISTORAGE=8,
    TYMED_GDI=16,
    TYMED_MFPICT=32,
    TYMED_ENHMF=64,
    TYMED_NULL=0
};
enum WELL_KNOWN_SID_TYPE
{
    WinNullSid=0,
    WinWorldSid=1,
    WinLocalSid=2,
    WinCreatorOwnerSid=3,
    WinCreatorGroupSid=4,
    WinCreatorOwnerServerSid=5,
    WinCreatorGroupServerSid=6,
    WinNtAuthoritySid=7,
    WinDialupSid=8,
    WinNetworkSid=9,
    WinBatchSid=10,
    WinInteractiveSid=11,
    WinServiceSid=12,
    WinAnonymousSid=13,
    WinProxySid=14,
    WinEnterpriseControllersSid=15,
    WinSelfSid=16,
    WinAuthenticatedUserSid=17,
    WinRestrictedCodeSid=18,
    WinTerminalServerSid=19,
    WinRemoteLogonIdSid=20,
    WinLogonIdsSid=21,
    WinLocalSystemSid=22,
    WinLocalServiceSid=23,
    WinNetworkServiceSid=24,
    WinBuiltinDomainSid=25,
    WinBuiltinAdministratorsSid=26,
    WinBuiltinUsersSid=27,
    WinBuiltinGuestsSid=28,
    WinBuiltinPowerUsersSid=29,
    WinBuiltinAccountOperatorsSid=30,
    WinBuiltinSystemOperatorsSid=31,
    WinBuiltinPrintOperatorsSid=32,
    WinBuiltinBackupOperatorsSid=33,
    WinBuiltinReplicatorSid=34,
    WinBuiltinPreWindows2000CompatibleAccessSid=35,
    WinBuiltinRemoteDesktopUsersSid=36,
    WinBuiltinNetworkConfigurationOperatorsSid=37,
    WinAccountAdministratorSid=38,
    WinAccountGuestSid=39,
    WinAccountKrbtgtSid=40,
    WinAccountDomainAdminsSid=41,
    WinAccountDomainUsersSid=42,
    WinAccountDomainGuestsSid=43,
    WinAccountComputersSid=44,
    WinAccountControllersSid=45,
    WinAccountCertAdminsSid=46,
    WinAccountSchemaAdminsSid=47,
    WinAccountEnterpriseAdminsSid=48,
    WinAccountPolicyAdminsSid=49,
    WinAccountRasAndIasServersSid=50,
    WinNTLMAuthenticationSid=51,
    WinDigestAuthenticationSid=52,
    WinSChannelAuthenticationSid=53,
    WinThisOrganizationSid=54,
    WinOtherOrganizationSid=55,
    WinBuiltinIncomingForestTrustBuildersSid=56,
    WinBuiltinPerfMonitoringUsersSid=57,
    WinBuiltinPerfLoggingUsersSid=58
};
enum tagBIND_FLAGS
{
    BIND_MAYBOTHERUSER=1,
    BIND_JUSTTESTEXISTENCE=2
};
enum _ACL_INFORMATION_CLASS
{
    AclRevisionInformation=1,
    AclSizeInformation=2
};
enum tagCALLTYPE
{
    CALLTYPE_TOPLEVEL=1,
    CALLTYPE_NESTED=2,
    CALLTYPE_ASYNC=3,
    CALLTYPE_TOPLEVEL_CALLPENDING=4,
    CALLTYPE_ASYNC_CALLPENDING=5
};
enum _JOBOBJECTINFOCLASS
{
    JobObjectBasicAccountingInformation=1,
    JobObjectBasicLimitInformation=2,
    JobObjectBasicProcessIdList=3,
    JobObjectBasicUIRestrictions=4,
    JobObjectSecurityLimitInformation=5,
    JobObjectEndOfJobTimeInformation=6,
    JobObjectAssociateCompletionPortInformation=7,
    JobObjectBasicAndIoAccountingInformation=8,
    JobObjectExtendedLimitInformation=9,
    JobObjectJobSetInformation=10,
    MaxJobObjectInfoClass=11
};
enum IMAGE_AUX_SYMBOL_TYPE
{
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF=1
};
enum tagPENDINGMSG
{
    PENDINGMSG_CANCELCALL=0,
    PENDINGMSG_WAITNOPROCESS=1,
    PENDINGMSG_WAITDEFPROCESS=2
};
enum tagREGKIND
{
    REGKIND_DEFAULT=0,
    REGKIND_REGISTER=1,
    REGKIND_NONE=2
};
enum SYSGEOTYPE
{
    GEO_NATION=1,
    GEO_LATITUDE=2,
    GEO_LONGITUDE=3,
    GEO_ISO2=4,
    GEO_ISO3=5,
    GEO_RFC1766=6,
    GEO_LCID=7,
    GEO_FRIENDLYNAME=8,
    GEO_OFFICIALNAME=9,
    GEO_TIMEZONES=10,
    GEO_OFFICIALLANGUAGES=11
};
enum IMPORT_OBJECT_TYPE
{
    IMPORT_OBJECT_CODE=0,
    IMPORT_OBJECT_DATA=1,
    IMPORT_OBJECT_CONST=2
};
enum IMPORT_OBJECT_NAME_TYPE
{
    IMPORT_OBJECT_ORDINAL=0,
    IMPORT_OBJECT_NAME=1,
    IMPORT_OBJECT_NAME_NO_PREFIX=2,
    IMPORT_OBJECT_NAME_UNDECORATE=3
};
enum std::_Uninitialized
{
    _Noinit=0
};
enum std::codecvt_base::__unnamed
{
    ok=0,
    partial=1,
    error=2,
    noconv=3
};
enum std::_Iosb<int>::_Dummy_enum
{
    _Dummy_enum_val=1
};
enum std::_Iosb<int>::_Fmtflags
{
    _Fmtmask=65535,
    _Fmtzero=0
};
enum std::_Iosb<int>::_Iostate
{
    _Statmask=23
};
enum std::_Iosb<int>::_Openmode
{
    _Openmask=255
};
enum std::_Iosb<int>::_Seekdir
{
    _Seekmask=3
};
enum std::_Iosb<int>::__unnamed
{
    _Openprot=438
};
enum std::basic_string<char,std::char_traits<char>,std::_DebugHeapAllocator<char> >::__unnamed
{
    _BUF_SIZE=16
};
enum std::basic_string<char,std::char_traits<char>,std::allocator<char> >::__unnamed
{
    _BUF_SIZE=16
};
enum std::ctype_base::__unnamed
{
    alnum=263,
    alpha=259,
    cntrl=32,
    digit=4,
    graph=279,
    lower=2,
    print=471,
    punct=16,
    space=72,
    upper=1,
    xdigit=128
};
enum std::ios_base::event
{
    erase_event=0,
    imbue_event=1,
    copyfmt_event=2
};
enum ADDRESS_MODE
{
    AddrMode1616=0,
    AddrMode1632=1,
    AddrModeReal=2,
    AddrModeFlat=3
};
enum SYM_TYPE
{
    SymNone=0,
    SymCoff=1,
    SymCv=2,
    SymPdb=3,
    SymExport=4,
    SymDeferred=5,
    SymSym=6,
    SymDia=7,
    SymVirtual=8,
    NumSymTypes=9
};
enum _IMAGEHLP_STATUS_REASON
{
    BindOutOfMemory=0,
    BindRvaToVaFailed=1,
    BindNoRoomInImage=2,
    BindImportModuleFailed=3,
    BindImportProcedureFailed=4,
    BindImportModule=5,
    BindImportProcedure=6,
    BindForwarder=7,
    BindForwarderNOT=8,
    BindImageModified=9,
    BindExpandFileHeaders=10,
    BindImageComplete=11,
    BindMismatchedSymbols=12,
    BindSymbolsNotUpdated=13,
    BindImportProcedure32=14,
    BindImportProcedure64=15,
    BindForwarder32=16,
    BindForwarder64=17,
    BindForwarderNOT32=18,
    BindForwarderNOT64=19
};
enum _MODULE_WRITE_FLAGS
{
    ModuleWriteModule=1,
    ModuleWriteDataSeg=2,
    ModuleWriteMiscRecord=4,
    ModuleWriteCvRecord=8,
    ModuleReferencedByMemory=16
};
enum _MINIDUMP_STREAM_TYPE
{
    UnusedStream=0,
    ReservedStream0=1,
    ReservedStream1=2,
    ThreadListStream=3,
    ModuleListStream=4,
    MemoryListStream=5,
    ExceptionStream=6,
    SystemInfoStream=7,
    ThreadExListStream=8,
    Memory64ListStream=9,
    CommentStreamA=10,
    CommentStreamW=11,
    HandleDataStream=12,
    FunctionTableStream=13,
    UnloadedModuleListStream=14,
    MiscInfoStream=15,
    LastReservedStream=65535
};
enum _MINIDUMP_TYPE
{
    MiniDumpNormal=0,
    MiniDumpWithDataSegs=1,
    MiniDumpWithFullMemory=2,
    MiniDumpWithHandleData=4,
    MiniDumpFilterMemory=8,
    MiniDumpScanMemory=16,
    MiniDumpWithUnloadedModules=32,
    MiniDumpWithIndirectlyReferencedMemory=64,
    MiniDumpFilterModulePaths=128,
    MiniDumpWithProcessThreadData=256,
    MiniDumpWithPrivateReadWriteMemory=512
};
enum _THREAD_WRITE_FLAGS
{
    ThreadWriteThread=1,
    ThreadWriteStack=2,
    ThreadWriteContext=4,
    ThreadWriteBackingStore=8,
    ThreadWriteInstructionWindow=16,
    ThreadWriteThreadData=32
};
enum _MINIDUMP_CALLBACK_TYPE
{
    ModuleCallback=0,
    ThreadCallback=1,
    ThreadExCallback=2,
    IncludeThreadCallback=3,
    IncludeModuleCallback=4
};
enum _IMAGEHLP_SYMBOL_TYPE_INFO
{
    TI_GET_SYMTAG=0,
    TI_GET_SYMNAME=1,
    TI_GET_LENGTH=2,
    TI_GET_TYPE=3,
    TI_GET_TYPEID=4,
    TI_GET_BASETYPE=5,
    TI_GET_ARRAYINDEXTYPEID=6,
    TI_FINDCHILDREN=7,
    TI_GET_DATAKIND=8,
    TI_GET_ADDRESSOFFSET=9,
    TI_GET_OFFSET=10,
    TI_GET_VALUE=11,
    TI_GET_COUNT=12,
    TI_GET_CHILDRENCOUNT=13,
    TI_GET_BITPOSITION=14,
    TI_GET_VIRTUALBASECLASS=15,
    TI_GET_VIRTUALTABLESHAPEID=16,
    TI_GET_VIRTUALBASEPOINTEROFFSET=17,
    TI_GET_CLASSPARENTID=18,
    TI_GET_NESTED=19,
    TI_GET_SYMINDEX=20,
    TI_GET_LEXICALPARENT=21,
    TI_GET_ADDRESS=22,
    TI_GET_THISADJUST=23,
    TI_GET_UDTKIND=24,
    TI_IS_EQUIV_TO=25,
    TI_GET_CALLING_CONVENTION=26
};
enum ___unnamed_1162286907
{
    FOURTH=0,
    FIRST=1,
    SECOND=2,
    THIRD=3
};
enum INTRNCVT_STATUS
{
    INTRNCVT_OK=0,
    INTRNCVT_OVERFLOW=1,
    INTRNCVT_UNDERFLOW=2
};
enum state_t
{
    S_INIT=0,
    S_EAT0L=1,
    S_SIGNM=2,
    S_GETL=3,
    S_GETR=4,
    S_POINT=5,
    S_E=6,
    S_SIGNE=7,
    S_EAT0E=8,
    S_GETE=9,
    S_END=10,
    S_E_IMPLICIT=11
};
enum STATE
{
    ST_NORMAL=0,
    ST_PERCENT=1,
    ST_FLAG=2,
    ST_WIDTH=3,
    ST_DOT=4,
    ST_PRECIS=5,
    ST_SIZE=6,
    ST_TYPE=7
};
enum CHARTYPE
{
    CH_OTHER=0,
    CH_PERCENT=1,
    CH_DOT=2,
    CH_STAR=3,
    CH_ZERO=4,
    CH_DIGIT=5,
    CH_FLAG=6,
    CH_SIZE=7,
    CH_TYPE=8
};
enum _RTC_ErrorNumber
{
    _RTC_CHKSTK=0,
    _RTC_CVRT_LOSS_INFO=1,
    _RTC_CORRUPT_STACK=2,
    _RTC_UNINIT_LOCAL_USE=3,
    _RTC_ILLEGAL=4
};
enum EXCEPTION_DEBUGGER_ENUM
{
    EXCEPTION_DEBUGGER_NAME_THREAD=4096,
    EXCEPTION_DEBUGGER_PROBE=4097,
    EXCEPTION_DEBUGGER_RUNTIMECHECK=4098,
    EXCEPTION_DEBUGGER_MAX=4098
};
typedef struct tm // Size=36
{
    int tm_sec; // Size=4 Offset=0
    int tm_min; // Size=4 Offset=4
    int tm_hour; // Size=4 Offset=8
    int tm_mday; // Size=4 Offset=12
    int tm_mon; // Size=4 Offset=16
    int tm_year; // Size=4 Offset=20
    int tm_wday; // Size=4 Offset=24
    int tm_yday; // Size=4 Offset=28
    int tm_isdst; // Size=4 Offset=32
} *Ptm;
typedef struct tagEMR // Size=8
{
    unsigned long iType; // Size=4 Offset=0
    unsigned long nSize; // Size=4 Offset=4
} *PtagEMR;
typedef struct _RECTL // Size=16
{
    long left; // Size=4 Offset=0
    long top; // Size=4 Offset=4
    long right; // Size=4 Offset=8
    long bottom; // Size=4 Offset=12
} RECTL, *PRECTL;
typedef struct tagXFORM // Size=24
{
    float eM11; // Size=4 Offset=0
    float eM12; // Size=4 Offset=4
    float eM21; // Size=4 Offset=8
    float eM22; // Size=4 Offset=12
    float eDx; // Size=4 Offset=16
    float eDy; // Size=4 Offset=20
} *PtagXFORM;
typedef struct _GUID // Size=16
{
    unsigned long Data1; // Size=4 Offset=0
    unsigned short Data2; // Size=2 Offset=4
    unsigned short Data3; // Size=2 Offset=6
    unsigned char Data4[8]; // Size=8 Offset=8
} GUID, *PGUID;
typedef struct _CLASS_MEDIA_CHANGE_CONTEXT // Size=8
{
    unsigned long MediaChangeCount; // Size=4 Offset=0
    unsigned long NewState; // Size=4 Offset=4
} CLASS_MEDIA_CHANGE_CONTEXT, *PCLASS_MEDIA_CHANGE_CONTEXT;
typedef struct tagIDLDESC // Size=8
{
    unsigned long dwReserved; // Size=4 Offset=0
    unsigned short wIDLFlags; // Size=2 Offset=4
} *PtagIDLDESC;
typedef struct _TAPE_SET_DRIVE_PARAMETERS // Size=8
{
    unsigned char ECC; // Size=1 Offset=0
    unsigned char Compression; // Size=1 Offset=1
    unsigned char DataPadding; // Size=1 Offset=2
    unsigned char ReportSetmarks; // Size=1 Offset=3
    unsigned long EOTWarningZoneSize; // Size=4 Offset=4
} TAPE_SET_DRIVE_PARAMETERS, *PTAPE_SET_DRIVE_PARAMETERS;
typedef struct HWND__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHWND__;
typedef struct _NETRESOURCEW // Size=32
{
    unsigned long dwScope; // Size=4 Offset=0
    unsigned long dwType; // Size=4 Offset=4
    unsigned long dwDisplayType; // Size=4 Offset=8
    unsigned long dwUsage; // Size=4 Offset=12
    unsigned short * lpLocalName; // Size=4 Offset=16
    unsigned short * lpRemoteName; // Size=4 Offset=20
    unsigned short * lpComment; // Size=4 Offset=24
    unsigned short * lpProvider; // Size=4 Offset=28
} NETRESOURCEW, *PNETRESOURCEW;
typedef struct midiproptempo_tag // Size=8
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwTempo; // Size=4 Offset=4
} *Pmidiproptempo_tag;
typedef struct tagRemHGLOBAL // Size=12
{
    long fNullHGlobal; // Size=4 Offset=0
    unsigned long cbData; // Size=4 Offset=4
    unsigned char data[1]; // Size=1 Offset=8
} *PtagRemHGLOBAL;
typedef struct _DWORD_BLOB // Size=8
{
    unsigned long clSize; // Size=4 Offset=0
    unsigned long alData[1]; // Size=4 Offset=4
} DWORD_BLOB, *PDWORD_BLOB;
typedef struct _AFPROTOCOLS // Size=8
{
    int iAddressFamily; // Size=4 Offset=0
    int iProtocol; // Size=4 Offset=4
} AFPROTOCOLS, *PAFPROTOCOLS;
typedef struct tagBLOB // Size=8
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned char * pBlobData; // Size=4 Offset=4
} *PtagBLOB;
typedef struct _QUERY_SERVICE_CONFIGA // Size=36
{
    unsigned long dwServiceType; // Size=4 Offset=0
    unsigned long dwStartType; // Size=4 Offset=4
    unsigned long dwErrorControl; // Size=4 Offset=8
    char * lpBinaryPathName; // Size=4 Offset=12
    char * lpLoadOrderGroup; // Size=4 Offset=16
    unsigned long dwTagId; // Size=4 Offset=20
    char * lpDependencies; // Size=4 Offset=24
    char * lpServiceStartName; // Size=4 Offset=28
    char * lpDisplayName; // Size=4 Offset=32
} QUERY_SERVICE_CONFIGA, *PQUERY_SERVICE_CONFIGA;
typedef struct _TOKEN_PRIMARY_GROUP // Size=4
{
    void * PrimaryGroup; // Size=4 Offset=0
} TOKEN_PRIMARY_GROUP, *PTOKEN_PRIMARY_GROUP;
typedef struct _PROCESS_HEAP_ENTRY::__unnamed::__unnamed // Size=16
{
    void * hMem; // Size=4 Offset=0
    unsigned long dwReserved[3]; // Size=12 Offset=4
} PROCESS_HEAP_ENTRY::__unnamed::__unnamed, *PPROCESS_HEAP_ENTRY::__unnamed::__unnamed;
typedef struct _CRYPTOAPI_BLOB // Size=8
{
    unsigned long cbData; // Size=4 Offset=0
    unsigned char * pbData; // Size=4 Offset=4
} CRYPTOAPI_BLOB, *PCRYPTOAPI_BLOB;
typedef struct _FILETIME // Size=8
{
    unsigned long dwLowDateTime; // Size=4 Offset=0
    unsigned long dwHighDateTime; // Size=4 Offset=4
} FILETIME, *PFILETIME;
typedef struct IPropertyBag // Size=4
{
} *PIPropertyBag;
typedef struct tagPARAMDATA // Size=8
{
    unsigned short * szName; // Size=4 Offset=0
    unsigned short vt; // Size=2 Offset=4
} *PtagPARAMDATA;
typedef struct _SID_AND_ATTRIBUTES // Size=8
{
    void * Sid; // Size=4 Offset=0
    unsigned long Attributes; // Size=4 Offset=4
} SID_AND_ATTRIBUTES, *PSID_AND_ATTRIBUTES;
typedef struct _MEMORY_BASIC_INFORMATION64 // Size=48
{
    unsigned __int64 BaseAddress; // Size=8 Offset=0
    unsigned __int64 AllocationBase; // Size=8 Offset=8
    unsigned long AllocationProtect; // Size=4 Offset=16
    unsigned long __alignment1; // Size=4 Offset=20
    unsigned __int64 RegionSize; // Size=8 Offset=24
    unsigned long State; // Size=4 Offset=32
    unsigned long Protect; // Size=4 Offset=36
    unsigned long Type; // Size=4 Offset=40
    unsigned long __alignment2; // Size=4 Offset=44
} MEMORY_BASIC_INFORMATION64, *PMEMORY_BASIC_INFORMATION64;
typedef struct tagMCI_SAVE_PARMSA // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    char * lpfilename; // Size=4 Offset=4
} *PtagMCI_SAVE_PARMSA;
typedef struct tagRemHMETAFILEPICT // Size=20
{
    long mm; // Size=4 Offset=0
    long xExt; // Size=4 Offset=4
    long yExt; // Size=4 Offset=8
    unsigned long cbData; // Size=4 Offset=12
    unsigned char data[1]; // Size=1 Offset=16
} *PtagRemHMETAFILEPICT;
typedef struct _FAT_STATISTICS // Size=36
{
    unsigned long CreateHits; // Size=4 Offset=0
    unsigned long SuccessfulCreates; // Size=4 Offset=4
    unsigned long FailedCreates; // Size=4 Offset=8
    unsigned long NonCachedReads; // Size=4 Offset=12
    unsigned long NonCachedReadBytes; // Size=4 Offset=16
    unsigned long NonCachedWrites; // Size=4 Offset=20
    unsigned long NonCachedWriteBytes; // Size=4 Offset=24
    unsigned long NonCachedDiskReads; // Size=4 Offset=28
    unsigned long NonCachedDiskWrites; // Size=4 Offset=32
} FAT_STATISTICS, *PFAT_STATISTICS;
typedef struct sockaddr // Size=16
{
    unsigned short sa_family; // Size=2 Offset=0
    char sa_data[14]; // Size=14 Offset=2
} *Psockaddr;
typedef struct _PROCESSOR_POWER_POLICY_INFO // Size=20
{
    unsigned long TimeCheck; // Size=4 Offset=0
    unsigned long DemoteLimit; // Size=4 Offset=4
    unsigned long PromoteLimit; // Size=4 Offset=8
    unsigned char DemotePercent; // Size=1 Offset=12
    unsigned char PromotePercent; // Size=1 Offset=13
    unsigned char Spare[2]; // Size=2 Offset=14
    struct
    {
        unsigned long AllowDemotion: 1; // Size=4 Offset=16 BitOffset=0 BitCount=1
        unsigned long AllowPromotion: 1; // Size=4 Offset=16 BitOffset=1 BitCount=1
        unsigned long Reserved: 30; // Size=4 Offset=16 BitOffset=2 BitCount=30
    };
} PROCESSOR_POWER_POLICY_INFO, *PPROCESSOR_POWER_POLICY_INFO;
typedef struct tagTOGGLEKEYS // Size=8
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
} *PtagTOGGLEKEYS;
typedef struct HDRVR__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHDRVR__;
typedef struct tagMCI_SEEK_PARMS // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwTo; // Size=4 Offset=4
} *PtagMCI_SEEK_PARMS;
typedef struct _FULL_PTR_XLAT_TABLES::__unnamed // Size=12
{
    void * * XlatTable; // Size=4 Offset=0
    unsigned char * StateTable; // Size=4 Offset=4
    unsigned long NumberOfEntries; // Size=4 Offset=8
} FULL_PTR_XLAT_TABLES::__unnamed, *PFULL_PTR_XLAT_TABLES::__unnamed;
typedef struct _DOC_INFO_1W // Size=12
{
    unsigned short * pDocName; // Size=4 Offset=0
    unsigned short * pOutputFile; // Size=4 Offset=4
    unsigned short * pDatatype; // Size=4 Offset=8
} DOC_INFO_1W, *PDOC_INFO_1W;
typedef struct _DOC_INFO_2W // Size=20
{
    unsigned short * pDocName; // Size=4 Offset=0
    unsigned short * pOutputFile; // Size=4 Offset=4
    unsigned short * pDatatype; // Size=4 Offset=8
    unsigned long dwMode; // Size=4 Offset=12
    unsigned long JobId; // Size=4 Offset=16
} DOC_INFO_2W, *PDOC_INFO_2W;
typedef struct HDC__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHDC__;
typedef struct tagPRINTPAGERANGE // Size=8
{
    unsigned long nFromPage; // Size=4 Offset=0
    unsigned long nToPage; // Size=4 Offset=4
} *PtagPRINTPAGERANGE;
typedef struct HINSTANCE__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHINSTANCE__;
typedef struct IUnknown // Size=4
{
} *PIUnknown;
typedef struct _PSP // Size=0
{
} PSP, *PPSP;
typedef struct tagBITMAPFILEHEADER // Size=14
{
    unsigned short bfType; // Size=2 Offset=0
    unsigned long bfSize; // Size=4 Offset=2
    unsigned short bfReserved1; // Size=2 Offset=6
    unsigned short bfReserved2; // Size=2 Offset=8
    unsigned long bfOffBits; // Size=4 Offset=10
} *PtagBITMAPFILEHEADER;
typedef struct DLGTEMPLATE // Size=18
{
    unsigned long style; // Size=4 Offset=0
    unsigned long dwExtendedStyle; // Size=4 Offset=4
    unsigned short cdit; // Size=2 Offset=8
    short x; // Size=2 Offset=10
    short y; // Size=2 Offset=12
    short cx; // Size=2 Offset=14
    short cy; // Size=2 Offset=16
} *PDLGTEMPLATE;
typedef struct HICON__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHICON__;
typedef struct _PRINTER_INFO_5A // Size=20
{
    char * pPrinterName; // Size=4 Offset=0
    char * pPortName; // Size=4 Offset=4
    unsigned long Attributes; // Size=4 Offset=8
    unsigned long DeviceNotSelectedTimeout; // Size=4 Offset=12
    unsigned long TransmissionRetryTimeout; // Size=4 Offset=16
} PRINTER_INFO_5A, *PPRINTER_INFO_5A;
typedef struct _currencyfmtA // Size=32
{
    unsigned int NumDigits; // Size=4 Offset=0
    unsigned int LeadingZero; // Size=4 Offset=4
    unsigned int Grouping; // Size=4 Offset=8
    char * lpDecimalSep; // Size=4 Offset=12
    char * lpThousandSep; // Size=4 Offset=16
    unsigned int NegativeOrder; // Size=4 Offset=20
    unsigned int PositiveOrder; // Size=4 Offset=24
    char * lpCurrencySymbol; // Size=4 Offset=28
} currencyfmtA, *PcurrencyfmtA;
typedef struct val_context // Size=12
{
    int valuelen; // Size=4 Offset=0
    void * value_context; // Size=4 Offset=4
    void * val_buff_ptr; // Size=4 Offset=8
} *Pval_context;
typedef struct _CERT_TRUST_STATUS // Size=8
{
    unsigned long dwErrorStatus; // Size=4 Offset=0
    unsigned long dwInfoStatus; // Size=4 Offset=4
} CERT_TRUST_STATUS, *PCERT_TRUST_STATUS;
typedef struct _CTL_USAGE // Size=8
{
    unsigned long cUsageIdentifier; // Size=4 Offset=0
    char * * rgpszUsageIdentifier; // Size=4 Offset=4
} CTL_USAGE, *PCTL_USAGE;
typedef struct _PRINTER_NOTIFY_INFO_DATA::__unnamed::__unnamed // Size=8
{
    unsigned long cbBuf; // Size=4 Offset=0
    void * pBuf; // Size=4 Offset=4
} PRINTER_NOTIFY_INFO_DATA::__unnamed::__unnamed, *PPRINTER_NOTIFY_INFO_DATA::__unnamed::__unnamed;
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX // Size=8
{
    unsigned long ulAssemblyIndex; // Size=4 Offset=0
    unsigned long ulFileIndexInAssembly; // Size=4 Offset=4
} ACTIVATION_CONTEXT_QUERY_INDEX, *PACTIVATION_CONTEXT_QUERY_INDEX;
typedef struct tagJOYCAPSA // Size=404
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    char szPname[32]; // Size=32 Offset=4
    unsigned int wXmin; // Size=4 Offset=36
    unsigned int wXmax; // Size=4 Offset=40
    unsigned int wYmin; // Size=4 Offset=44
    unsigned int wYmax; // Size=4 Offset=48
    unsigned int wZmin; // Size=4 Offset=52
    unsigned int wZmax; // Size=4 Offset=56
    unsigned int wNumButtons; // Size=4 Offset=60
    unsigned int wPeriodMin; // Size=4 Offset=64
    unsigned int wPeriodMax; // Size=4 Offset=68
    unsigned int wRmin; // Size=4 Offset=72
    unsigned int wRmax; // Size=4 Offset=76
    unsigned int wUmin; // Size=4 Offset=80
    unsigned int wUmax; // Size=4 Offset=84
    unsigned int wVmin; // Size=4 Offset=88
    unsigned int wVmax; // Size=4 Offset=92
    unsigned int wCaps; // Size=4 Offset=96
    unsigned int wMaxAxes; // Size=4 Offset=100
    unsigned int wNumAxes; // Size=4 Offset=104
    unsigned int wMaxButtons; // Size=4 Offset=108
    char szRegKey[32]; // Size=32 Offset=112
    char szOEMVxD[260]; // Size=260 Offset=144
} *PtagJOYCAPSA;
typedef struct IInternetProtocolSinkStackable // Size=4
{
} *PIInternetProtocolSinkStackable;
typedef struct tagMIDIOUTCAPSA // Size=52
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned short wTechnology; // Size=2 Offset=40
    unsigned short wVoices; // Size=2 Offset=42
    unsigned short wNotes; // Size=2 Offset=44
    unsigned short wChannelMask; // Size=2 Offset=46
    unsigned long dwSupport; // Size=4 Offset=48
} *PtagMIDIOUTCAPSA;
typedef struct _CRYPT_URL_ARRAY // Size=8
{
    unsigned long cUrl; // Size=4 Offset=0
    unsigned short * * rgwszUrl; // Size=4 Offset=4
} CRYPT_URL_ARRAY, *PCRYPT_URL_ARRAY;
typedef struct IOleCacheControl // Size=4
{
} *PIOleCacheControl;
typedef struct _OSVERSIONINFOEXW // Size=284
{
    unsigned long dwOSVersionInfoSize; // Size=4 Offset=0
    unsigned long dwMajorVersion; // Size=4 Offset=4
    unsigned long dwMinorVersion; // Size=4 Offset=8
    unsigned long dwBuildNumber; // Size=4 Offset=12
    unsigned long dwPlatformId; // Size=4 Offset=16
    unsigned short szCSDVersion[128]; // Size=256 Offset=20
    unsigned short wServicePackMajor; // Size=2 Offset=276
    unsigned short wServicePackMinor; // Size=2 Offset=278
    unsigned short wSuiteMask; // Size=2 Offset=280
    unsigned char wProductType; // Size=1 Offset=282
    unsigned char wReserved; // Size=1 Offset=283
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW;
typedef struct _DCB // Size=28
{
    unsigned long DCBlength; // Size=4 Offset=0
    unsigned long BaudRate; // Size=4 Offset=4
    struct
    {
        unsigned long fBinary: 1; // Size=4 Offset=8 BitOffset=0 BitCount=1
        unsigned long fParity: 1; // Size=4 Offset=8 BitOffset=1 BitCount=1
        unsigned long fOutxCtsFlow: 1; // Size=4 Offset=8 BitOffset=2 BitCount=1
        unsigned long fOutxDsrFlow: 1; // Size=4 Offset=8 BitOffset=3 BitCount=1
        unsigned long fDtrControl: 2; // Size=4 Offset=8 BitOffset=4 BitCount=2
        unsigned long fDsrSensitivity: 1; // Size=4 Offset=8 BitOffset=6 BitCount=1
        unsigned long fTXContinueOnXoff: 1; // Size=4 Offset=8 BitOffset=7 BitCount=1
        unsigned long fOutX: 1; // Size=4 Offset=8 BitOffset=8 BitCount=1
        unsigned long fInX: 1; // Size=4 Offset=8 BitOffset=9 BitCount=1
        unsigned long fErrorChar: 1; // Size=4 Offset=8 BitOffset=10 BitCount=1
        unsigned long fNull: 1; // Size=4 Offset=8 BitOffset=11 BitCount=1
        unsigned long fRtsControl: 2; // Size=4 Offset=8 BitOffset=12 BitCount=2
        unsigned long fAbortOnError: 1; // Size=4 Offset=8 BitOffset=14 BitCount=1
        unsigned long fDummy2: 17; // Size=4 Offset=8 BitOffset=15 BitCount=17
    };
    unsigned short wReserved; // Size=2 Offset=12
    unsigned short XonLim; // Size=2 Offset=14
    unsigned short XoffLim; // Size=2 Offset=16
    unsigned char ByteSize; // Size=1 Offset=18
    unsigned char Parity; // Size=1 Offset=19
    unsigned char StopBits; // Size=1 Offset=20
    char XonChar; // Size=1 Offset=21
    char XoffChar; // Size=1 Offset=22
    char ErrorChar; // Size=1 Offset=23
    char EofChar; // Size=1 Offset=24
    char EvtChar; // Size=1 Offset=25
    unsigned short wReserved1; // Size=2 Offset=26
} DCB, *PDCB;
typedef struct tagPALETTEENTRY // Size=4
{
    unsigned char peRed; // Size=1 Offset=0
    unsigned char peGreen; // Size=1 Offset=1
    unsigned char peBlue; // Size=1 Offset=2
    unsigned char peFlags; // Size=1 Offset=3
} *PtagPALETTEENTRY;
typedef struct tagRPC_CALL_ATTRIBUTES_V1_A // Size=36
{
    unsigned int Version; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long ServerPrincipalNameBufferLength; // Size=4 Offset=8
    unsigned char * ServerPrincipalName; // Size=4 Offset=12
    unsigned long ClientPrincipalNameBufferLength; // Size=4 Offset=16
    unsigned char * ClientPrincipalName; // Size=4 Offset=20
    unsigned long AuthenticationLevel; // Size=4 Offset=24
    unsigned long AuthenticationService; // Size=4 Offset=28
    int NullSession; // Size=4 Offset=32
} *PtagRPC_CALL_ATTRIBUTES_V1_A;
typedef struct _CRYPT_KEY_PROV_PARAM // Size=16
{
    unsigned long dwParam; // Size=4 Offset=0
    unsigned char * pbData; // Size=4 Offset=4
    unsigned long cbData; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
} CRYPT_KEY_PROV_PARAM, *PCRYPT_KEY_PROV_PARAM;
typedef struct _SID_IDENTIFIER_AUTHORITY // Size=6
{
    unsigned char Value[6]; // Size=6 Offset=0
} SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR // Size=8
{
    unsigned long TimeDateStamp; // Size=4 Offset=0
    unsigned short OffsetModuleName; // Size=2 Offset=4
    unsigned short NumberOfModuleForwarderRefs; // Size=2 Offset=6
} IMAGE_BOUND_IMPORT_DESCRIPTOR, *PIMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _POINTL // Size=8
{
    long x; // Size=4 Offset=0
    long y; // Size=4 Offset=4
} POINTL, *PPOINTL;
typedef struct tagSCROLLINFO // Size=28
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned int fMask; // Size=4 Offset=4
    int nMin; // Size=4 Offset=8
    int nMax; // Size=4 Offset=12
    unsigned int nPage; // Size=4 Offset=16
    int nPos; // Size=4 Offset=20
    int nTrackPos; // Size=4 Offset=24
} *PtagSCROLLINFO;
typedef struct _PORT_INFO_1A // Size=4
{
    char * pName; // Size=4 Offset=0
} PORT_INFO_1A, *PPORT_INFO_1A;
typedef struct _MONITOR_INFO_2A // Size=12
{
    char * pName; // Size=4 Offset=0
    char * pEnvironment; // Size=4 Offset=4
    char * pDLLName; // Size=4 Offset=8
} MONITOR_INFO_2A, *PMONITOR_INFO_2A;
typedef struct ISynchronize // Size=4
{
} *PISynchronize;
typedef struct tagREGISTERWORDW // Size=8
{
    unsigned short * lpReading; // Size=4 Offset=0
    unsigned short * lpWord; // Size=4 Offset=4
} *PtagREGISTERWORDW;
typedef struct tagRECT // Size=16
{
    long left; // Size=4 Offset=0
    long top; // Size=4 Offset=4
    long right; // Size=4 Offset=8
    long bottom; // Size=4 Offset=12
} *PtagRECT;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA // Size=72
{
    unsigned long dwParam1; // Size=4 Offset=0
    unsigned long dwParam2; // Size=4 Offset=4
    char szName[64]; // Size=64 Offset=8
} *PtagMIXERCONTROLDETAILS_LISTTEXTA;
typedef struct tagCOPYDATASTRUCT // Size=12
{
    unsigned long dwData; // Size=4 Offset=0
    unsigned long cbData; // Size=4 Offset=4
    void * lpData; // Size=4 Offset=8
} *PtagCOPYDATASTRUCT;
typedef struct tagREGISTERWORDA // Size=8
{
    char * lpReading; // Size=4 Offset=0
    char * lpWord; // Size=4 Offset=4
} *PtagREGISTERWORDA;
typedef struct _IMAGE_BOUND_FORWARDER_REF // Size=8
{
    unsigned long TimeDateStamp; // Size=4 Offset=0
    unsigned short OffsetModuleName; // Size=2 Offset=4
    unsigned short Reserved; // Size=2 Offset=6
} IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF;
typedef struct tagPOINT // Size=8
{
    long x; // Size=4 Offset=0
    long y; // Size=4 Offset=4
} *PtagPOINT;
typedef struct _PORT_INFO_2A // Size=20
{
    char * pPortName; // Size=4 Offset=0
    char * pMonitorName; // Size=4 Offset=4
    char * pDescription; // Size=4 Offset=8
    unsigned long fPortType; // Size=4 Offset=12
    unsigned long Reserved; // Size=4 Offset=16
} PORT_INFO_2A, *PPORT_INFO_2A;
typedef struct _SERVICE_TABLE_ENTRYW // Size=8
{
    unsigned short * lpServiceName; // Size=4 Offset=0
    void ( * lpServiceProc)(unsigned long,unsigned short * *); // Size=4 Offset=4
} SERVICE_TABLE_ENTRYW, *PSERVICE_TABLE_ENTRYW;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION // Size=4
{
    unsigned long EndOfJobTimeAction; // Size=4 Offset=0
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct tagDEBUGHOOKINFO // Size=20
{
    unsigned long idThread; // Size=4 Offset=0
    unsigned long idThreadInstaller; // Size=4 Offset=4
    long lParam; // Size=4 Offset=8
    unsigned int wParam; // Size=4 Offset=12
    int code; // Size=4 Offset=16
} *PtagDEBUGHOOKINFO;
typedef struct _DRIVER_INFO_5A // Size=36
{
    unsigned long cVersion; // Size=4 Offset=0
    char * pName; // Size=4 Offset=4
    char * pEnvironment; // Size=4 Offset=8
    char * pDriverPath; // Size=4 Offset=12
    char * pDataFile; // Size=4 Offset=16
    char * pConfigFile; // Size=4 Offset=20
    unsigned long dwDriverAttributes; // Size=4 Offset=24
    unsigned long dwConfigVersion; // Size=4 Offset=28
    unsigned long dwDriverVersion; // Size=4 Offset=32
} DRIVER_INFO_5A, *PDRIVER_INFO_5A;
typedef struct IDropTarget // Size=4
{
} *PIDropTarget;
typedef struct IDataObject // Size=4
{
} *PIDataObject;
typedef struct IWinInetHttpInfo // Size=4
{
} *PIWinInetHttpInfo;
typedef struct tagRGBTRIPLE // Size=3
{
    unsigned char rgbtBlue; // Size=1 Offset=0
    unsigned char rgbtGreen; // Size=1 Offset=1
    unsigned char rgbtRed; // Size=1 Offset=2
} *PtagRGBTRIPLE;
typedef struct _MONITOR_INFO_1W // Size=4
{
    unsigned short * pName; // Size=4 Offset=0
} MONITOR_INFO_1W, *PMONITOR_INFO_1W;
typedef struct _COMSTAT // Size=12
{
    struct
    {
        unsigned long fCtsHold: 1; // Size=4 Offset=0 BitOffset=0 BitCount=1
        unsigned long fDsrHold: 1; // Size=4 Offset=0 BitOffset=1 BitCount=1
        unsigned long fRlsdHold: 1; // Size=4 Offset=0 BitOffset=2 BitCount=1
        unsigned long fXoffHold: 1; // Size=4 Offset=0 BitOffset=3 BitCount=1
        unsigned long fXoffSent: 1; // Size=4 Offset=0 BitOffset=4 BitCount=1
        unsigned long fEof: 1; // Size=4 Offset=0 BitOffset=5 BitCount=1
        unsigned long fTxim: 1; // Size=4 Offset=0 BitOffset=6 BitCount=1
        unsigned long fReserved: 25; // Size=4 Offset=0 BitOffset=7 BitCount=25
    };
    unsigned long cbInQue; // Size=4 Offset=4
    unsigned long cbOutQue; // Size=4 Offset=8
} COMSTAT, *PCOMSTAT;
typedef struct DLGITEMTEMPLATE // Size=18
{
    unsigned long style; // Size=4 Offset=0
    unsigned long dwExtendedStyle; // Size=4 Offset=4
    short x; // Size=2 Offset=8
    short y; // Size=2 Offset=10
    short cx; // Size=2 Offset=12
    short cy; // Size=2 Offset=14
    unsigned short id; // Size=2 Offset=16
} *PDLGITEMTEMPLATE;
typedef struct _HMAC_Info // Size=20
{
    unsigned int HashAlgid; // Size=4 Offset=0
    unsigned char * pbInnerString; // Size=4 Offset=4
    unsigned long cbInnerString; // Size=4 Offset=8
    unsigned char * pbOuterString; // Size=4 Offset=12
    unsigned long cbOuterString; // Size=4 Offset=16
} HMAC_Info, *PHMAC_Info;
typedef struct _LUID // Size=8
{
    unsigned long LowPart; // Size=4 Offset=0
    long HighPart; // Size=4 Offset=4
} LUID, *PLUID;
typedef struct _DISPLAY_DEVICEW // Size=840
{
    unsigned long cb; // Size=4 Offset=0
    unsigned short DeviceName[32]; // Size=64 Offset=4
    unsigned short DeviceString[128]; // Size=256 Offset=68
    unsigned long StateFlags; // Size=4 Offset=324
    unsigned short DeviceID[128]; // Size=256 Offset=328
    unsigned short DeviceKey[128]; // Size=256 Offset=584
} DISPLAY_DEVICEW, *PDISPLAY_DEVICEW;
typedef struct _DOC_INFO_3A // Size=16
{
    char * pDocName; // Size=4 Offset=0
    char * pOutputFile; // Size=4 Offset=4
    char * pDatatype; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
} DOC_INFO_3A, *PDOC_INFO_3A;
typedef struct _CRYPT_OID_FUNC_ENTRY // Size=8
{
    char * pszOID; // Size=4 Offset=0
    void * pvFuncAddr; // Size=4 Offset=4
} CRYPT_OID_FUNC_ENTRY, *PCRYPT_OID_FUNC_ENTRY;
typedef struct HMENU__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMENU__;
typedef struct tagMINIMIZEDMETRICS // Size=20
{
    unsigned int cbSize; // Size=4 Offset=0
    int iWidth; // Size=4 Offset=4
    int iHorzGap; // Size=4 Offset=8
    int iVertGap; // Size=4 Offset=12
    int iArrange; // Size=4 Offset=16
} *PtagMINIMIZEDMETRICS;
typedef struct HMIDIIN__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMIDIIN__;
typedef struct _CRYPT_DECRYPT_MESSAGE_PARA // Size=16
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwMsgAndCertEncodingType; // Size=4 Offset=4
    unsigned long cCertStore; // Size=4 Offset=8
    void * * rghCertStore; // Size=4 Offset=12
} CRYPT_DECRYPT_MESSAGE_PARA, *PCRYPT_DECRYPT_MESSAGE_PARA;
typedef struct _NDR_CORRELATION_INFO // Size=0
{
} NDR_CORRELATION_INFO, *PNDR_CORRELATION_INFO;
typedef struct tagJOYCAPSW // Size=728
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned short szPname[32]; // Size=64 Offset=4
    unsigned int wXmin; // Size=4 Offset=68
    unsigned int wXmax; // Size=4 Offset=72
    unsigned int wYmin; // Size=4 Offset=76
    unsigned int wYmax; // Size=4 Offset=80
    unsigned int wZmin; // Size=4 Offset=84
    unsigned int wZmax; // Size=4 Offset=88
    unsigned int wNumButtons; // Size=4 Offset=92
    unsigned int wPeriodMin; // Size=4 Offset=96
    unsigned int wPeriodMax; // Size=4 Offset=100
    unsigned int wRmin; // Size=4 Offset=104
    unsigned int wRmax; // Size=4 Offset=108
    unsigned int wUmin; // Size=4 Offset=112
    unsigned int wUmax; // Size=4 Offset=116
    unsigned int wVmin; // Size=4 Offset=120
    unsigned int wVmax; // Size=4 Offset=124
    unsigned int wCaps; // Size=4 Offset=128
    unsigned int wMaxAxes; // Size=4 Offset=132
    unsigned int wNumAxes; // Size=4 Offset=136
    unsigned int wMaxButtons; // Size=4 Offset=140
    unsigned short szRegKey[32]; // Size=64 Offset=144
    unsigned short szOEMVxD[260]; // Size=520 Offset=208
} *PtagJOYCAPSW;
typedef struct tagMCI_SYSINFO_PARMSA // Size=20
{
    unsigned long dwCallback; // Size=4 Offset=0
    char * lpstrReturn; // Size=4 Offset=4
    unsigned long dwRetSize; // Size=4 Offset=8
    unsigned long dwNumber; // Size=4 Offset=12
    unsigned int wDeviceType; // Size=4 Offset=16
} *PtagMCI_SYSINFO_PARMSA;
typedef struct _PRINTPROCESSOR_INFO_1A // Size=4
{
    char * pName; // Size=4 Offset=0
} PRINTPROCESSOR_INFO_1A, *PPRINTPROCESSOR_INFO_1A;
typedef struct IInternetThreadSwitch // Size=4
{
} *PIInternetThreadSwitch;
typedef struct tagCABSTR // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    unsigned short * * pElems; // Size=4 Offset=4
} *PtagCABSTR;
typedef struct tagMULTIKEYHELPW // Size=8
{
    unsigned long mkSize; // Size=4 Offset=0
    unsigned short mkKeylist; // Size=2 Offset=4
    unsigned short szKeyphrase[1]; // Size=2 Offset=6
} *PtagMULTIKEYHELPW;
typedef struct tagHELPWININFOA // Size=28
{
    int wStructSize; // Size=4 Offset=0
    int x; // Size=4 Offset=4
    int y; // Size=4 Offset=8
    int dx; // Size=4 Offset=12
    int dy; // Size=4 Offset=16
    int wMax; // Size=4 Offset=20
    char rgchMember[2]; // Size=2 Offset=24
} *PtagHELPWININFOA;
typedef struct tagRemHENHMETAFILE // Size=8
{
    unsigned long cbData; // Size=4 Offset=0
    unsigned char data[1]; // Size=1 Offset=4
} *PtagRemHENHMETAFILE;
typedef struct tagSIZE // Size=8
{
    long cx; // Size=4 Offset=0
    long cy; // Size=4 Offset=4
} *PtagSIZE;
typedef struct tagMEASUREITEMSTRUCT // Size=24
{
    unsigned int CtlType; // Size=4 Offset=0
    unsigned int CtlID; // Size=4 Offset=4
    unsigned int itemID; // Size=4 Offset=8
    unsigned int itemWidth; // Size=4 Offset=12
    unsigned int itemHeight; // Size=4 Offset=16
    unsigned long itemData; // Size=4 Offset=20
} *PtagMEASUREITEMSTRUCT;
typedef struct DRVCONFIGINFOEX // Size=16
{
    unsigned long dwDCISize; // Size=4 Offset=0
    unsigned short * lpszDCISectionName; // Size=4 Offset=4
    unsigned short * lpszDCIAliasName; // Size=4 Offset=8
    unsigned long dnDevNode; // Size=4 Offset=12
} *PDRVCONFIGINFOEX;
typedef struct _CERT_LDAP_STORE_OPENED_PARA // Size=8
{
    void * pvLdapSessionHandle; // Size=4 Offset=0
    unsigned short * pwszLdapUrl; // Size=4 Offset=4
} CERT_LDAP_STORE_OPENED_PARA, *PCERT_LDAP_STORE_OPENED_PARA;
typedef struct _PRINTER_INFO_1A // Size=16
{
    unsigned long Flags; // Size=4 Offset=0
    char * pDescription; // Size=4 Offset=4
    char * pName; // Size=4 Offset=8
    char * pComment; // Size=4 Offset=12
} PRINTER_INFO_1A, *PPRINTER_INFO_1A;
typedef struct tagOLEVERB // Size=16
{
    long lVerb; // Size=4 Offset=0
    unsigned short * lpszVerbName; // Size=4 Offset=4
    unsigned long fuFlags; // Size=4 Offset=8
    unsigned long grfAttribs; // Size=4 Offset=12
} *PtagOLEVERB;
typedef struct _CREATE_PROCESS_DEBUG_INFO // Size=40
{
    void * hFile; // Size=4 Offset=0
    void * hProcess; // Size=4 Offset=4
    void * hThread; // Size=4 Offset=8
    void * lpBaseOfImage; // Size=4 Offset=12
    unsigned long dwDebugInfoFileOffset; // Size=4 Offset=16
    unsigned long nDebugInfoSize; // Size=4 Offset=20
    void * lpThreadLocalBase; // Size=4 Offset=24
    unsigned long ( * lpStartAddress)(void *); // Size=4 Offset=28
    void * lpImageName; // Size=4 Offset=32
    unsigned short fUnicode; // Size=2 Offset=36
} CREATE_PROCESS_DEBUG_INFO, *PCREATE_PROCESS_DEBUG_INFO;
typedef struct _SMALL_RECT // Size=8
{
    short Left; // Size=2 Offset=0
    short Top; // Size=2 Offset=2
    short Right; // Size=2 Offset=4
    short Bottom; // Size=2 Offset=6
} SMALL_RECT, *PSMALL_RECT;
typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE // Size=12
{
    char * pszOrganization; // Size=4 Offset=0
    unsigned long cNoticeNumbers; // Size=4 Offset=4
    int * rgNoticeNumbers; // Size=4 Offset=8
} CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
typedef struct _ACE_HEADER // Size=4
{
    unsigned char AceType; // Size=1 Offset=0
    unsigned char AceFlags; // Size=1 Offset=1
    unsigned short AceSize; // Size=2 Offset=2
} ACE_HEADER, *PACE_HEADER;
typedef struct HGLRC__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHGLRC__;
typedef struct tagUSEROBJECTFLAGS // Size=12
{
    int fInherit; // Size=4 Offset=0
    int fReserved; // Size=4 Offset=4
    unsigned long dwFlags; // Size=4 Offset=8
} *PtagUSEROBJECTFLAGS;
typedef struct midistrmbuffver_tag // Size=12
{
    unsigned long dwVersion; // Size=4 Offset=0
    unsigned long dwMid; // Size=4 Offset=4
    unsigned long dwOEMVersion; // Size=4 Offset=8
} *Pmidistrmbuffver_tag;
typedef struct fd_set // Size=260
{
    unsigned int fd_count; // Size=4 Offset=0
    unsigned int fd_array[64]; // Size=256 Offset=4
} *Pfd_set;
typedef struct _NON_PAGED_DEBUG_INFO // Size=32
{
    unsigned short Signature; // Size=2 Offset=0
    unsigned short Flags; // Size=2 Offset=2
    unsigned long Size; // Size=4 Offset=4
    unsigned short Machine; // Size=2 Offset=8
    unsigned short Characteristics; // Size=2 Offset=10
    unsigned long TimeDateStamp; // Size=4 Offset=12
    unsigned long CheckSum; // Size=4 Offset=16
    unsigned long SizeOfImage; // Size=4 Offset=20
    unsigned __int64 ImageBase; // Size=8 Offset=24
} NON_PAGED_DEBUG_INFO, *PNON_PAGED_DEBUG_INFO;
typedef struct _CRYPT_CREDENTIALS // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    char * pszCredentialsOid; // Size=4 Offset=4
    void * pvCredentials; // Size=4 Offset=8
} CRYPT_CREDENTIALS, *PCRYPT_CREDENTIALS;
typedef struct IStorage // Size=4
{
} *PIStorage;
typedef struct HRGN__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHRGN__;
typedef struct tMIXERCONTROLDETAILS_UNSIGNED // Size=4
{
    unsigned long dwValue; // Size=4 Offset=0
} *PtMIXERCONTROLDETAILS_UNSIGNED;
typedef struct _BYTE_BLOB // Size=8
{
    unsigned long clSize; // Size=4 Offset=0
    unsigned char abData[1]; // Size=1 Offset=4
} BYTE_BLOB, *PBYTE_BLOB;
typedef struct IXMLDOMNode // Size=4
{
} *PIXMLDOMNode;
typedef struct IXMLDOMDocumentFragment // Size=4
{
} *PIXMLDOMDocumentFragment;
typedef struct _CRYPT_BIT_BLOB // Size=12
{
    unsigned long cbData; // Size=4 Offset=0
    unsigned char * pbData; // Size=4 Offset=4
    unsigned long cUnusedBits; // Size=4 Offset=8
} CRYPT_BIT_BLOB, *PCRYPT_BIT_BLOB;
typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE // Size=16
{
    unsigned long ( * pfnBufferSize)(unsigned long *,unsigned long,void *); // Size=4 Offset=0
    unsigned char * ( * pfnMarshall)(unsigned long *,unsigned char *,void *); // Size=4 Offset=4
    unsigned char * ( * pfnUnmarshall)(unsigned long *,unsigned char *,void *); // Size=4 Offset=8
    void ( * pfnFree)(unsigned long *,void *); // Size=4 Offset=12
} USER_MARSHAL_ROUTINE_QUADRUPLE, *PUSER_MARSHAL_ROUTINE_QUADRUPLE;
typedef struct _JOBOBJECT_JOBSET_INFORMATION // Size=4
{
    unsigned long MemberLevel; // Size=4 Offset=0
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION;
typedef struct tagANIMATIONINFO // Size=8
{
    unsigned int cbSize; // Size=4 Offset=0
    int iMinAnimate; // Size=4 Offset=4
} *PtagANIMATIONINFO;
typedef struct tagWAVEOUTCAPSA // Size=52
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned long dwFormats; // Size=4 Offset=40
    unsigned short wChannels; // Size=2 Offset=44
    unsigned short wReserved1; // Size=2 Offset=46
    unsigned long dwSupport; // Size=4 Offset=48
} *PtagWAVEOUTCAPSA;
typedef struct tagBITMAPCOREHEADER // Size=12
{
    unsigned long bcSize; // Size=4 Offset=0
    unsigned short bcWidth; // Size=2 Offset=4
    unsigned short bcHeight; // Size=2 Offset=6
    unsigned short bcPlanes; // Size=2 Offset=8
    unsigned short bcBitCount; // Size=2 Offset=10
} *PtagBITMAPCOREHEADER;
typedef struct tagPIXELFORMATDESCRIPTOR // Size=40
{
    unsigned short nSize; // Size=2 Offset=0
    unsigned short nVersion; // Size=2 Offset=2
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned char iPixelType; // Size=1 Offset=8
    unsigned char cColorBits; // Size=1 Offset=9
    unsigned char cRedBits; // Size=1 Offset=10
    unsigned char cRedShift; // Size=1 Offset=11
    unsigned char cGreenBits; // Size=1 Offset=12
    unsigned char cGreenShift; // Size=1 Offset=13
    unsigned char cBlueBits; // Size=1 Offset=14
    unsigned char cBlueShift; // Size=1 Offset=15
    unsigned char cAlphaBits; // Size=1 Offset=16
    unsigned char cAlphaShift; // Size=1 Offset=17
    unsigned char cAccumBits; // Size=1 Offset=18
    unsigned char cAccumRedBits; // Size=1 Offset=19
    unsigned char cAccumGreenBits; // Size=1 Offset=20
    unsigned char cAccumBlueBits; // Size=1 Offset=21
    unsigned char cAccumAlphaBits; // Size=1 Offset=22
    unsigned char cDepthBits; // Size=1 Offset=23
    unsigned char cStencilBits; // Size=1 Offset=24
    unsigned char cAuxBuffers; // Size=1 Offset=25
    unsigned char iLayerType; // Size=1 Offset=26
    unsigned char bReserved; // Size=1 Offset=27
    unsigned long dwLayerMask; // Size=4 Offset=28
    unsigned long dwVisibleMask; // Size=4 Offset=32
    unsigned long dwDamageMask; // Size=4 Offset=36
} *PtagPIXELFORMATDESCRIPTOR;
typedef struct _REMSECURITY_ATTRIBUTES // Size=12
{
    unsigned long nLength; // Size=4 Offset=0
    unsigned long lpSecurityDescriptor; // Size=4 Offset=4
    int bInheritHandle; // Size=4 Offset=8
} REMSECURITY_ATTRIBUTES, *PREMSECURITY_ATTRIBUTES;
typedef struct _FLOAT128 // Size=16
{
    __int64 LowPart; // Size=8 Offset=0
    __int64 HighPart; // Size=8 Offset=8
} FLOAT128, *PFLOAT128;
typedef struct _LDT_ENTRY::__unnamed::__unnamed // Size=4
{
    unsigned char BaseMid; // Size=1 Offset=0
    unsigned char Flags1; // Size=1 Offset=1
    unsigned char Flags2; // Size=1 Offset=2
    unsigned char BaseHi; // Size=1 Offset=3
} LDT_ENTRY::__unnamed::__unnamed, *PLDT_ENTRY::__unnamed::__unnamed;
typedef struct tagMETAHEADER // Size=18
{
    unsigned short mtType; // Size=2 Offset=0
    unsigned short mtHeaderSize; // Size=2 Offset=2
    unsigned short mtVersion; // Size=2 Offset=4
    unsigned long mtSize; // Size=4 Offset=6
    unsigned short mtNoObjects; // Size=2 Offset=10
    unsigned long mtMaxRecord; // Size=4 Offset=12
    unsigned short mtNoParameters; // Size=2 Offset=16
} *PtagMETAHEADER;
typedef struct tagLOGFONTW // Size=92
{
    long lfHeight; // Size=4 Offset=0
    long lfWidth; // Size=4 Offset=4
    long lfEscapement; // Size=4 Offset=8
    long lfOrientation; // Size=4 Offset=12
    long lfWeight; // Size=4 Offset=16
    unsigned char lfItalic; // Size=1 Offset=20
    unsigned char lfUnderline; // Size=1 Offset=21
    unsigned char lfStrikeOut; // Size=1 Offset=22
    unsigned char lfCharSet; // Size=1 Offset=23
    unsigned char lfOutPrecision; // Size=1 Offset=24
    unsigned char lfClipPrecision; // Size=1 Offset=25
    unsigned char lfQuality; // Size=1 Offset=26
    unsigned char lfPitchAndFamily; // Size=1 Offset=27
    unsigned short lfFaceName[32]; // Size=64 Offset=28
} *PtagLOGFONTW;
typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwRegPolicySettings; // Size=4 Offset=4
    int fCommercial; // Size=4 Offset=8
} AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
typedef struct SCARD_READERSTATEA // Size=56
{
    char * szReader; // Size=4 Offset=0
    void * pvUserData; // Size=4 Offset=4
    unsigned long dwCurrentState; // Size=4 Offset=8
    unsigned long dwEventState; // Size=4 Offset=12
    unsigned long cbAtr; // Size=4 Offset=16
    unsigned char rgbAtr[36]; // Size=36 Offset=20
} *PSCARD_READERSTATEA;
typedef struct HKL__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHKL__;
typedef struct tagLOGFONTA // Size=60
{
    long lfHeight; // Size=4 Offset=0
    long lfWidth; // Size=4 Offset=4
    long lfEscapement; // Size=4 Offset=8
    long lfOrientation; // Size=4 Offset=12
    long lfWeight; // Size=4 Offset=16
    unsigned char lfItalic; // Size=1 Offset=20
    unsigned char lfUnderline; // Size=1 Offset=21
    unsigned char lfStrikeOut; // Size=1 Offset=22
    unsigned char lfCharSet; // Size=1 Offset=23
    unsigned char lfOutPrecision; // Size=1 Offset=24
    unsigned char lfClipPrecision; // Size=1 Offset=25
    unsigned char lfQuality; // Size=1 Offset=26
    unsigned char lfPitchAndFamily; // Size=1 Offset=27
    char lfFaceName[32]; // Size=32 Offset=28
} *PtagLOGFONTA;
typedef struct HIMCC__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHIMCC__;
typedef struct _MEMORY_BASIC_INFORMATION32 // Size=28
{
    unsigned long BaseAddress; // Size=4 Offset=0
    unsigned long AllocationBase; // Size=4 Offset=4
    unsigned long AllocationProtect; // Size=4 Offset=8
    unsigned long RegionSize; // Size=4 Offset=12
    unsigned long State; // Size=4 Offset=16
    unsigned long Protect; // Size=4 Offset=20
    unsigned long Type; // Size=4 Offset=24
} MEMORY_BASIC_INFORMATION32, *PMEMORY_BASIC_INFORMATION32;
typedef struct tagENHMETARECORD // Size=12
{
    unsigned long iType; // Size=4 Offset=0
    unsigned long nSize; // Size=4 Offset=4
    unsigned long dParm[1]; // Size=4 Offset=8
} *PtagENHMETARECORD;
typedef struct tagTEXTMETRICA // Size=56
{
    long tmHeight; // Size=4 Offset=0
    long tmAscent; // Size=4 Offset=4
    long tmDescent; // Size=4 Offset=8
    long tmInternalLeading; // Size=4 Offset=12
    long tmExternalLeading; // Size=4 Offset=16
    long tmAveCharWidth; // Size=4 Offset=20
    long tmMaxCharWidth; // Size=4 Offset=24
    long tmWeight; // Size=4 Offset=28
    long tmOverhang; // Size=4 Offset=32
    long tmDigitizedAspectX; // Size=4 Offset=36
    long tmDigitizedAspectY; // Size=4 Offset=40
    unsigned char tmFirstChar; // Size=1 Offset=44
    unsigned char tmLastChar; // Size=1 Offset=45
    unsigned char tmDefaultChar; // Size=1 Offset=46
    unsigned char tmBreakChar; // Size=1 Offset=47
    unsigned char tmItalic; // Size=1 Offset=48
    unsigned char tmUnderlined; // Size=1 Offset=49
    unsigned char tmStruckOut; // Size=1 Offset=50
    unsigned char tmPitchAndFamily; // Size=1 Offset=51
    unsigned char tmCharSet; // Size=1 Offset=52
} *PtagTEXTMETRICA;
typedef struct HWINSTA__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHWINSTA__;
typedef struct _OFSTRUCT // Size=136
{
    unsigned char cBytes; // Size=1 Offset=0
    unsigned char fFixedDisk; // Size=1 Offset=1
    unsigned short nErrCode; // Size=2 Offset=2
    unsigned short Reserved1; // Size=2 Offset=4
    unsigned short Reserved2; // Size=2 Offset=6
    char szPathName[128]; // Size=128 Offset=8
} OFSTRUCT, *POFSTRUCT;
typedef struct _FIXED // Size=4
{
    unsigned short fract; // Size=2 Offset=0
    short value; // Size=2 Offset=2
} FIXED, *PFIXED;
typedef struct tagCLIENTCREATESTRUCT // Size=8
{
    void * hWindowMenu; // Size=4 Offset=0
    unsigned int idFirstChild; // Size=4 Offset=4
} *PtagCLIENTCREATESTRUCT;
typedef struct _tagSOFTDISTINFO // Size=52
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned long dwAdState; // Size=4 Offset=8
    unsigned short * szTitle; // Size=4 Offset=12
    unsigned short * szAbstract; // Size=4 Offset=16
    unsigned short * szHREF; // Size=4 Offset=20
    unsigned long dwInstalledVersionMS; // Size=4 Offset=24
    unsigned long dwInstalledVersionLS; // Size=4 Offset=28
    unsigned long dwUpdateVersionMS; // Size=4 Offset=32
    unsigned long dwUpdateVersionLS; // Size=4 Offset=36
    unsigned long dwAdvertisedVersionMS; // Size=4 Offset=40
    unsigned long dwAdvertisedVersionLS; // Size=4 Offset=44
    unsigned long dwReserved; // Size=4 Offset=48
} tagSOFTDISTINFO, *PtagSOFTDISTINFO;
typedef struct _OUTPUT_DEBUG_STRING_INFO // Size=8
{
    char * lpDebugStringData; // Size=4 Offset=0
    unsigned short fUnicode; // Size=2 Offset=4
    unsigned short nDebugStringLength; // Size=2 Offset=6
} OUTPUT_DEBUG_STRING_INFO, *POUTPUT_DEBUG_STRING_INFO;
typedef struct IWaitMultiple // Size=4
{
} *PIWaitMultiple;
typedef struct _UNIVERSAL_NAME_INFOA // Size=4
{
    char * lpUniversalName; // Size=4 Offset=0
} UNIVERSAL_NAME_INFOA, *PUNIVERSAL_NAME_INFOA;
typedef struct tagMCI_STATUS_PARMS // Size=16
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwReturn; // Size=4 Offset=4
    unsigned long dwItem; // Size=4 Offset=8
    unsigned long dwTrack; // Size=4 Offset=12
} *PtagMCI_STATUS_PARMS;
typedef struct _WORD_BLOB // Size=8
{
    unsigned long clSize; // Size=4 Offset=0
    unsigned short asData[1]; // Size=2 Offset=4
} WORD_BLOB, *PWORD_BLOB;
typedef struct _IMAGE_DATA_DIRECTORY // Size=8
{
    unsigned long VirtualAddress; // Size=4 Offset=0
    unsigned long Size; // Size=4 Offset=4
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;
typedef struct _TypeDescriptor // Size=8
{
    void * pVFTable; // Size=4 Offset=0
    void * spare; // Size=4 Offset=4
} TypeDescriptor, *PTypeDescriptor;
typedef struct _IMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed // Size=4
{
    unsigned short Linenumber; // Size=2 Offset=0
    unsigned short Size; // Size=2 Offset=2
} IMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed, *PIMAGE_AUX_SYMBOL::__unnamed::__unnamed::__unnamed;
typedef struct _STARTUPINFOA // Size=68
{
    unsigned long cb; // Size=4 Offset=0
    char * lpReserved; // Size=4 Offset=4
    char * lpDesktop; // Size=4 Offset=8
    char * lpTitle; // Size=4 Offset=12
    unsigned long dwX; // Size=4 Offset=16
    unsigned long dwY; // Size=4 Offset=20
    unsigned long dwXSize; // Size=4 Offset=24
    unsigned long dwYSize; // Size=4 Offset=28
    unsigned long dwXCountChars; // Size=4 Offset=32
    unsigned long dwYCountChars; // Size=4 Offset=36
    unsigned long dwFillAttribute; // Size=4 Offset=40
    unsigned long dwFlags; // Size=4 Offset=44
    unsigned short wShowWindow; // Size=2 Offset=48
    unsigned short cbReserved2; // Size=2 Offset=50
    unsigned char * lpReserved2; // Size=4 Offset=52
    void * hStdInput; // Size=4 Offset=56
    void * hStdOutput; // Size=4 Offset=60
    void * hStdError; // Size=4 Offset=64
} STARTUPINFOA, *PSTARTUPINFOA;
typedef struct _EVENTLOGRECORD // Size=56
{
    unsigned long Length; // Size=4 Offset=0
    unsigned long Reserved; // Size=4 Offset=4
    unsigned long RecordNumber; // Size=4 Offset=8
    unsigned long TimeGenerated; // Size=4 Offset=12
    unsigned long TimeWritten; // Size=4 Offset=16
    unsigned long EventID; // Size=4 Offset=20
    unsigned short EventType; // Size=2 Offset=24
    unsigned short NumStrings; // Size=2 Offset=26
    unsigned short EventCategory; // Size=2 Offset=28
    unsigned short ReservedFlags; // Size=2 Offset=30
    unsigned long ClosingRecordNumber; // Size=4 Offset=32
    unsigned long StringOffset; // Size=4 Offset=36
    unsigned long UserSidLength; // Size=4 Offset=40
    unsigned long UserSidOffset; // Size=4 Offset=44
    unsigned long DataLength; // Size=4 Offset=48
    unsigned long DataOffset; // Size=4 Offset=52
} EVENTLOGRECORD, *PEVENTLOGRECORD;
typedef struct tagSTYLESTRUCT // Size=8
{
    unsigned long styleOld; // Size=4 Offset=0
    unsigned long styleNew; // Size=4 Offset=4
} *PtagSTYLESTRUCT;
typedef struct _cpinfoexA // Size=284
{
    unsigned int MaxCharSize; // Size=4 Offset=0
    unsigned char DefaultChar[2]; // Size=2 Offset=4
    unsigned char LeadByte[12]; // Size=12 Offset=6
    unsigned short UnicodeDefaultChar; // Size=2 Offset=18
    unsigned int CodePage; // Size=4 Offset=20
    char CodePageName[260]; // Size=260 Offset=24
} cpinfoexA, *PcpinfoexA;
typedef struct tagAUXCAPSW // Size=80
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned short wTechnology; // Size=2 Offset=72
    unsigned short wReserved1; // Size=2 Offset=74
    unsigned long dwSupport; // Size=4 Offset=76
} *PtagAUXCAPSW;
typedef struct timecaps_tag // Size=8
{
    unsigned int wPeriodMin; // Size=4 Offset=0
    unsigned int wPeriodMax; // Size=4 Offset=4
} *Ptimecaps_tag;
typedef struct tagCADBL // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    double * pElems; // Size=4 Offset=4
} *PtagCADBL;
typedef struct tagMCI_VD_ESCAPE_PARMSA // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    char * lpstrCommand; // Size=4 Offset=4
} *PtagMCI_VD_ESCAPE_PARMSA;
typedef struct HMONITOR__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMONITOR__;
typedef struct tagPANOSE // Size=10
{
    unsigned char bFamilyType; // Size=1 Offset=0
    unsigned char bSerifStyle; // Size=1 Offset=1
    unsigned char bWeight; // Size=1 Offset=2
    unsigned char bProportion; // Size=1 Offset=3
    unsigned char bContrast; // Size=1 Offset=4
    unsigned char bStrokeVariation; // Size=1 Offset=5
    unsigned char bArmStyle; // Size=1 Offset=6
    unsigned char bLetterform; // Size=1 Offset=7
    unsigned char bMidline; // Size=1 Offset=8
    unsigned char bXHeight; // Size=1 Offset=9
} *PtagPANOSE;
typedef struct _PORT_INFO_3W // Size=12
{
    unsigned long dwStatus; // Size=4 Offset=0
    unsigned short * pszStatus; // Size=4 Offset=4
    unsigned long dwSeverity; // Size=4 Offset=8
} PORT_INFO_3W, *PPORT_INFO_3W;
typedef struct _tagPROTOCOLDATA // Size=16
{
    unsigned long grfFlags; // Size=4 Offset=0
    unsigned long dwState; // Size=4 Offset=4
    void * pData; // Size=4 Offset=8
    unsigned long cbData; // Size=4 Offset=12
} tagPROTOCOLDATA, *PtagPROTOCOLDATA;
typedef struct _COORD // Size=4
{
    short X; // Size=2 Offset=0
    short Y; // Size=2 Offset=2
} COORD, *PCOORD;
typedef struct _STORAGE_DEVICE_NUMBER // Size=12
{
    unsigned long DeviceType; // Size=4 Offset=0
    unsigned long DeviceNumber; // Size=4 Offset=4
    unsigned long PartitionNumber; // Size=4 Offset=8
} STORAGE_DEVICE_NUMBER, *PSTORAGE_DEVICE_NUMBER;
typedef struct _currencyfmtW // Size=32
{
    unsigned int NumDigits; // Size=4 Offset=0
    unsigned int LeadingZero; // Size=4 Offset=4
    unsigned int Grouping; // Size=4 Offset=8
    unsigned short * lpDecimalSep; // Size=4 Offset=12
    unsigned short * lpThousandSep; // Size=4 Offset=16
    unsigned int NegativeOrder; // Size=4 Offset=20
    unsigned int PositiveOrder; // Size=4 Offset=24
    unsigned short * lpCurrencySymbol; // Size=4 Offset=28
} currencyfmtW, *PcurrencyfmtW;
typedef struct tagMCI_OPEN_PARMSW // Size=20
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned int wDeviceID; // Size=4 Offset=4
    unsigned short * lpstrDeviceType; // Size=4 Offset=8
    unsigned short * lpstrElementName; // Size=4 Offset=12
    unsigned short * lpstrAlias; // Size=4 Offset=16
} *PtagMCI_OPEN_PARMSW;
typedef struct _CERT_BASIC_CONSTRAINTS2_INFO // Size=12
{
    int fCA; // Size=4 Offset=0
    int fPathLenConstraint; // Size=4 Offset=4
    unsigned long dwPathLenConstraint; // Size=4 Offset=8
} CERT_BASIC_CONSTRAINTS2_INFO, *PCERT_BASIC_CONSTRAINTS2_INFO;
typedef struct IDataAdviseHolder // Size=4
{
} *PIDataAdviseHolder;
typedef struct IAdviseSink // Size=4
{
} *PIAdviseSink;
typedef struct IEnumSTATDATA // Size=4
{
} *PIEnumSTATDATA;
typedef struct tagBIND_OPTS // Size=16
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long grfFlags; // Size=4 Offset=4
    unsigned long grfMode; // Size=4 Offset=8
    unsigned long dwTickCountDeadline; // Size=4 Offset=12
} *PtagBIND_OPTS;
typedef struct IDispatch // Size=4
{
} *PIDispatch;
typedef struct IXMLDOMNodeList // Size=4
{
} *PIXMLDOMNodeList;
typedef struct IXMLDOMNamedNodeMap // Size=4
{
} *PIXMLDOMNamedNodeMap;
typedef struct IXMLDOMDocument // Size=4
{
} *PIXMLDOMDocument;
typedef struct tagRemBRUSH // Size=8
{
    unsigned long cbData; // Size=4 Offset=0
    unsigned char data[1]; // Size=1 Offset=4
} *PtagRemBRUSH;
typedef struct _SET_PARTITION_INFORMATION // Size=1
{
    unsigned char PartitionType; // Size=1 Offset=0
} SET_PARTITION_INFORMATION, *PSET_PARTITION_INFORMATION;
typedef struct QOS_OBJECT_HDR // Size=8
{
    unsigned long ObjectType; // Size=4 Offset=0
    unsigned long ObjectLength; // Size=4 Offset=4
} *PQOS_OBJECT_HDR;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY // Size=8
{
    union
    {
        struct
        {
            unsigned long NameOffset: 31; // Size=4 Offset=0 BitOffset=0 BitCount=31
            unsigned long NameIsString: 1; // Size=4 Offset=0 BitOffset=31 BitCount=1
        };
        unsigned long Name; // Size=4 Offset=0
        unsigned short Id; // Size=2 Offset=0
    };
    union
    {
        unsigned long OffsetToData; // Size=4 Offset=4
        struct
        {
            unsigned long OffsetToDirectory: 31; // Size=4 Offset=4 BitOffset=0 BitCount=31
            unsigned long DataIsDirectory: 1; // Size=4 Offset=4 BitOffset=31 BitCount=1
        };
    };
} IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _GRADIENT_TRIANGLE // Size=12
{
    unsigned long Vertex1; // Size=4 Offset=0
    unsigned long Vertex2; // Size=4 Offset=4
    unsigned long Vertex3; // Size=4 Offset=8
} GRADIENT_TRIANGLE, *PGRADIENT_TRIANGLE;
typedef struct tagMIXERCAPSW // Size=80
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned long fdwSupport; // Size=4 Offset=72
    unsigned long cDestinations; // Size=4 Offset=76
} *PtagMIXERCAPSW;
typedef struct _IMAGE_FILE_HEADER // Size=20
{
    unsigned short Machine; // Size=2 Offset=0
    unsigned short NumberOfSections; // Size=2 Offset=2
    unsigned long TimeDateStamp; // Size=4 Offset=4
    unsigned long PointerToSymbolTable; // Size=4 Offset=8
    unsigned long NumberOfSymbols; // Size=4 Offset=12
    unsigned short SizeOfOptionalHeader; // Size=2 Offset=16
    unsigned short Characteristics; // Size=2 Offset=18
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;
typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION // Size=20
{
    unsigned long ulFlags; // Size=4 Offset=0
    unsigned long ulFilenameLength; // Size=4 Offset=4
    unsigned long ulPathLength; // Size=4 Offset=8
    unsigned short * lpFileName; // Size=4 Offset=12
    unsigned short * lpFilePath; // Size=4 Offset=16
} ASSEMBLY_FILE_DETAILED_INFORMATION, *PASSEMBLY_FILE_DETAILED_INFORMATION;
typedef struct _UNLOAD_DLL_DEBUG_INFO // Size=4
{
    void * lpBaseOfDll; // Size=4 Offset=0
} UNLOAD_DLL_DEBUG_INFO, *PUNLOAD_DLL_DEBUG_INFO;
typedef struct _REMOTE_NAME_INFOW // Size=12
{
    unsigned short * lpUniversalName; // Size=4 Offset=0
    unsigned short * lpConnectionName; // Size=4 Offset=4
    unsigned short * lpRemainingPath; // Size=4 Offset=8
} REMOTE_NAME_INFOW, *PREMOTE_NAME_INFOW;
typedef struct HBITMAP__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHBITMAP__;
typedef struct HPALETTE__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHPALETTE__;
typedef struct _SEC_WINNT_AUTH_IDENTITY_A // Size=28
{
    unsigned char * User; // Size=4 Offset=0
    unsigned long UserLength; // Size=4 Offset=4
    unsigned char * Domain; // Size=4 Offset=8
    unsigned long DomainLength; // Size=4 Offset=12
    unsigned char * Password; // Size=4 Offset=16
    unsigned long PasswordLength; // Size=4 Offset=20
    unsigned long Flags; // Size=4 Offset=24
} SEC_WINNT_AUTH_IDENTITY_A, *PSEC_WINNT_AUTH_IDENTITY_A;
typedef struct _SYSTEMTIME // Size=16
{
    unsigned short wYear; // Size=2 Offset=0
    unsigned short wMonth; // Size=2 Offset=2
    unsigned short wDayOfWeek; // Size=2 Offset=4
    unsigned short wDay; // Size=2 Offset=6
    unsigned short wHour; // Size=2 Offset=8
    unsigned short wMinute; // Size=2 Offset=10
    unsigned short wSecond; // Size=2 Offset=12
    unsigned short wMilliseconds; // Size=2 Offset=14
} SYSTEMTIME, *PSYSTEMTIME;
typedef struct _JOB_INFO_3 // Size=12
{
    unsigned long JobId; // Size=4 Offset=0
    unsigned long NextJobId; // Size=4 Offset=4
    unsigned long Reserved; // Size=4 Offset=8
} JOB_INFO_3, *PJOB_INFO_3;
typedef struct _ADDJOB_INFO_1W // Size=8
{
    unsigned short * Path; // Size=4 Offset=0
    unsigned long JobId; // Size=4 Offset=4
} ADDJOB_INFO_1W, *PADDJOB_INFO_1W;
typedef struct IContext // Size=4
{
} *PIContext;
typedef struct IObjContext // Size=4
{
} *PIObjContext;
typedef struct _RIP_INFO // Size=8
{
    unsigned long dwError; // Size=4 Offset=0
    unsigned long dwType; // Size=4 Offset=4
} RIP_INFO, *PRIP_INFO;
typedef struct tagLOGBRUSH32 // Size=12
{
    unsigned int lbStyle; // Size=4 Offset=0
    unsigned long lbColor; // Size=4 Offset=4
    unsigned long lbHatch; // Size=4 Offset=8
} *PtagLOGBRUSH32;
typedef struct _SCARD_IO_REQUEST // Size=8
{
    unsigned long dwProtocol; // Size=4 Offset=0
    unsigned long cbPciLength; // Size=4 Offset=4
} SCARD_IO_REQUEST, *PSCARD_IO_REQUEST;
typedef struct tagLOGBRUSH // Size=12
{
    unsigned int lbStyle; // Size=4 Offset=0
    unsigned long lbColor; // Size=4 Offset=4
    unsigned long lbHatch; // Size=4 Offset=8
} *PtagLOGBRUSH;
typedef struct waveformat_tag // Size=14
{
    unsigned short wFormatTag; // Size=2 Offset=0
    unsigned short nChannels; // Size=2 Offset=2
    unsigned long nSamplesPerSec; // Size=4 Offset=4
    unsigned long nAvgBytesPerSec; // Size=4 Offset=8
    unsigned short nBlockAlign; // Size=2 Offset=12
} *Pwaveformat_tag;
typedef struct _PROVIDOR_INFO_1A // Size=12
{
    char * pName; // Size=4 Offset=0
    char * pEnvironment; // Size=4 Offset=4
    char * pDLLName; // Size=4 Offset=8
} PROVIDOR_INFO_1A, *PPROVIDOR_INFO_1A;
typedef struct _PRINTER_INFO_1W // Size=16
{
    unsigned long Flags; // Size=4 Offset=0
    unsigned short * pDescription; // Size=4 Offset=4
    unsigned short * pName; // Size=4 Offset=8
    unsigned short * pComment; // Size=4 Offset=12
} PRINTER_INFO_1W, *PPRINTER_INFO_1W;
typedef struct _ABC // Size=12
{
    int abcA; // Size=4 Offset=0
    unsigned int abcB; // Size=4 Offset=4
    int abcC; // Size=4 Offset=8
} ABC, *PABC;
typedef struct _NETINFOSTRUCT // Size=32
{
    unsigned long cbStructure; // Size=4 Offset=0
    unsigned long dwProviderVersion; // Size=4 Offset=4
    unsigned long dwStatus; // Size=4 Offset=8
    unsigned long dwCharacteristics; // Size=4 Offset=12
    unsigned long dwHandle; // Size=4 Offset=16
    unsigned short wNetType; // Size=2 Offset=20
    unsigned long dwPrinters; // Size=4 Offset=24
    unsigned long dwDrives; // Size=4 Offset=28
} NETINFOSTRUCT, *PNETINFOSTRUCT;
typedef struct _SCHANNEL_ALG // Size=20
{
    unsigned long dwUse; // Size=4 Offset=0
    unsigned int Algid; // Size=4 Offset=4
    unsigned long cBits; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
    unsigned long dwReserved; // Size=4 Offset=16
} SCHANNEL_ALG, *PSCHANNEL_ALG;
typedef struct _CERT_CREATE_CONTEXT_PARA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    void ( * pfnFree)(void *); // Size=4 Offset=4
    void * pvFree; // Size=4 Offset=8
} CERT_CREATE_CONTEXT_PARA, *PCERT_CREATE_CONTEXT_PARA;
typedef struct RPC_DISPATCH_TABLE // Size=12
{
    unsigned int DispatchTableCount; // Size=4 Offset=0
    void ( * * DispatchTable)(struct _RPC_MESSAGE *); // Size=4 Offset=4
    long Reserved; // Size=4 Offset=8
} *PRPC_DISPATCH_TABLE;
typedef struct HKEY__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHKEY__;
typedef struct _DSSSEED // Size=24
{
    unsigned long counter; // Size=4 Offset=0
    unsigned char seed[20]; // Size=20 Offset=4
} DSSSEED, *PDSSSEED;
typedef struct IRpcChannelBuffer // Size=4
{
} *PIRpcChannelBuffer;
typedef struct _DATATYPES_INFO_1A // Size=4
{
    char * pName; // Size=4 Offset=0
} DATATYPES_INFO_1A, *PDATATYPES_INFO_1A;
typedef struct _FLOATING_SAVE_AREA // Size=112
{
    unsigned long ControlWord; // Size=4 Offset=0
    unsigned long StatusWord; // Size=4 Offset=4
    unsigned long TagWord; // Size=4 Offset=8
    unsigned long ErrorOffset; // Size=4 Offset=12
    unsigned long ErrorSelector; // Size=4 Offset=16
    unsigned long DataOffset; // Size=4 Offset=20
    unsigned long DataSelector; // Size=4 Offset=24
    unsigned char RegisterArea[80]; // Size=80 Offset=28
    unsigned long Cr0NpxState; // Size=4 Offset=108
} FLOATING_SAVE_AREA, *PFLOATING_SAVE_AREA;
typedef struct IComThreadingInfo // Size=4
{
} *PIComThreadingInfo;
typedef struct tagCAUB // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    unsigned char * pElems; // Size=4 Offset=4
} *PtagCAUB;
typedef struct hostent // Size=16
{
    char * h_name; // Size=4 Offset=0
    char * * h_aliases; // Size=4 Offset=4
    short h_addrtype; // Size=2 Offset=8
    short h_length; // Size=2 Offset=10
    char * * h_addr_list; // Size=4 Offset=12
} *Phostent;
typedef struct tagDRAWTEXTPARAMS // Size=20
{
    unsigned int cbSize; // Size=4 Offset=0
    int iTabLength; // Size=4 Offset=4
    int iLeftMargin; // Size=4 Offset=8
    int iRightMargin; // Size=4 Offset=12
    unsigned int uiLengthDrawn; // Size=4 Offset=16
} *PtagDRAWTEXTPARAMS;
typedef struct tagMIXERLINEW::__unnamed // Size=80
{
    unsigned long dwType; // Size=4 Offset=0
    unsigned long dwDeviceID; // Size=4 Offset=4
    unsigned short wMid; // Size=2 Offset=8
    unsigned short wPid; // Size=2 Offset=10
    unsigned int vDriverVersion; // Size=4 Offset=12
    unsigned short szPname[32]; // Size=64 Offset=16
} *PtagMIXERLINEW::__unnamed;
typedef struct _SECURITY_ATTRIBUTES // Size=12
{
    unsigned long nLength; // Size=4 Offset=0
    void * lpSecurityDescriptor; // Size=4 Offset=4
    int bInheritHandle; // Size=4 Offset=8
} SECURITY_ATTRIBUTES, *PSECURITY_ATTRIBUTES;
typedef struct tagPELARRAY // Size=20
{
    long paXCount; // Size=4 Offset=0
    long paYCount; // Size=4 Offset=4
    long paXExt; // Size=4 Offset=8
    long paYExt; // Size=4 Offset=12
    unsigned char paRGBs; // Size=1 Offset=16
} *PtagPELARRAY;
typedef struct tagMDICREATESTRUCTA // Size=36
{
    char * szClass; // Size=4 Offset=0
    char * szTitle; // Size=4 Offset=4
    void * hOwner; // Size=4 Offset=8
    int x; // Size=4 Offset=12
    int y; // Size=4 Offset=16
    int cx; // Size=4 Offset=20
    int cy; // Size=4 Offset=24
    unsigned long style; // Size=4 Offset=28
    long lParam; // Size=4 Offset=32
} *PtagMDICREATESTRUCTA;
typedef struct tagMCI_OPEN_PARMSA // Size=20
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned int wDeviceID; // Size=4 Offset=4
    char * lpstrDeviceType; // Size=4 Offset=8
    char * lpstrElementName; // Size=4 Offset=12
    char * lpstrAlias; // Size=4 Offset=16
} *PtagMCI_OPEN_PARMSA;
typedef struct tagMCI_SAVE_PARMSW // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned short * lpfilename; // Size=4 Offset=4
} *PtagMCI_SAVE_PARMSW;
typedef struct __GENERIC_BINDING_INFO // Size=16
{
    void * pObj; // Size=4 Offset=0
    unsigned int Size; // Size=4 Offset=4
    void * ( * pfnBind)(void *); // Size=4 Offset=8
    void ( * pfnUnbind)(void *,unsigned char *); // Size=4 Offset=12
} _GENERIC_BINDING_INFO, *P_GENERIC_BINDING_INFO;
typedef struct _GENERIC_BINDING_ROUTINE_PAIR // Size=8
{
    void * ( * pfnBind)(void *); // Size=4 Offset=0
    void ( * pfnUnbind)(void *,unsigned char *); // Size=4 Offset=4
} GENERIC_BINDING_ROUTINE_PAIR, *PGENERIC_BINDING_ROUTINE_PAIR;
typedef struct _XMIT_ROUTINE_QUINTUPLE // Size=16
{
    void ( * pfnTranslateToXmit)(struct _MIDL_STUB_MESSAGE *); // Size=4 Offset=0
    void ( * pfnTranslateFromXmit)(struct _MIDL_STUB_MESSAGE *); // Size=4 Offset=4
    void ( * pfnFreeXmit)(struct _MIDL_STUB_MESSAGE *); // Size=4 Offset=8
    void ( * pfnFreeInst)(struct _MIDL_STUB_MESSAGE *); // Size=4 Offset=12
} XMIT_ROUTINE_QUINTUPLE, *PXMIT_ROUTINE_QUINTUPLE;
typedef struct _MALLOC_FREE_STRUCT // Size=8
{
    void * ( * pfnAllocate)(unsigned int); // Size=4 Offset=0
    void ( * pfnFree)(void *); // Size=4 Offset=4
} MALLOC_FREE_STRUCT, *PMALLOC_FREE_STRUCT;
typedef struct _COMM_FAULT_OFFSETS // Size=4
{
    short CommOffset; // Size=2 Offset=0
    short FaultOffset; // Size=2 Offset=2
} COMM_FAULT_OFFSETS, *PCOMM_FAULT_OFFSETS;
typedef struct tagSTYLEBUFW // Size=68
{
    unsigned long dwStyle; // Size=4 Offset=0
    unsigned short szDescription[32]; // Size=64 Offset=4
} *PtagSTYLEBUFW;
typedef struct _WSANSClassInfoA // Size=20
{
    char * lpszName; // Size=4 Offset=0
    unsigned long dwNameSpace; // Size=4 Offset=4
    unsigned long dwValueType; // Size=4 Offset=8
    unsigned long dwValueSize; // Size=4 Offset=12
    void * lpValue; // Size=4 Offset=16
} WSANSClassInfoA, *PWSANSClassInfoA;
typedef struct _POINTFLOAT // Size=8
{
    float x; // Size=4 Offset=0
    float y; // Size=4 Offset=4
} POINTFLOAT, *PPOINTFLOAT;
typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION // Size=8
{
    void ( * pfnCompletion)(void *,unsigned long,char *,char *,void *); // Size=4 Offset=0
    void * pvCompletion; // Size=4 Offset=4
} CRYPT_ASYNC_RETRIEVAL_COMPLETION, *PCRYPT_ASYNC_RETRIEVAL_COMPLETION;
typedef struct _ACL // Size=8
{
    unsigned char AclRevision; // Size=1 Offset=0
    unsigned char Sbz1; // Size=1 Offset=1
    unsigned short AclSize; // Size=2 Offset=2
    unsigned short AceCount; // Size=2 Offset=4
    unsigned short Sbz2; // Size=2 Offset=6
} ACL, *PACL;
typedef struct _IMAGE_FUNCTION_ENTRY // Size=12
{
    unsigned long StartingAddress; // Size=4 Offset=0
    unsigned long EndingAddress; // Size=4 Offset=4
    unsigned long EndOfPrologue; // Size=4 Offset=8
} IMAGE_FUNCTION_ENTRY, *PIMAGE_FUNCTION_ENTRY;
typedef struct tagFONTSIGNATURE // Size=24
{
    unsigned long fsUsb[4]; // Size=16 Offset=0
    unsigned long fsCsb[2]; // Size=8 Offset=16
} *PtagFONTSIGNATURE;
typedef struct _IMAGE_OS2_HEADER // Size=64
{
    unsigned short ne_magic; // Size=2 Offset=0
    char ne_ver; // Size=1 Offset=2
    char ne_rev; // Size=1 Offset=3
    unsigned short ne_enttab; // Size=2 Offset=4
    unsigned short ne_cbenttab; // Size=2 Offset=6
    long ne_crc; // Size=4 Offset=8
    unsigned short ne_flags; // Size=2 Offset=12
    unsigned short ne_autodata; // Size=2 Offset=14
    unsigned short ne_heap; // Size=2 Offset=16
    unsigned short ne_stack; // Size=2 Offset=18
    long ne_csip; // Size=4 Offset=20
    long ne_sssp; // Size=4 Offset=24
    unsigned short ne_cseg; // Size=2 Offset=28
    unsigned short ne_cmod; // Size=2 Offset=30
    unsigned short ne_cbnrestab; // Size=2 Offset=32
    unsigned short ne_segtab; // Size=2 Offset=34
    unsigned short ne_rsrctab; // Size=2 Offset=36
    unsigned short ne_restab; // Size=2 Offset=38
    unsigned short ne_modtab; // Size=2 Offset=40
    unsigned short ne_imptab; // Size=2 Offset=42
    long ne_nrestab; // Size=4 Offset=44
    unsigned short ne_cmovent; // Size=2 Offset=48
    unsigned short ne_align; // Size=2 Offset=50
    unsigned short ne_cres; // Size=2 Offset=52
    unsigned char ne_exetyp; // Size=1 Offset=54
    unsigned char ne_flagsothers; // Size=1 Offset=55
    unsigned short ne_pretthunks; // Size=2 Offset=56
    unsigned short ne_psegrefbytes; // Size=2 Offset=58
    unsigned short ne_swaparea; // Size=2 Offset=60
    unsigned short ne_expver; // Size=2 Offset=62
} IMAGE_OS2_HEADER, *PIMAGE_OS2_HEADER;
typedef struct _MESSAGE_RESOURCE_BLOCK // Size=12
{
    unsigned long LowId; // Size=4 Offset=0
    unsigned long HighId; // Size=4 Offset=4
    unsigned long OffsetToEntries; // Size=4 Offset=8
} MESSAGE_RESOURCE_BLOCK, *PMESSAGE_RESOURCE_BLOCK;
typedef struct _DRIVER_INFO_4A // Size=44
{
    unsigned long cVersion; // Size=4 Offset=0
    char * pName; // Size=4 Offset=4
    char * pEnvironment; // Size=4 Offset=8
    char * pDriverPath; // Size=4 Offset=12
    char * pDataFile; // Size=4 Offset=16
    char * pConfigFile; // Size=4 Offset=20
    char * pHelpFile; // Size=4 Offset=24
    char * pDependentFiles; // Size=4 Offset=28
    char * pMonitorName; // Size=4 Offset=32
    char * pDefaultDataType; // Size=4 Offset=36
    char * pszzPreviousNames; // Size=4 Offset=40
} DRIVER_INFO_4A, *PDRIVER_INFO_4A;
typedef struct _RACE_SCHEDULE_ // Size=32
{
    int iDerbyIndex; // Size=4 Offset=0
    int iLapCount; // Size=4 Offset=4
    int iRaceType; // Size=4 Offset=8
    int iEntryNo[5]; // Size=20 Offset=12
} RACE_SCHEDULE_, *PRACE_SCHEDULE_;
typedef struct _SYSTEM_INFO // Size=36
{
    union
    {
        unsigned long dwOemId; // Size=4 Offset=0
        struct
        {
            unsigned short wProcessorArchitecture; // Size=2 Offset=0
            unsigned short wReserved; // Size=2 Offset=2
        };
    };
    unsigned long dwPageSize; // Size=4 Offset=4
    void * lpMinimumApplicationAddress; // Size=4 Offset=8
    void * lpMaximumApplicationAddress; // Size=4 Offset=12
    unsigned long dwActiveProcessorMask; // Size=4 Offset=16
    unsigned long dwNumberOfProcessors; // Size=4 Offset=20
    unsigned long dwProcessorType; // Size=4 Offset=24
    unsigned long dwAllocationGranularity; // Size=4 Offset=28
    unsigned short wProcessorLevel; // Size=2 Offset=32
    unsigned short wProcessorRevision; // Size=2 Offset=34
} SYSTEM_INFO, *PSYSTEM_INFO;
typedef struct tagMCI_PLAY_PARMS // Size=12
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwFrom; // Size=4 Offset=4
    unsigned long dwTo; // Size=4 Offset=8
} *PtagMCI_PLAY_PARMS;
typedef union _CLIENT_CALL_RETURN // Size=4
{
    void * Pointer; // Size=4 Offset=0
    long Simple; // Size=4 Offset=0
} CLIENT_CALL_RETURN, *PCLIENT_CALL_RETURN;
typedef struct _ADDJOB_INFO_1A // Size=8
{
    char * Path; // Size=4 Offset=0
    unsigned long JobId; // Size=4 Offset=4
} ADDJOB_INFO_1A, *PADDJOB_INFO_1A;
typedef union tagCY // Size=8
{
    struct
    {
        unsigned long Lo; // Size=4 Offset=0
        long Hi; // Size=4 Offset=4
    };
    __int64 int64; // Size=8 Offset=0
} *PtagCY;
typedef struct tagMCI_WAVE_OPEN_PARMSA // Size=24
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned int wDeviceID; // Size=4 Offset=4
    char * lpstrDeviceType; // Size=4 Offset=8
    char * lpstrElementName; // Size=4 Offset=12
    char * lpstrAlias; // Size=4 Offset=16
    unsigned long dwBufferSeconds; // Size=4 Offset=20
} *PtagMCI_WAVE_OPEN_PARMSA;
typedef struct _CERT_STORE_PROV_INFO // Size=24
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long cStoreProvFunc; // Size=4 Offset=4
    void * * rgpvStoreProvFunc; // Size=4 Offset=8
    void * hStoreProv; // Size=4 Offset=12
    unsigned long dwStoreProvFlags; // Size=4 Offset=16
    void * hStoreProvFuncAddr2; // Size=4 Offset=20
} CERT_STORE_PROV_INFO, *PCERT_STORE_PROV_INFO;
typedef struct IXMLDOMAttribute // Size=4
{
} *PIXMLDOMAttribute;
typedef struct sockaddr_storage // Size=128
{
    short ss_family; // Size=2 Offset=0
    char __ss_pad1[6]; // Size=6 Offset=2
    __int64 __ss_align; // Size=8 Offset=8
    char __ss_pad2[112]; // Size=112 Offset=16
} *Psockaddr_storage;
typedef struct ITypeMarshal // Size=4
{
} *PITypeMarshal;
typedef struct LIST_ENTRY32 // Size=8
{
    unsigned long Flink; // Size=4 Offset=0
    unsigned long Blink; // Size=4 Offset=4
} *PLIST_ENTRY32;
typedef struct _IMAGE_FUNCTION_ENTRY64 // Size=24
{
    unsigned __int64 StartingAddress; // Size=8 Offset=0
    unsigned __int64 EndingAddress; // Size=8 Offset=8
    union
    {
        unsigned __int64 EndOfPrologue; // Size=8 Offset=16
        unsigned __int64 UnwindInfoAddress; // Size=8 Offset=16
    };
} IMAGE_FUNCTION_ENTRY64, *PIMAGE_FUNCTION_ENTRY64;
typedef struct _EXIT_THREAD_DEBUG_INFO // Size=4
{
    unsigned long dwExitCode; // Size=4 Offset=0
} EXIT_THREAD_DEBUG_INFO, *PEXIT_THREAD_DEBUG_INFO;
typedef struct tagMCI_GENERIC_PARMS // Size=4
{
    unsigned long dwCallback; // Size=4 Offset=0
} *PtagMCI_GENERIC_PARMS;
typedef struct IOleItemContainer // Size=4
{
} *PIOleItemContainer;
typedef struct _SERVICE_STATUS_PROCESS // Size=36
{
    unsigned long dwServiceType; // Size=4 Offset=0
    unsigned long dwCurrentState; // Size=4 Offset=4
    unsigned long dwControlsAccepted; // Size=4 Offset=8
    unsigned long dwWin32ExitCode; // Size=4 Offset=12
    unsigned long dwServiceSpecificExitCode; // Size=4 Offset=16
    unsigned long dwCheckPoint; // Size=4 Offset=20
    unsigned long dwWaitHint; // Size=4 Offset=24
    unsigned long dwProcessId; // Size=4 Offset=28
    unsigned long dwServiceFlags; // Size=4 Offset=32
} SERVICE_STATUS_PROCESS, *PSERVICE_STATUS_PROCESS;
typedef struct servent // Size=16
{
    char * s_name; // Size=4 Offset=0
    char * * s_aliases; // Size=4 Offset=4
    short s_port; // Size=2 Offset=8
    char * s_proto; // Size=4 Offset=12
} *Pservent;
typedef struct IWindowForBindingUI // Size=4
{
} *PIWindowForBindingUI;
typedef struct _DERBY_MONSTER_INFO_EX_ // Size=14
{
    unsigned char byMonsterIndex; // Size=1 Offset=0
    unsigned char byStamina; // Size=1 Offset=1
    unsigned char bySpeed; // Size=1 Offset=2
    unsigned char byAcceleration; // Size=1 Offset=3
    unsigned char byEndurance; // Size=1 Offset=4
    unsigned char byCornering; // Size=1 Offset=5
    unsigned char byElemental; // Size=1 Offset=6
    unsigned short wNumGames; // Size=2 Offset=8
    unsigned short wNumWins; // Size=2 Offset=10
    unsigned short wRecentWins; // Size=2 Offset=12
} DERBY_MONSTER_INFO_EX_, *PDERBY_MONSTER_INFO_EX_;
typedef struct _DERBY_HISTORY_INFO_ // Size=16
{
    unsigned short iDerbyIndex; // Size=2 Offset=0
    unsigned char byFirstPlace; // Size=1 Offset=2
    unsigned char byFirstPlaceIndex; // Size=1 Offset=3
    unsigned char bySecondPlace; // Size=1 Offset=4
    unsigned char bySecondPlaceIndex; // Size=1 Offset=5
    float fSingleEarningRatio; // Size=4 Offset=8
    float fDoubleEarningRatio; // Size=4 Offset=12
} DERBY_HISTORY_INFO_, *PDERBY_HISTORY_INFO_;
typedef struct tagACCEL // Size=6
{
    unsigned char fVirt; // Size=1 Offset=0
    unsigned short key; // Size=2 Offset=2
    unsigned short cmd; // Size=2 Offset=4
} *PtagACCEL;
typedef struct tagSERIALKEYSW // Size=28
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned short * lpszActivePort; // Size=4 Offset=8
    unsigned short * lpszPort; // Size=4 Offset=12
    unsigned int iBaudRate; // Size=4 Offset=16
    unsigned int iPortState; // Size=4 Offset=20
    unsigned int iActive; // Size=4 Offset=24
} *PtagSERIALKEYSW;
typedef struct IInternetZoneManager // Size=4
{
} *PIInternetZoneManager;
typedef struct _ZONEATTRIBUTES // Size=1460
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned short szDisplayName[260]; // Size=520 Offset=4
    unsigned short szDescription[200]; // Size=400 Offset=524
    unsigned short szIconPath[260]; // Size=520 Offset=924
    unsigned long dwTemplateMinLevel; // Size=4 Offset=1444
    unsigned long dwTemplateRecommended; // Size=4 Offset=1448
    unsigned long dwTemplateCurrentLevel; // Size=4 Offset=1452
    unsigned long dwFlags; // Size=4 Offset=1456
} ZONEATTRIBUTES, *PZONEATTRIBUTES;
typedef struct ICreateTypeLib2 // Size=4
{
} *PICreateTypeLib2;
typedef struct _NETCONNECTINFOSTRUCT // Size=20
{
    unsigned long cbStructure; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned long dwSpeed; // Size=4 Offset=8
    unsigned long dwDelay; // Size=4 Offset=12
    unsigned long dwOptDataSize; // Size=4 Offset=16
} NETCONNECTINFOSTRUCT, *PNETCONNECTINFOSTRUCT;
typedef struct _FLAGGED_BYTE_BLOB // Size=12
{
    unsigned long fFlags; // Size=4 Offset=0
    unsigned long clSize; // Size=4 Offset=4
    unsigned char abData[1]; // Size=1 Offset=8
} FLAGGED_BYTE_BLOB, *PFLAGGED_BYTE_BLOB;
typedef struct IInternetProtocol // Size=4
{
} *PIInternetProtocol;
typedef struct _PATHNAME_BUFFER // Size=8
{
    unsigned long PathNameLength; // Size=4 Offset=0
    unsigned short Name[1]; // Size=2 Offset=4
} PATHNAME_BUFFER, *PPATHNAME_BUFFER;
typedef struct _STORAGE_PREDICT_FAILURE // Size=516
{
    unsigned long PredictFailure; // Size=4 Offset=0
    unsigned char VendorSpecific[512]; // Size=512 Offset=4
} STORAGE_PREDICT_FAILURE, *PSTORAGE_PREDICT_FAILURE;
typedef struct tagEXTLOGPEN // Size=28
{
    unsigned long elpPenStyle; // Size=4 Offset=0
    unsigned long elpWidth; // Size=4 Offset=4
    unsigned int elpBrushStyle; // Size=4 Offset=8
    unsigned long elpColor; // Size=4 Offset=12
    unsigned long elpHatch; // Size=4 Offset=16
    unsigned long elpNumEntries; // Size=4 Offset=20
    unsigned long elpStyleEntry[1]; // Size=4 Offset=24
} *PtagEXTLOGPEN;
typedef struct midievent_tag // Size=16
{
    unsigned long dwDeltaTime; // Size=4 Offset=0
    unsigned long dwStreamID; // Size=4 Offset=4
    unsigned long dwEvent; // Size=4 Offset=8
    unsigned long dwParms[1]; // Size=4 Offset=12
} *Pmidievent_tag;
typedef struct tagAUXCAPSA // Size=48
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned short wTechnology; // Size=2 Offset=40
    unsigned short wReserved1; // Size=2 Offset=42
    unsigned long dwSupport; // Size=4 Offset=44
} *PtagAUXCAPSA;
typedef union _userCLIPFORMAT::__MIDL_IWinTypes_0001 // Size=4
{
    unsigned long dwValue; // Size=4 Offset=0
    wchar_t * pwszName; // Size=4 Offset=0
} userCLIPFORMAT::__MIDL_IWinTypes_0001, *PuserCLIPFORMAT::__MIDL_IWinTypes_0001;
typedef struct _CRYPT_RC2_CBC_PARAMETERS // Size=16
{
    unsigned long dwVersion; // Size=4 Offset=0
    int fIV; // Size=4 Offset=4
    unsigned char rgbIV[8]; // Size=8 Offset=8
} CRYPT_RC2_CBC_PARAMETERS, *PCRYPT_RC2_CBC_PARAMETERS;
typedef struct _PREVENT_MEDIA_REMOVAL // Size=1
{
    unsigned char PreventMediaRemoval; // Size=1 Offset=0
} PREVENT_MEDIA_REMOVAL, *PPREVENT_MEDIA_REMOVAL;
typedef struct _DOC_INFO_2A // Size=20
{
    char * pDocName; // Size=4 Offset=0
    char * pOutputFile; // Size=4 Offset=4
    char * pDatatype; // Size=4 Offset=8
    unsigned long dwMode; // Size=4 Offset=12
    unsigned long JobId; // Size=4 Offset=16
} DOC_INFO_2A, *PDOC_INFO_2A;
typedef struct _RASTERIZER_STATUS // Size=6
{
    short nSize; // Size=2 Offset=0
    short wFlags; // Size=2 Offset=2
    short nLanguageID; // Size=2 Offset=4
} RASTERIZER_STATUS, *PRASTERIZER_STATUS;
typedef struct _PRINTER_INFO_4A // Size=12
{
    char * pPrinterName; // Size=4 Offset=0
    char * pServerName; // Size=4 Offset=4
    unsigned long Attributes; // Size=4 Offset=8
} PRINTER_INFO_4A, *PPRINTER_INFO_4A;
typedef struct _CERT_FORTEZZA_DATA_PROP // Size=48
{
    unsigned char SerialNumber[8]; // Size=8 Offset=0
    int CertIndex; // Size=4 Offset=8
    unsigned char CertLabel[36]; // Size=36 Offset=12
} CERT_FORTEZZA_DATA_PROP, *PCERT_FORTEZZA_DATA_PROP;
typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwSignerIndex; // Size=4 Offset=4
    unsigned long dwUnauthAttrIndex; // Size=4 Offset=8
} CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
typedef struct _TOKEN_AUDIT_POLICY_ELEMENT // Size=8
{
    unsigned long Category; // Size=4 Offset=0
    unsigned long PolicyMask; // Size=4 Offset=4
} TOKEN_AUDIT_POLICY_ELEMENT, *PTOKEN_AUDIT_POLICY_ELEMENT;
typedef struct _DRIVER_INFO_1A // Size=4
{
    char * pName; // Size=4 Offset=0
} DRIVER_INFO_1A, *PDRIVER_INFO_1A;
typedef struct tagBITMAPINFOHEADER // Size=40
{
    unsigned long biSize; // Size=4 Offset=0
    long biWidth; // Size=4 Offset=4
    long biHeight; // Size=4 Offset=8
    unsigned short biPlanes; // Size=2 Offset=12
    unsigned short biBitCount; // Size=2 Offset=14
    unsigned long biCompression; // Size=4 Offset=16
    unsigned long biSizeImage; // Size=4 Offset=20
    long biXPelsPerMeter; // Size=4 Offset=24
    long biYPelsPerMeter; // Size=4 Offset=28
    unsigned long biClrUsed; // Size=4 Offset=32
    unsigned long biClrImportant; // Size=4 Offset=36
} *PtagBITMAPINFOHEADER;
typedef struct IInternet // Size=4
{
} *PIInternet;
typedef struct IInternetProtocolInfo // Size=4
{
} *PIInternetProtocolInfo;
typedef struct IBindCtx // Size=4
{
} *PIBindCtx;
typedef struct IRunningObjectTable // Size=4
{
} *PIRunningObjectTable;
typedef struct IEnumString // Size=4
{
} *PIEnumString;
typedef struct _STORAGE_HOTPLUG_INFO // Size=8
{
    unsigned long Size; // Size=4 Offset=0
    unsigned char MediaRemovable; // Size=1 Offset=4
    unsigned char MediaHotplug; // Size=1 Offset=5
    unsigned char DeviceHotplug; // Size=1 Offset=6
    unsigned char WriteCacheEnableOverride; // Size=1 Offset=7
} STORAGE_HOTPLUG_INFO, *PSTORAGE_HOTPLUG_INFO;
typedef struct IPropertyStorage // Size=4
{
} *PIPropertyStorage;
typedef struct tagPROPSPEC // Size=8
{
    unsigned long ulKind; // Size=4 Offset=0
    union
    {
        unsigned long propid; // Size=4 Offset=4
        unsigned short * lpwstr; // Size=4 Offset=4
    };
} *PtagPROPSPEC;
typedef struct IEnumSTATPROPSTG // Size=4
{
} *PIEnumSTATPROPSTG;
typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 // Size=72
{
    unsigned long Size; // Size=4 Offset=0
    unsigned long TimeDateStamp; // Size=4 Offset=4
    unsigned short MajorVersion; // Size=2 Offset=8
    unsigned short MinorVersion; // Size=2 Offset=10
    unsigned long GlobalFlagsClear; // Size=4 Offset=12
    unsigned long GlobalFlagsSet; // Size=4 Offset=16
    unsigned long CriticalSectionDefaultTimeout; // Size=4 Offset=20
    unsigned long DeCommitFreeBlockThreshold; // Size=4 Offset=24
    unsigned long DeCommitTotalFreeThreshold; // Size=4 Offset=28
    unsigned long LockPrefixTable; // Size=4 Offset=32
    unsigned long MaximumAllocationSize; // Size=4 Offset=36
    unsigned long VirtualMemoryThreshold; // Size=4 Offset=40
    unsigned long ProcessHeapFlags; // Size=4 Offset=44
    unsigned long ProcessAffinityMask; // Size=4 Offset=48
    unsigned short CSDVersion; // Size=2 Offset=52
    unsigned short Reserved1; // Size=2 Offset=54
    unsigned long EditList; // Size=4 Offset=56
    unsigned long SecurityCookie; // Size=4 Offset=60
    unsigned long SEHandlerTable; // Size=4 Offset=64
    unsigned long SEHandlerCount; // Size=4 Offset=68
} *PIMAGE_LOAD_CONFIG_DIRECTORY32;
typedef struct _TRIVERTEX // Size=16
{
    long x; // Size=4 Offset=0
    long y; // Size=4 Offset=4
    unsigned short Red; // Size=2 Offset=8
    unsigned short Green; // Size=2 Offset=10
    unsigned short Blue; // Size=2 Offset=12
    unsigned short Alpha; // Size=2 Offset=14
} TRIVERTEX, *PTRIVERTEX;
typedef struct _MEMORY_BASIC_INFORMATION // Size=28
{
    void * BaseAddress; // Size=4 Offset=0
    void * AllocationBase; // Size=4 Offset=4
    unsigned long AllocationProtect; // Size=4 Offset=8
    unsigned long RegionSize; // Size=4 Offset=12
    unsigned long State; // Size=4 Offset=16
    unsigned long Protect; // Size=4 Offset=20
    unsigned long Type; // Size=4 Offset=24
} MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION;
typedef struct tagTEXTMETRICW // Size=60
{
    long tmHeight; // Size=4 Offset=0
    long tmAscent; // Size=4 Offset=4
    long tmDescent; // Size=4 Offset=8
    long tmInternalLeading; // Size=4 Offset=12
    long tmExternalLeading; // Size=4 Offset=16
    long tmAveCharWidth; // Size=4 Offset=20
    long tmMaxCharWidth; // Size=4 Offset=24
    long tmWeight; // Size=4 Offset=28
    long tmOverhang; // Size=4 Offset=32
    long tmDigitizedAspectX; // Size=4 Offset=36
    long tmDigitizedAspectY; // Size=4 Offset=40
    unsigned short tmFirstChar; // Size=2 Offset=44
    unsigned short tmLastChar; // Size=2 Offset=46
    unsigned short tmDefaultChar; // Size=2 Offset=48
    unsigned short tmBreakChar; // Size=2 Offset=50
    unsigned char tmItalic; // Size=1 Offset=52
    unsigned char tmUnderlined; // Size=1 Offset=53
    unsigned char tmStruckOut; // Size=1 Offset=54
    unsigned char tmPitchAndFamily; // Size=1 Offset=55
    unsigned char tmCharSet; // Size=1 Offset=56
} *PtagTEXTMETRICW;
typedef struct tagRemHPALETTE // Size=8
{
    unsigned long cbData; // Size=4 Offset=0
    unsigned char data[1]; // Size=1 Offset=4
} *PtagRemHPALETTE;
typedef struct _DOCINFOA // Size=20
{
    int cbSize; // Size=4 Offset=0
    char * lpszDocName; // Size=4 Offset=4
    char * lpszOutput; // Size=4 Offset=8
    char * lpszDatatype; // Size=4 Offset=12
    unsigned long fwType; // Size=4 Offset=16
} DOCINFOA, *PDOCINFOA;
typedef struct MENUITEMTEMPLATEHEADER // Size=4
{
    unsigned short versionNumber; // Size=2 Offset=0
    unsigned short offset; // Size=2 Offset=2
} *PMENUITEMTEMPLATEHEADER;
typedef struct HDDEDATA__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHDDEDATA__;
typedef struct tagCIEXYZ // Size=12
{
    long ciexyzX; // Size=4 Offset=0
    long ciexyzY; // Size=4 Offset=4
    long ciexyzZ; // Size=4 Offset=8
} *PtagCIEXYZ;
typedef struct _FLAGGED_WORD_BLOB // Size=12
{
    unsigned long fFlags; // Size=4 Offset=0
    unsigned long clSize; // Size=4 Offset=4
    unsigned short asData[1]; // Size=2 Offset=8
} FLAGGED_WORD_BLOB, *PFLAGGED_WORD_BLOB;
typedef struct IUrlMon // Size=4
{
} *PIUrlMon;
typedef struct _BLENDFUNCTION // Size=4
{
    unsigned char BlendOp; // Size=1 Offset=0
    unsigned char BlendFlags; // Size=1 Offset=1
    unsigned char SourceConstantAlpha; // Size=1 Offset=2
    unsigned char AlphaFormat; // Size=1 Offset=3
} BLENDFUNCTION, *PBLENDFUNCTION;
typedef struct _RPC_PROTSEQ_VECTORW // Size=8
{
    unsigned int Count; // Size=4 Offset=0
    unsigned short * Protseq[1]; // Size=4 Offset=4
} RPC_PROTSEQ_VECTORW, *PRPC_PROTSEQ_VECTORW;
typedef struct _PUBKEY // Size=8
{
    unsigned long magic; // Size=4 Offset=0
    unsigned long bitlen; // Size=4 Offset=4
} PUBKEY, *PPUBKEY;
typedef struct IPSFactoryBuffer // Size=4
{
} *PIPSFactoryBuffer;
typedef struct IRpcProxyBuffer // Size=4
{
} *PIRpcProxyBuffer;
typedef struct IRpcStubBuffer // Size=4
{
} *PIRpcStubBuffer;
typedef struct IInternetProtocolSink // Size=4
{
} *PIInternetProtocolSink;
typedef struct IXMLElement2 // Size=4
{
} *PIXMLElement2;
typedef struct IXMLElementCollection // Size=4
{
} *PIXMLElementCollection;
typedef struct HUMPD__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHUMPD__;
typedef struct tagRPCOLEMESSAGE // Size=44
{
    void * reserved1; // Size=4 Offset=0
    unsigned long dataRepresentation; // Size=4 Offset=4
    void * Buffer; // Size=4 Offset=8
    unsigned long cbBuffer; // Size=4 Offset=12
    unsigned long iMethod; // Size=4 Offset=16
    void * reserved2[5]; // Size=20 Offset=20
    unsigned long rpcFlags; // Size=4 Offset=40
} *PtagRPCOLEMESSAGE;
typedef struct _PROVIDOR_INFO_2W // Size=4
{
    unsigned short * pOrder; // Size=4 Offset=0
} PROVIDOR_INFO_2W, *PPROVIDOR_INFO_2W;
typedef class MSG_S2S_HEADER // Size=4
{
    unsigned short wProtocol; // Size=2 Offset=0
    unsigned short wSize; // Size=2 Offset=2
} *PMSG_S2S_HEADER;
typedef class MSG_Z2CG_ASK_DERBY_INFO // Size=4
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
} *PMSG_Z2CG_ASK_DERBY_INFO;
typedef class CLoopThread // Size=16
{
    int m_bRunThread; // Size=4 Offset=4
    void * m_hThread; // Size=4 Offset=8
    unsigned long m_dwThreadID; // Size=4 Offset=12
} *PCLoopThread;
typedef struct _WSANETWORKEVENTS // Size=44
{
    long lNetworkEvents; // Size=4 Offset=0
    int iErrorCode[10]; // Size=40 Offset=4
} WSANETWORKEVENTS, *PWSANETWORKEVENTS;
typedef struct _NETRESOURCEA // Size=32
{
    unsigned long dwScope; // Size=4 Offset=0
    unsigned long dwType; // Size=4 Offset=4
    unsigned long dwDisplayType; // Size=4 Offset=8
    unsigned long dwUsage; // Size=4 Offset=12
    char * lpLocalName; // Size=4 Offset=16
    char * lpRemoteName; // Size=4 Offset=20
    char * lpComment; // Size=4 Offset=24
    char * lpProvider; // Size=4 Offset=28
} NETRESOURCEA, *PNETRESOURCEA;
typedef struct IProcessInitControl // Size=4
{
} *PIProcessInitControl;
typedef struct tagRemSTGMEDIUM // Size=24
{
    unsigned long tymed; // Size=4 Offset=0
    unsigned long dwHandleType; // Size=4 Offset=4
    unsigned long pData; // Size=4 Offset=8
    unsigned long pUnkForRelease; // Size=4 Offset=12
    unsigned long cbData; // Size=4 Offset=16
    unsigned char data[1]; // Size=1 Offset=20
} *PtagRemSTGMEDIUM;
typedef struct SC_HANDLE__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PSC_HANDLE__;
typedef struct tagPOINTS // Size=4
{
    short x; // Size=2 Offset=0
    short y; // Size=2 Offset=2
} *PtagPOINTS;
typedef struct _RPC_PROTSEQ_ENDPOINT // Size=8
{
    unsigned char * RpcProtocolSequence; // Size=4 Offset=0
    unsigned char * Endpoint; // Size=4 Offset=4
} RPC_PROTSEQ_ENDPOINT, *PRPC_PROTSEQ_ENDPOINT;
typedef struct _DRIVER_INFO_5W // Size=36
{
    unsigned long cVersion; // Size=4 Offset=0
    unsigned short * pName; // Size=4 Offset=4
    unsigned short * pEnvironment; // Size=4 Offset=8
    unsigned short * pDriverPath; // Size=4 Offset=12
    unsigned short * pDataFile; // Size=4 Offset=16
    unsigned short * pConfigFile; // Size=4 Offset=20
    unsigned long dwDriverAttributes; // Size=4 Offset=24
    unsigned long dwConfigVersion; // Size=4 Offset=28
    unsigned long dwDriverVersion; // Size=4 Offset=32
} DRIVER_INFO_5W, *PDRIVER_INFO_5W;
typedef struct IPersistMoniker // Size=4
{
} *PIPersistMoniker;
typedef struct _PROV_ENUMALGS_EX // Size=88
{
    unsigned int aiAlgid; // Size=4 Offset=0
    unsigned long dwDefaultLen; // Size=4 Offset=4
    unsigned long dwMinLen; // Size=4 Offset=8
    unsigned long dwMaxLen; // Size=4 Offset=12
    unsigned long dwProtocols; // Size=4 Offset=16
    unsigned long dwNameLen; // Size=4 Offset=20
    char szName[20]; // Size=20 Offset=24
    unsigned long dwLongNameLen; // Size=4 Offset=44
    char szLongName[40]; // Size=40 Offset=48
} PROV_ENUMALGS_EX, *PPROV_ENUMALGS_EX;
typedef struct IOleWindow // Size=4
{
} *PIOleWindow;
typedef struct IOleInPlaceActiveObject // Size=4
{
} *PIOleInPlaceActiveObject;
typedef struct IOleInPlaceUIWindow // Size=4
{
} *PIOleInPlaceUIWindow;
typedef struct _COMMPROP // Size=64
{
    unsigned short wPacketLength; // Size=2 Offset=0
    unsigned short wPacketVersion; // Size=2 Offset=2
    unsigned long dwServiceMask; // Size=4 Offset=4
    unsigned long dwReserved1; // Size=4 Offset=8
    unsigned long dwMaxTxQueue; // Size=4 Offset=12
    unsigned long dwMaxRxQueue; // Size=4 Offset=16
    unsigned long dwMaxBaud; // Size=4 Offset=20
    unsigned long dwProvSubType; // Size=4 Offset=24
    unsigned long dwProvCapabilities; // Size=4 Offset=28
    unsigned long dwSettableParams; // Size=4 Offset=32
    unsigned long dwSettableBaud; // Size=4 Offset=36
    unsigned short wSettableData; // Size=2 Offset=40
    unsigned short wSettableStopParity; // Size=2 Offset=42
    unsigned long dwCurrentTxQueue; // Size=4 Offset=44
    unsigned long dwCurrentRxQueue; // Size=4 Offset=48
    unsigned long dwProvSpec1; // Size=4 Offset=52
    unsigned long dwProvSpec2; // Size=4 Offset=56
    unsigned short wcProvChar[1]; // Size=2 Offset=60
} COMMPROP, *PCOMMPROP;
typedef struct tagDEC // Size=16
{
    unsigned short wReserved; // Size=2 Offset=0
    union
    {
        struct
        {
            unsigned char scale; // Size=1 Offset=2
            unsigned char sign; // Size=1 Offset=3
        };
        unsigned short signscale; // Size=2 Offset=2
    };
    unsigned long Hi32; // Size=4 Offset=4
    union
    {
        struct
        {
            unsigned long Lo32; // Size=4 Offset=8
            unsigned long Mid32; // Size=4 Offset=12
        };
        unsigned __int64 Lo64; // Size=8 Offset=8
    };
} *PtagDEC;
typedef struct _PRINTER_ENUM_VALUESW // Size=20
{
    unsigned short * pValueName; // Size=4 Offset=0
    unsigned long cbValueName; // Size=4 Offset=4
    unsigned long dwType; // Size=4 Offset=8
    unsigned char * pData; // Size=4 Offset=12
    unsigned long cbData; // Size=4 Offset=16
} PRINTER_ENUM_VALUESW, *PPRINTER_ENUM_VALUESW;
typedef struct _QUERY_SERVICE_CONFIGW // Size=36
{
    unsigned long dwServiceType; // Size=4 Offset=0
    unsigned long dwStartType; // Size=4 Offset=4
    unsigned long dwErrorControl; // Size=4 Offset=8
    unsigned short * lpBinaryPathName; // Size=4 Offset=12
    unsigned short * lpLoadOrderGroup; // Size=4 Offset=16
    unsigned long dwTagId; // Size=4 Offset=20
    unsigned short * lpDependencies; // Size=4 Offset=24
    unsigned short * lpServiceStartName; // Size=4 Offset=28
    unsigned short * lpDisplayName; // Size=4 Offset=32
} QUERY_SERVICE_CONFIGW, *PQUERY_SERVICE_CONFIGW;
typedef struct tagMONITORINFOEXA // Size=72
{
    char szDevice[32]; // Size=32 Offset=40
} *PtagMONITORINFOEXA;
typedef struct _NAME_BUFFER // Size=18
{
    unsigned char name[16]; // Size=16 Offset=0
    unsigned char name_num; // Size=1 Offset=16
    unsigned char name_flags; // Size=1 Offset=17
} NAME_BUFFER, *PNAME_BUFFER;
typedef struct _DOC_INFO_1A // Size=12
{
    char * pDocName; // Size=4 Offset=0
    char * pOutputFile; // Size=4 Offset=4
    char * pDatatype; // Size=4 Offset=8
} DOC_INFO_1A, *PDOC_INFO_1A;
typedef struct tagEXCEPINFO // Size=32
{
    unsigned short wCode; // Size=2 Offset=0
    unsigned short wReserved; // Size=2 Offset=2
    unsigned short * bstrSource; // Size=4 Offset=4
    unsigned short * bstrDescription; // Size=4 Offset=8
    unsigned short * bstrHelpFile; // Size=4 Offset=12
    unsigned long dwHelpContext; // Size=4 Offset=16
    void * pvReserved; // Size=4 Offset=20
    HRESULT ( * pfnDeferredFillIn)(struct tagEXCEPINFO *); // Size=4 Offset=24
    long scode; // Size=4 Offset=28
} *PtagEXCEPINFO;
typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR // Size=12
{
    char * ThunkName; // Size=4 Offset=0
    void * ThunkOldAddress; // Size=4 Offset=4
    void * ThunkNewAddress; // Size=4 Offset=8
} RTL_VERIFIER_THUNK_DESCRIPTOR, *PRTL_VERIFIER_THUNK_DESCRIPTOR;
typedef struct tagMCI_VD_ESCAPE_PARMSW // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned short * lpstrCommand; // Size=4 Offset=4
} *PtagMCI_VD_ESCAPE_PARMSW;
typedef struct _MODEMSETTINGS // Size=48
{
    unsigned long dwActualSize; // Size=4 Offset=0
    unsigned long dwRequiredSize; // Size=4 Offset=4
    unsigned long dwDevSpecificOffset; // Size=4 Offset=8
    unsigned long dwDevSpecificSize; // Size=4 Offset=12
    unsigned long dwCallSetupFailTimer; // Size=4 Offset=16
    unsigned long dwInactivityTimeout; // Size=4 Offset=20
    unsigned long dwSpeakerVolume; // Size=4 Offset=24
    unsigned long dwSpeakerMode; // Size=4 Offset=28
    unsigned long dwPreferredModemOptions; // Size=4 Offset=32
    unsigned long dwNegotiatedModemOptions; // Size=4 Offset=36
    unsigned long dwNegotiatedDCERate; // Size=4 Offset=40
    unsigned char abVariablePortion[1]; // Size=1 Offset=44
} MODEMSETTINGS, *PMODEMSETTINGS;
typedef struct _DRIVER_INFO_4W // Size=44
{
    unsigned long cVersion; // Size=4 Offset=0
    unsigned short * pName; // Size=4 Offset=4
    unsigned short * pEnvironment; // Size=4 Offset=8
    unsigned short * pDriverPath; // Size=4 Offset=12
    unsigned short * pDataFile; // Size=4 Offset=16
    unsigned short * pConfigFile; // Size=4 Offset=20
    unsigned short * pHelpFile; // Size=4 Offset=24
    unsigned short * pDependentFiles; // Size=4 Offset=28
    unsigned short * pMonitorName; // Size=4 Offset=32
    unsigned short * pDefaultDataType; // Size=4 Offset=36
    unsigned short * pszzPreviousNames; // Size=4 Offset=40
} DRIVER_INFO_4W, *PDRIVER_INFO_4W;
typedef struct _LOTTO_LOG_DATA_ // Size=108
{
    int nLottoCnt; // Size=4 Offset=0
    int iLuckyNumber[5]; // Size=20 Offset=4
    int nTotalWinner[4]; // Size=16 Offset=24
    unsigned int iRemainMoney; // Size=4 Offset=40
    char szDateLog[64]; // Size=64 Offset=44
} LOTTO_LOG_DATA_, *PLOTTO_LOG_DATA_;
typedef struct _CMSG_CTRL_DECRYPT_PARA // Size=16
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    unsigned long dwKeySpec; // Size=4 Offset=8
    unsigned long dwRecipientIndex; // Size=4 Offset=12
} CMSG_CTRL_DECRYPT_PARA, *PCMSG_CTRL_DECRYPT_PARA;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER // Size=56
{
    unsigned short Magic; // Size=2 Offset=0
    unsigned char MajorLinkerVersion; // Size=1 Offset=2
    unsigned char MinorLinkerVersion; // Size=1 Offset=3
    unsigned long SizeOfCode; // Size=4 Offset=4
    unsigned long SizeOfInitializedData; // Size=4 Offset=8
    unsigned long SizeOfUninitializedData; // Size=4 Offset=12
    unsigned long AddressOfEntryPoint; // Size=4 Offset=16
    unsigned long BaseOfCode; // Size=4 Offset=20
    unsigned long BaseOfData; // Size=4 Offset=24
    unsigned long BaseOfBss; // Size=4 Offset=28
    unsigned long GprMask; // Size=4 Offset=32
    unsigned long CprMask[4]; // Size=16 Offset=36
    unsigned long GpValue; // Size=4 Offset=52
} IMAGE_ROM_OPTIONAL_HEADER, *PIMAGE_ROM_OPTIONAL_HEADER;
typedef struct tagMIDIINCAPSA // Size=44
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned long dwSupport; // Size=4 Offset=40
} *PtagMIDIINCAPSA;
typedef struct tagMCI_WAVE_SET_PARMS // Size=44
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwTimeFormat; // Size=4 Offset=4
    unsigned long dwAudio; // Size=4 Offset=8
    unsigned int wInput; // Size=4 Offset=12
    unsigned int wOutput; // Size=4 Offset=16
    unsigned short wFormatTag; // Size=2 Offset=20
    unsigned short wReserved2; // Size=2 Offset=22
    unsigned short nChannels; // Size=2 Offset=24
    unsigned short wReserved3; // Size=2 Offset=26
    unsigned long nSamplesPerSec; // Size=4 Offset=28
    unsigned long nAvgBytesPerSec; // Size=4 Offset=32
    unsigned short nBlockAlign; // Size=2 Offset=36
    unsigned short wReserved4; // Size=2 Offset=38
    unsigned short wBitsPerSample; // Size=2 Offset=40
    unsigned short wReserved5; // Size=2 Offset=42
} *PtagMCI_WAVE_SET_PARMS;
typedef struct _HISTOGRAM_BUCKET // Size=8
{
    unsigned long Reads; // Size=4 Offset=0
    unsigned long Writes; // Size=4 Offset=4
} HISTOGRAM_BUCKET, *PHISTOGRAM_BUCKET;
typedef struct _IMAGE_DEBUG_DIRECTORY // Size=28
{
    unsigned long Characteristics; // Size=4 Offset=0
    unsigned long TimeDateStamp; // Size=4 Offset=4
    unsigned short MajorVersion; // Size=2 Offset=8
    unsigned short MinorVersion; // Size=2 Offset=10
    unsigned long Type; // Size=4 Offset=12
    unsigned long SizeOfData; // Size=4 Offset=16
    unsigned long AddressOfRawData; // Size=4 Offset=20
    unsigned long PointerToRawData; // Size=4 Offset=24
} IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY;
typedef struct pvalueA // Size=16
{
    char * pv_valuename; // Size=4 Offset=0
    int pv_valuelen; // Size=4 Offset=4
    void * pv_value_context; // Size=4 Offset=8
    unsigned long pv_type; // Size=4 Offset=12
} *PpvalueA;
typedef struct _STORAGE_BUS_RESET_REQUEST // Size=1
{
    unsigned char PathId; // Size=1 Offset=0
} STORAGE_BUS_RESET_REQUEST, *PSTORAGE_BUS_RESET_REQUEST;
typedef struct _PRINTER_INFO_4W // Size=12
{
    unsigned short * pPrinterName; // Size=4 Offset=0
    unsigned short * pServerName; // Size=4 Offset=4
    unsigned long Attributes; // Size=4 Offset=8
} PRINTER_INFO_4W, *PPRINTER_INFO_4W;
typedef struct IPropertySetStorage // Size=4
{
} *PIPropertySetStorage;
typedef struct HCONV__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHCONV__;
typedef struct HSZ__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHSZ__;
typedef struct HCONVLIST__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHCONVLIST__;
typedef struct IEnumSTATPROPSETSTG // Size=4
{
} *PIEnumSTATPROPSETSTG;
typedef struct IWrappedProtocol // Size=4
{
} *PIWrappedProtocol;
typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF // Size=18
{
    unsigned char bAuxType; // Size=1 Offset=0
    unsigned char bReserved; // Size=1 Offset=1
    unsigned long SymbolTableIndex; // Size=4 Offset=2
    unsigned char rgbReserved[12]; // Size=12 Offset=6
} *PIMAGE_AUX_SYMBOL_TOKEN_DEF;
typedef struct tagLAYERPLANEDESCRIPTOR // Size=32
{
    unsigned short nSize; // Size=2 Offset=0
    unsigned short nVersion; // Size=2 Offset=2
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned char iPixelType; // Size=1 Offset=8
    unsigned char cColorBits; // Size=1 Offset=9
    unsigned char cRedBits; // Size=1 Offset=10
    unsigned char cRedShift; // Size=1 Offset=11
    unsigned char cGreenBits; // Size=1 Offset=12
    unsigned char cGreenShift; // Size=1 Offset=13
    unsigned char cBlueBits; // Size=1 Offset=14
    unsigned char cBlueShift; // Size=1 Offset=15
    unsigned char cAlphaBits; // Size=1 Offset=16
    unsigned char cAlphaShift; // Size=1 Offset=17
    unsigned char cAccumBits; // Size=1 Offset=18
    unsigned char cAccumRedBits; // Size=1 Offset=19
    unsigned char cAccumGreenBits; // Size=1 Offset=20
    unsigned char cAccumBlueBits; // Size=1 Offset=21
    unsigned char cAccumAlphaBits; // Size=1 Offset=22
    unsigned char cDepthBits; // Size=1 Offset=23
    unsigned char cStencilBits; // Size=1 Offset=24
    unsigned char cAuxBuffers; // Size=1 Offset=25
    unsigned char iLayerPlane; // Size=1 Offset=26
    unsigned char bReserved; // Size=1 Offset=27
    unsigned long crTransparent; // Size=4 Offset=28
} *PtagLAYERPLANEDESCRIPTOR;
typedef struct tagMCI_WAVE_DELETE_PARMS // Size=12
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwFrom; // Size=4 Offset=4
    unsigned long dwTo; // Size=4 Offset=8
} *PtagMCI_WAVE_DELETE_PARMS;
typedef struct _numberfmtW // Size=24
{
    unsigned int NumDigits; // Size=4 Offset=0
    unsigned int LeadingZero; // Size=4 Offset=4
    unsigned int Grouping; // Size=4 Offset=8
    unsigned short * lpDecimalSep; // Size=4 Offset=12
    unsigned short * lpThousandSep; // Size=4 Offset=16
    unsigned int NegativeOrder; // Size=4 Offset=20
} numberfmtW, *PnumberfmtW;
typedef struct _CRYPT_PASSWORD_CREDENTIALSA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    char * pszUsername; // Size=4 Offset=4
    char * pszPassword; // Size=4 Offset=8
} CRYPT_PASSWORD_CREDENTIALSA, *PCRYPT_PASSWORD_CREDENTIALSA;
typedef struct IParseDisplayName // Size=4
{
} *PIParseDisplayName;
typedef struct IMoniker // Size=4
{
} *PIMoniker;
typedef struct _PRINTPROCESSOR_CAPS_1 // Size=16
{
    unsigned long dwLevel; // Size=4 Offset=0
    unsigned long dwNupOptions; // Size=4 Offset=4
    unsigned long dwPageOrderFlags; // Size=4 Offset=8
    unsigned long dwNumberOfCopies; // Size=4 Offset=12
} PRINTPROCESSOR_CAPS_1, *PPRINTPROCESSOR_CAPS_1;
typedef struct _PORT_INFO_3A // Size=12
{
    unsigned long dwStatus; // Size=4 Offset=0
    char * pszStatus; // Size=4 Offset=4
    unsigned long dwSeverity; // Size=4 Offset=8
} PORT_INFO_3A, *PPORT_INFO_3A;
typedef union _IMAGE_LINENUMBER::__unnamed // Size=4
{
    unsigned long SymbolTableIndex; // Size=4 Offset=0
    unsigned long VirtualAddress; // Size=4 Offset=0
} IMAGE_LINENUMBER::__unnamed, *PIMAGE_LINENUMBER::__unnamed;
typedef struct tagMIXERLINEA::__unnamed // Size=48
{
    unsigned long dwType; // Size=4 Offset=0
    unsigned long dwDeviceID; // Size=4 Offset=4
    unsigned short wMid; // Size=2 Offset=8
    unsigned short wPid; // Size=2 Offset=10
    unsigned int vDriverVersion; // Size=4 Offset=12
    char szPname[32]; // Size=32 Offset=16
} *PtagMIXERLINEA::__unnamed;
typedef struct _MONITOR_INFO_1A // Size=4
{
    char * pName; // Size=4 Offset=0
} MONITOR_INFO_1A, *PMONITOR_INFO_1A;
typedef struct tagNEWTEXTMETRICA // Size=72
{
    long tmHeight; // Size=4 Offset=0
    long tmAscent; // Size=4 Offset=4
    long tmDescent; // Size=4 Offset=8
    long tmInternalLeading; // Size=4 Offset=12
    long tmExternalLeading; // Size=4 Offset=16
    long tmAveCharWidth; // Size=4 Offset=20
    long tmMaxCharWidth; // Size=4 Offset=24
    long tmWeight; // Size=4 Offset=28
    long tmOverhang; // Size=4 Offset=32
    long tmDigitizedAspectX; // Size=4 Offset=36
    long tmDigitizedAspectY; // Size=4 Offset=40
    unsigned char tmFirstChar; // Size=1 Offset=44
    unsigned char tmLastChar; // Size=1 Offset=45
    unsigned char tmDefaultChar; // Size=1 Offset=46
    unsigned char tmBreakChar; // Size=1 Offset=47
    unsigned char tmItalic; // Size=1 Offset=48
    unsigned char tmUnderlined; // Size=1 Offset=49
    unsigned char tmStruckOut; // Size=1 Offset=50
    unsigned char tmPitchAndFamily; // Size=1 Offset=51
    unsigned char tmCharSet; // Size=1 Offset=52
    unsigned long ntmFlags; // Size=4 Offset=56
    unsigned int ntmSizeEM; // Size=4 Offset=60
    unsigned int ntmCellHeight; // Size=4 Offset=64
    unsigned int ntmAvgWidth; // Size=4 Offset=68
} *PtagNEWTEXTMETRICA;
typedef struct _DISPLAY_DEVICEA // Size=424
{
    unsigned long cb; // Size=4 Offset=0
    char DeviceName[32]; // Size=32 Offset=4
    char DeviceString[128]; // Size=128 Offset=36
    unsigned long StateFlags; // Size=4 Offset=164
    char DeviceID[128]; // Size=128 Offset=168
    char DeviceKey[128]; // Size=128 Offset=296
} DISPLAY_DEVICEA, *PDISPLAY_DEVICEA;
typedef struct _PRINTER_INFO_6 // Size=4
{
    unsigned long dwStatus; // Size=4 Offset=0
} PRINTER_INFO_6, *PPRINTER_INFO_6;
typedef struct AsyncIPipeDouble // Size=4
{
} *PAsyncIPipeDouble;
typedef struct _WSAPROTOCOLCHAIN // Size=32
{
    int ChainLen; // Size=4 Offset=0
    unsigned long ChainEntries[7]; // Size=28 Offset=4
} WSAPROTOCOLCHAIN, *PWSAPROTOCOLCHAIN;
typedef struct _IMAGE_DEBUG_MISC // Size=16
{
    unsigned long DataType; // Size=4 Offset=0
    unsigned long Length; // Size=4 Offset=4
    unsigned char Unicode; // Size=1 Offset=8
    unsigned char Reserved[3]; // Size=3 Offset=9
    unsigned char Data[1]; // Size=1 Offset=12
} IMAGE_DEBUG_MISC, *PIMAGE_DEBUG_MISC;
typedef struct _FILESYSTEM_STATISTICS // Size=56
{
    unsigned short FileSystemType; // Size=2 Offset=0
    unsigned short Version; // Size=2 Offset=2
    unsigned long SizeOfCompleteStructure; // Size=4 Offset=4
    unsigned long UserFileReads; // Size=4 Offset=8
    unsigned long UserFileReadBytes; // Size=4 Offset=12
    unsigned long UserDiskReads; // Size=4 Offset=16
    unsigned long UserFileWrites; // Size=4 Offset=20
    unsigned long UserFileWriteBytes; // Size=4 Offset=24
    unsigned long UserDiskWrites; // Size=4 Offset=28
    unsigned long MetaDataReads; // Size=4 Offset=32
    unsigned long MetaDataReadBytes; // Size=4 Offset=36
    unsigned long MetaDataDiskReads; // Size=4 Offset=40
    unsigned long MetaDataWrites; // Size=4 Offset=44
    unsigned long MetaDataWriteBytes; // Size=4 Offset=48
    unsigned long MetaDataDiskWrites; // Size=4 Offset=52
} FILESYSTEM_STATISTICS, *PFILESYSTEM_STATISTICS;
typedef struct HENHMETAFILE__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHENHMETAFILE__;
typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY // Size=20
{
    unsigned long BeginAddress; // Size=4 Offset=0
    unsigned long EndAddress; // Size=4 Offset=4
    unsigned long ExceptionHandler; // Size=4 Offset=8
    unsigned long HandlerData; // Size=4 Offset=12
    unsigned long PrologEndAddress; // Size=4 Offset=16
} IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
typedef struct IPersistStream // Size=4
{
} *PIPersistStream;
typedef struct IEnumMoniker // Size=4
{
} *PIEnumMoniker;
typedef struct tagSAFEARRAYBOUND // Size=8
{
    unsigned long cElements; // Size=4 Offset=0
    long lLbound; // Size=4 Offset=4
} *PtagSAFEARRAYBOUND;
typedef struct _OSVERSIONINFOW // Size=276
{
    unsigned long dwOSVersionInfoSize; // Size=4 Offset=0
    unsigned long dwMajorVersion; // Size=4 Offset=4
    unsigned long dwMinorVersion; // Size=4 Offset=8
    unsigned long dwBuildNumber; // Size=4 Offset=12
    unsigned long dwPlatformId; // Size=4 Offset=16
    unsigned short szCSDVersion[128]; // Size=256 Offset=20
} OSVERSIONINFOW, *POSVERSIONINFOW;
typedef struct tagRECONVERTSTRING // Size=32
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwVersion; // Size=4 Offset=4
    unsigned long dwStrLen; // Size=4 Offset=8
    unsigned long dwStrOffset; // Size=4 Offset=12
    unsigned long dwCompStrLen; // Size=4 Offset=16
    unsigned long dwCompStrOffset; // Size=4 Offset=20
    unsigned long dwTargetStrLen; // Size=4 Offset=24
    unsigned long dwTargetStrOffset; // Size=4 Offset=28
} *PtagRECONVERTSTRING;
typedef struct _EXCEPTION_RECORD32 // Size=80
{
    unsigned long ExceptionCode; // Size=4 Offset=0
    unsigned long ExceptionFlags; // Size=4 Offset=4
    unsigned long ExceptionRecord; // Size=4 Offset=8
    unsigned long ExceptionAddress; // Size=4 Offset=12
    unsigned long NumberParameters; // Size=4 Offset=16
    unsigned long ExceptionInformation[15]; // Size=60 Offset=20
} EXCEPTION_RECORD32, *PEXCEPTION_RECORD32;
typedef struct _CRYPT_ENCODE_PARA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    void * ( * pfnAlloc)(unsigned int); // Size=4 Offset=4
    void ( * pfnFree)(void *); // Size=4 Offset=8
} CRYPT_ENCODE_PARA, *PCRYPT_ENCODE_PARA;
typedef struct _DOC_INFO_3W // Size=16
{
    unsigned short * pDocName; // Size=4 Offset=0
    unsigned short * pOutputFile; // Size=4 Offset=4
    unsigned short * pDatatype; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
} DOC_INFO_3W, *PDOC_INFO_3W;
typedef struct IAddrExclusionControl // Size=4
{
} *PIAddrExclusionControl;
typedef struct IPrintDialogServices // Size=4
{
} *PIPrintDialogServices;
typedef struct _CERT_TEMPLATE_EXT // Size=16
{
    char * pszObjId; // Size=4 Offset=0
    unsigned long dwMajorVersion; // Size=4 Offset=4
    int fMinorVersion; // Size=4 Offset=8
    unsigned long dwMinorVersion; // Size=4 Offset=12
} CERT_TEMPLATE_EXT, *PCERT_TEMPLATE_EXT;
typedef struct _STARTUPINFOW // Size=68
{
    unsigned long cb; // Size=4 Offset=0
    unsigned short * lpReserved; // Size=4 Offset=4
    unsigned short * lpDesktop; // Size=4 Offset=8
    unsigned short * lpTitle; // Size=4 Offset=12
    unsigned long dwX; // Size=4 Offset=16
    unsigned long dwY; // Size=4 Offset=20
    unsigned long dwXSize; // Size=4 Offset=24
    unsigned long dwYSize; // Size=4 Offset=28
    unsigned long dwXCountChars; // Size=4 Offset=32
    unsigned long dwYCountChars; // Size=4 Offset=36
    unsigned long dwFillAttribute; // Size=4 Offset=40
    unsigned long dwFlags; // Size=4 Offset=44
    unsigned short wShowWindow; // Size=2 Offset=48
    unsigned short cbReserved2; // Size=2 Offset=50
    unsigned char * lpReserved2; // Size=4 Offset=52
    void * hStdInput; // Size=4 Offset=56
    void * hStdOutput; // Size=4 Offset=60
    void * hStdError; // Size=4 Offset=64
} STARTUPINFOW, *PSTARTUPINFOW;
typedef struct tagSTICKYKEYS // Size=8
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
} *PtagSTICKYKEYS;
typedef struct tagMCI_SEQ_SET_PARMS // Size=32
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwTimeFormat; // Size=4 Offset=4
    unsigned long dwAudio; // Size=4 Offset=8
    unsigned long dwTempo; // Size=4 Offset=12
    unsigned long dwPort; // Size=4 Offset=16
    unsigned long dwSlave; // Size=4 Offset=20
    unsigned long dwMaster; // Size=4 Offset=24
    unsigned long dwOffset; // Size=4 Offset=28
} *PtagMCI_SEQ_SET_PARMS;
typedef struct _DRIVER_INFO_2W // Size=24
{
    unsigned long cVersion; // Size=4 Offset=0
    unsigned short * pName; // Size=4 Offset=4
    unsigned short * pEnvironment; // Size=4 Offset=8
    unsigned short * pDriverPath; // Size=4 Offset=12
    unsigned short * pDataFile; // Size=4 Offset=16
    unsigned short * pConfigFile; // Size=4 Offset=20
} DRIVER_INFO_2W, *PDRIVER_INFO_2W;
typedef struct _DRIVER_INFO_3A // Size=40
{
    unsigned long cVersion; // Size=4 Offset=0
    char * pName; // Size=4 Offset=4
    char * pEnvironment; // Size=4 Offset=8
    char * pDriverPath; // Size=4 Offset=12
    char * pDataFile; // Size=4 Offset=16
    char * pConfigFile; // Size=4 Offset=20
    char * pHelpFile; // Size=4 Offset=24
    char * pDependentFiles; // Size=4 Offset=28
    char * pMonitorName; // Size=4 Offset=32
    char * pDefaultDataType; // Size=4 Offset=36
} DRIVER_INFO_3A, *PDRIVER_INFO_3A;
typedef struct _PORT_INFO_2W // Size=20
{
    unsigned short * pPortName; // Size=4 Offset=0
    unsigned short * pMonitorName; // Size=4 Offset=4
    unsigned short * pDescription; // Size=4 Offset=8
    unsigned long fPortType; // Size=4 Offset=12
    unsigned long Reserved; // Size=4 Offset=16
} PORT_INFO_2W, *PPORT_INFO_2W;
typedef struct tagRemFORMATETC // Size=20
{
    unsigned long cfFormat; // Size=4 Offset=0
    unsigned long ptd; // Size=4 Offset=4
    unsigned long dwAspect; // Size=4 Offset=8
    long lindex; // Size=4 Offset=12
    unsigned long tymed; // Size=4 Offset=16
} *PtagRemFORMATETC;
typedef struct IPersistStorage // Size=4
{
} *PIPersistStorage;
typedef struct tagMOUSEKEYS // Size=28
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned long iMaxSpeed; // Size=4 Offset=8
    unsigned long iTimeToMaxSpeed; // Size=4 Offset=12
    unsigned long iCtrlSpeed; // Size=4 Offset=16
    unsigned long dwReserved1; // Size=4 Offset=20
    unsigned long dwReserved2; // Size=4 Offset=24
} *PtagMOUSEKEYS;
typedef struct tagDDEML_MSG_HOOK_DATA // Size=44
{
    unsigned int uiLo; // Size=4 Offset=0
    unsigned int uiHi; // Size=4 Offset=4
    unsigned long cbData; // Size=4 Offset=8
    unsigned long Data[8]; // Size=32 Offset=12
} *PtagDDEML_MSG_HOOK_DATA;
typedef struct HACCEL__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHACCEL__;
typedef struct _RPC_POLICY // Size=12
{
    unsigned int Length; // Size=4 Offset=0
    unsigned long EndpointFlags; // Size=4 Offset=4
    unsigned long NICFlags; // Size=4 Offset=8
} RPC_POLICY, *PRPC_POLICY;
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY // Size=8
{
    unsigned long FuncStart; // Size=4 Offset=0
    struct
    {
        unsigned long PrologLen: 8; // Size=4 Offset=4 BitOffset=0 BitCount=8
        unsigned long FuncLen: 22; // Size=4 Offset=4 BitOffset=8 BitCount=22
        unsigned long ThirtyTwoBit: 1; // Size=4 Offset=4 BitOffset=30 BitCount=1
        unsigned long ExceptionFlag: 1; // Size=4 Offset=4 BitOffset=31 BitCount=1
    };
} IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;
typedef struct _REASSIGN_BLOCKS // Size=8
{
    unsigned short Reserved; // Size=2 Offset=0
    unsigned short Count; // Size=2 Offset=2
    unsigned long BlockNumber[1]; // Size=4 Offset=4
} REASSIGN_BLOCKS, *PREASSIGN_BLOCKS;
typedef struct tagSERIALKEYSA // Size=28
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    char * lpszActivePort; // Size=4 Offset=8
    char * lpszPort; // Size=4 Offset=12
    unsigned int iBaudRate; // Size=4 Offset=16
    unsigned int iPortState; // Size=4 Offset=20
    unsigned int iActive; // Size=4 Offset=24
} *PtagSERIALKEYSA;
typedef struct IInternetPriority // Size=4
{
} *PIInternetPriority;
typedef struct midiproptimediv_tag // Size=8
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwTimeDiv; // Size=4 Offset=4
} *Pmidiproptimediv_tag;
typedef struct _SESSION_HEADER // Size=4
{
    unsigned char sess_name; // Size=1 Offset=0
    unsigned char num_sess; // Size=1 Offset=1
    unsigned char rcv_dg_outstanding; // Size=1 Offset=2
    unsigned char rcv_any_outstanding; // Size=1 Offset=3
} SESSION_HEADER, *PSESSION_HEADER;
typedef struct IErrorLog // Size=4
{
} *PIErrorLog;
typedef struct _IMAGE_VXD_HEADER // Size=196
{
    unsigned short e32_magic; // Size=2 Offset=0
    unsigned char e32_border; // Size=1 Offset=2
    unsigned char e32_worder; // Size=1 Offset=3
    unsigned long e32_level; // Size=4 Offset=4
    unsigned short e32_cpu; // Size=2 Offset=8
    unsigned short e32_os; // Size=2 Offset=10
    unsigned long e32_ver; // Size=4 Offset=12
    unsigned long e32_mflags; // Size=4 Offset=16
    unsigned long e32_mpages; // Size=4 Offset=20
    unsigned long e32_startobj; // Size=4 Offset=24
    unsigned long e32_eip; // Size=4 Offset=28
    unsigned long e32_stackobj; // Size=4 Offset=32
    unsigned long e32_esp; // Size=4 Offset=36
    unsigned long e32_pagesize; // Size=4 Offset=40
    unsigned long e32_lastpagesize; // Size=4 Offset=44
    unsigned long e32_fixupsize; // Size=4 Offset=48
    unsigned long e32_fixupsum; // Size=4 Offset=52
    unsigned long e32_ldrsize; // Size=4 Offset=56
    unsigned long e32_ldrsum; // Size=4 Offset=60
    unsigned long e32_objtab; // Size=4 Offset=64
    unsigned long e32_objcnt; // Size=4 Offset=68
    unsigned long e32_objmap; // Size=4 Offset=72
    unsigned long e32_itermap; // Size=4 Offset=76
    unsigned long e32_rsrctab; // Size=4 Offset=80
    unsigned long e32_rsrccnt; // Size=4 Offset=84
    unsigned long e32_restab; // Size=4 Offset=88
    unsigned long e32_enttab; // Size=4 Offset=92
    unsigned long e32_dirtab; // Size=4 Offset=96
    unsigned long e32_dircnt; // Size=4 Offset=100
    unsigned long e32_fpagetab; // Size=4 Offset=104
    unsigned long e32_frectab; // Size=4 Offset=108
    unsigned long e32_impmod; // Size=4 Offset=112
    unsigned long e32_impmodcnt; // Size=4 Offset=116
    unsigned long e32_impproc; // Size=4 Offset=120
    unsigned long e32_pagesum; // Size=4 Offset=124
    unsigned long e32_datapage; // Size=4 Offset=128
    unsigned long e32_preload; // Size=4 Offset=132
    unsigned long e32_nrestab; // Size=4 Offset=136
    unsigned long e32_cbnrestab; // Size=4 Offset=140
    unsigned long e32_nressum; // Size=4 Offset=144
    unsigned long e32_autodata; // Size=4 Offset=148
    unsigned long e32_debuginfo; // Size=4 Offset=152
    unsigned long e32_debuglen; // Size=4 Offset=156
    unsigned long e32_instpreload; // Size=4 Offset=160
    unsigned long e32_instdemand; // Size=4 Offset=164
    unsigned long e32_heapsize; // Size=4 Offset=168
    unsigned char e32_res3[12]; // Size=12 Offset=172
    unsigned long e32_winresoff; // Size=4 Offset=184
    unsigned long e32_winreslen; // Size=4 Offset=188
    unsigned short e32_devid; // Size=2 Offset=192
    unsigned short e32_ddkver; // Size=2 Offset=194
} IMAGE_VXD_HEADER, *PIMAGE_VXD_HEADER;
typedef struct _CERT_POLICY_MAPPING // Size=8
{
    char * pszIssuerDomainPolicy; // Size=4 Offset=0
    char * pszSubjectDomainPolicy; // Size=4 Offset=4
} CERT_POLICY_MAPPING, *PCERT_POLICY_MAPPING;
typedef struct ISynchronizeHandle // Size=4
{
} *PISynchronizeHandle;
typedef struct ISynchronizeEvent // Size=4
{
} *PISynchronizeEvent;
typedef struct tagMULTIKEYHELPA // Size=8
{
    unsigned long mkSize; // Size=4 Offset=0
    char mkKeylist; // Size=1 Offset=4
    char szKeyphrase[1]; // Size=1 Offset=5
} *PtagMULTIKEYHELPA;
typedef struct _PROCESS_INFORMATION // Size=16
{
    void * hProcess; // Size=4 Offset=0
    void * hThread; // Size=4 Offset=4
    unsigned long dwProcessId; // Size=4 Offset=8
    unsigned long dwThreadId; // Size=4 Offset=12
} PROCESS_INFORMATION, *PPROCESS_INFORMATION;
typedef struct _CERT_CHAIN_POLICY_PARA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    void * pvExtraPolicyPara; // Size=4 Offset=8
} CERT_CHAIN_POLICY_PARA, *PCERT_CHAIN_POLICY_PARA;
typedef struct IViewObject // Size=4
{
} *PIViewObject;
typedef struct _CERT_POLICY_CONSTRAINTS_INFO // Size=16
{
    int fRequireExplicitPolicy; // Size=4 Offset=0
    unsigned long dwRequireExplicitPolicySkipCerts; // Size=4 Offset=4
    int fInhibitPolicyMapping; // Size=4 Offset=8
    unsigned long dwInhibitPolicyMappingSkipCerts; // Size=4 Offset=12
} CERT_POLICY_CONSTRAINTS_INFO, *PCERT_POLICY_CONSTRAINTS_INFO;
typedef struct _MONITOR_INFO_2W // Size=12
{
    unsigned short * pName; // Size=4 Offset=0
    unsigned short * pEnvironment; // Size=4 Offset=4
    unsigned short * pDLLName; // Size=4 Offset=8
} MONITOR_INFO_2W, *PMONITOR_INFO_2W;
typedef struct _MMCKINFO // Size=20
{
    unsigned long ckid; // Size=4 Offset=0
    unsigned long cksize; // Size=4 Offset=4
    unsigned long fccType; // Size=4 Offset=8
    unsigned long dwDataOffset; // Size=4 Offset=12
    unsigned long dwFlags; // Size=4 Offset=16
} MMCKINFO, *PMMCKINFO;
typedef struct _PRINTER_ENUM_VALUESA // Size=20
{
    char * pValueName; // Size=4 Offset=0
    unsigned long cbValueName; // Size=4 Offset=4
    unsigned long dwType; // Size=4 Offset=8
    unsigned char * pData; // Size=4 Offset=12
    unsigned long cbData; // Size=4 Offset=16
} PRINTER_ENUM_VALUESA, *PPRINTER_ENUM_VALUESA;
typedef struct _CRYPT_PASSWORD_CREDENTIALSW // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned short * pszUsername; // Size=4 Offset=4
    unsigned short * pszPassword; // Size=4 Offset=8
} CRYPT_PASSWORD_CREDENTIALSW, *PCRYPT_PASSWORD_CREDENTIALSW;
typedef struct _OSVERSIONINFOEXA // Size=156
{
    unsigned long dwOSVersionInfoSize; // Size=4 Offset=0
    unsigned long dwMajorVersion; // Size=4 Offset=4
    unsigned long dwMinorVersion; // Size=4 Offset=8
    unsigned long dwBuildNumber; // Size=4 Offset=12
    unsigned long dwPlatformId; // Size=4 Offset=16
    char szCSDVersion[128]; // Size=128 Offset=20
    unsigned short wServicePackMajor; // Size=2 Offset=148
    unsigned short wServicePackMinor; // Size=2 Offset=150
    unsigned short wSuiteMask; // Size=2 Offset=152
    unsigned char wProductType; // Size=1 Offset=154
    unsigned char wReserved; // Size=1 Offset=155
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA;
typedef struct tMIXERCONTROLDETAILS_SIGNED // Size=4
{
    long lValue; // Size=4 Offset=0
} *PtMIXERCONTROLDETAILS_SIGNED;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER // Size=32
{
    unsigned long NumberOfSymbols; // Size=4 Offset=0
    unsigned long LvaToFirstSymbol; // Size=4 Offset=4
    unsigned long NumberOfLinenumbers; // Size=4 Offset=8
    unsigned long LvaToFirstLinenumber; // Size=4 Offset=12
    unsigned long RvaToFirstByteOfCode; // Size=4 Offset=16
    unsigned long RvaToLastByteOfCode; // Size=4 Offset=20
    unsigned long RvaToFirstByteOfData; // Size=4 Offset=24
    unsigned long RvaToLastByteOfData; // Size=4 Offset=28
} IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER;
typedef struct _ImageArchitectureHeader // Size=8
{
    struct
    {
        unsigned int AmaskValue: 1; // Size=4 Offset=0 BitOffset=0 BitCount=1
        unsigned int AmaskShift: 8; // Size=4 Offset=0 BitOffset=8 BitCount=8
    };
    unsigned long FirstEntryRVA; // Size=4 Offset=4
} ImageArchitectureHeader, *PImageArchitectureHeader;
typedef struct _SYSTEM_POWER_STATUS // Size=12
{
    unsigned char ACLineStatus; // Size=1 Offset=0
    unsigned char BatteryFlag; // Size=1 Offset=1
    unsigned char BatteryLifePercent; // Size=1 Offset=2
    unsigned char Reserved1; // Size=1 Offset=3
    unsigned long BatteryLifeTime; // Size=4 Offset=4
    unsigned long BatteryFullLifeTime; // Size=4 Offset=8
} SYSTEM_POWER_STATUS, *PSYSTEM_POWER_STATUS;
typedef struct _IMAGE_SYMBOL::__unnamed::__unnamed // Size=8
{
    unsigned long Short; // Size=4 Offset=0
    unsigned long Long; // Size=4 Offset=4
} IMAGE_SYMBOL::__unnamed::__unnamed, *PIMAGE_SYMBOL::__unnamed::__unnamed;
typedef struct IEncodingFilterFactory // Size=4
{
} *PIEncodingFilterFactory;
typedef struct _BYTE_SIZEDARR // Size=8
{
    unsigned long clSize; // Size=4 Offset=0
    unsigned char * pData; // Size=4 Offset=4
} BYTE_SIZEDARR, *PBYTE_SIZEDARR;
typedef struct _DRIVER_INFO_3W // Size=40
{
    unsigned long cVersion; // Size=4 Offset=0
    unsigned short * pName; // Size=4 Offset=4
    unsigned short * pEnvironment; // Size=4 Offset=8
    unsigned short * pDriverPath; // Size=4 Offset=12
    unsigned short * pDataFile; // Size=4 Offset=16
    unsigned short * pConfigFile; // Size=4 Offset=20
    unsigned short * pHelpFile; // Size=4 Offset=24
    unsigned short * pDependentFiles; // Size=4 Offset=28
    unsigned short * pMonitorName; // Size=4 Offset=32
    unsigned short * pDefaultDataType; // Size=4 Offset=36
} DRIVER_INFO_3W, *PDRIVER_INFO_3W;
typedef struct IXMLDOMEntityReference // Size=4
{
} *PIXMLDOMEntityReference;
typedef struct _WSABUF // Size=8
{
    unsigned long len; // Size=4 Offset=0
    char * buf; // Size=4 Offset=4
} WSABUF, *PWSABUF;
typedef struct HWAVEIN__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHWAVEIN__;
typedef class MSG_Z2CG_DERBY_RACE_END // Size=8
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    int iDerbyIndex; // Size=4 Offset=4
} *PMSG_Z2CG_DERBY_RACE_END;
typedef struct HBRUSH__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHBRUSH__;
typedef struct tagMIXERCAPSA // Size=48
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned long fdwSupport; // Size=4 Offset=40
    unsigned long cDestinations; // Size=4 Offset=44
} *PtagMIXERCAPSA;
typedef struct joyinfoex_tag // Size=52
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned long dwXpos; // Size=4 Offset=8
    unsigned long dwYpos; // Size=4 Offset=12
    unsigned long dwZpos; // Size=4 Offset=16
    unsigned long dwRpos; // Size=4 Offset=20
    unsigned long dwUpos; // Size=4 Offset=24
    unsigned long dwVpos; // Size=4 Offset=28
    unsigned long dwButtons; // Size=4 Offset=32
    unsigned long dwButtonNumber; // Size=4 Offset=36
    unsigned long dwPOV; // Size=4 Offset=40
    unsigned long dwReserved1; // Size=4 Offset=44
    unsigned long dwReserved2; // Size=4 Offset=48
} *Pjoyinfoex_tag;
typedef struct _PRINTER_INFO_5W // Size=20
{
    unsigned short * pPrinterName; // Size=4 Offset=0
    unsigned short * pPortName; // Size=4 Offset=4
    unsigned long Attributes; // Size=4 Offset=8
    unsigned long DeviceNotSelectedTimeout; // Size=4 Offset=12
    unsigned long TransmissionRetryTimeout; // Size=4 Offset=16
} PRINTER_INFO_5W, *PPRINTER_INFO_5W;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed // Size=1
{
    unsigned char Flags; // Size=1 Offset=0
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION::__unnamed::__unnamed;
typedef struct tagCAUL // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    unsigned long * pElems; // Size=4 Offset=4
} *PtagCAUL;
typedef struct _TAPE_WMI_OPERATIONS // Size=12
{
    unsigned long Method; // Size=4 Offset=0
    unsigned long DataBufferSize; // Size=4 Offset=4
    void * DataBuffer; // Size=4 Offset=8
} TAPE_WMI_OPERATIONS, *PTAPE_WMI_OPERATIONS;
typedef struct tagMCI_SYSINFO_PARMSW // Size=20
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned short * lpstrReturn; // Size=4 Offset=4
    unsigned long dwRetSize; // Size=4 Offset=8
    unsigned long dwNumber; // Size=4 Offset=12
    unsigned int wDeviceType; // Size=4 Offset=16
} *PtagMCI_SYSINFO_PARMSW;
typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA // Size=8
{
    unsigned long cOID; // Size=4 Offset=0
    char * * rgpszOID; // Size=4 Offset=4
} CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
typedef struct ISurrogate // Size=4
{
} *PISurrogate;
typedef union _IMAGE_THUNK_DATA32::__unnamed // Size=4
{
    unsigned long ForwarderString; // Size=4 Offset=0
    unsigned long Function; // Size=4 Offset=0
    unsigned long Ordinal; // Size=4 Offset=0
    unsigned long AddressOfData; // Size=4 Offset=0
} IMAGE_THUNK_DATA32::__unnamed, *PIMAGE_THUNK_DATA32::__unnamed;
typedef struct tagBSTRBLOB // Size=8
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned char * pData; // Size=4 Offset=4
} *PtagBSTRBLOB;
typedef struct HFONT__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHFONT__;
typedef struct _PRINTER_INFO_7A // Size=8
{
    char * pszObjectGUID; // Size=4 Offset=0
    unsigned long dwAction; // Size=4 Offset=4
} PRINTER_INFO_7A, *PPRINTER_INFO_7A;
typedef struct tagDVTARGETDEVICE // Size=16
{
    unsigned long tdSize; // Size=4 Offset=0
    unsigned short tdDriverNameOffset; // Size=2 Offset=4
    unsigned short tdDeviceNameOffset; // Size=2 Offset=6
    unsigned short tdPortNameOffset; // Size=2 Offset=8
    unsigned short tdExtDevmodeOffset; // Size=2 Offset=10
    unsigned char tdData[1]; // Size=1 Offset=12
} *PtagDVTARGETDEVICE;
typedef struct _PMD // Size=12
{
    int mdisp; // Size=4 Offset=0
    int pdisp; // Size=4 Offset=4
    int vdisp; // Size=4 Offset=8
} PMD, *PPMD;
typedef struct tagMOUSEMOVEPOINT // Size=16
{
    int x; // Size=4 Offset=0
    int y; // Size=4 Offset=4
    unsigned long time; // Size=4 Offset=8
    unsigned long dwExtraInfo; // Size=4 Offset=12
} *PtagMOUSEMOVEPOINT;
typedef struct tagHIGHCONTRASTA // Size=12
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    char * lpszDefaultScheme; // Size=4 Offset=8
} *PtagHIGHCONTRASTA;
typedef struct _WSANSClassInfoW // Size=20
{
    unsigned short * lpszName; // Size=4 Offset=0
    unsigned long dwNameSpace; // Size=4 Offset=4
    unsigned long dwValueType; // Size=4 Offset=8
    unsigned long dwValueSize; // Size=4 Offset=12
    void * lpValue; // Size=4 Offset=16
} WSANSClassInfoW, *PWSANSClassInfoW;
typedef struct _OSVERSIONINFOA // Size=148
{
    unsigned long dwOSVersionInfoSize; // Size=4 Offset=0
    unsigned long dwMajorVersion; // Size=4 Offset=4
    unsigned long dwMinorVersion; // Size=4 Offset=8
    unsigned long dwBuildNumber; // Size=4 Offset=12
    unsigned long dwPlatformId; // Size=4 Offset=16
    char szCSDVersion[128]; // Size=128 Offset=20
} OSVERSIONINFOA, *POSVERSIONINFOA;
typedef struct _CERT_KEY_CONTEXT // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    unsigned long dwKeySpec; // Size=4 Offset=8
} CERT_KEY_CONTEXT, *PCERT_KEY_CONTEXT;
typedef struct _TAPE_GET_STATISTICS // Size=4
{
    unsigned long Operation; // Size=4 Offset=0
} TAPE_GET_STATISTICS, *PTAPE_GET_STATISTICS;
typedef struct _BINARY_CONTAINER // Size=8
{
    unsigned long cbBuf; // Size=4 Offset=0
    unsigned char * pData; // Size=4 Offset=4
} BINARY_CONTAINER, *PBINARY_CONTAINER;
typedef struct _PROVIDOR_INFO_1W // Size=12
{
    unsigned short * pName; // Size=4 Offset=0
    unsigned short * pEnvironment; // Size=4 Offset=4
    unsigned short * pDLLName; // Size=4 Offset=8
} PROVIDOR_INFO_1W, *PPROVIDOR_INFO_1W;
typedef struct IDataFilter // Size=4
{
} *PIDataFilter;
typedef struct ITypeLib // Size=4
{
} *PITypeLib;
typedef struct ITypeLib2 // Size=4
{
} *PITypeLib2;
typedef struct _IMAGE_BASE_RELOCATION // Size=8
{
    unsigned long VirtualAddress; // Size=4 Offset=0
    unsigned long SizeOfBlock; // Size=4 Offset=4
} IMAGE_BASE_RELOCATION, *PIMAGE_BASE_RELOCATION;
typedef struct _PERF_COUNTER_DEFINITION // Size=40
{
    unsigned long ByteLength; // Size=4 Offset=0
    unsigned long CounterNameTitleIndex; // Size=4 Offset=4
    unsigned short * CounterNameTitle; // Size=4 Offset=8
    unsigned long CounterHelpTitleIndex; // Size=4 Offset=12
    unsigned short * CounterHelpTitle; // Size=4 Offset=16
    long DefaultScale; // Size=4 Offset=20
    unsigned long DetailLevel; // Size=4 Offset=24
    unsigned long CounterType; // Size=4 Offset=28
    unsigned long CounterSize; // Size=4 Offset=32
    unsigned long CounterOffset; // Size=4 Offset=36
} PERF_COUNTER_DEFINITION, *PPERF_COUNTER_DEFINITION;
typedef struct _HTTPSPolicyCallbackData // Size=16
{
    union
    {
        unsigned long cbStruct; // Size=4 Offset=0
        unsigned long cbSize; // Size=4 Offset=0
    };
    unsigned long dwAuthType; // Size=4 Offset=4
    unsigned long fdwChecks; // Size=4 Offset=8
    unsigned short * pwszServerName; // Size=4 Offset=12
} HTTPSPolicyCallbackData, *PHTTPSPolicyCallbackData;
typedef struct tagWAVEINCAPSW // Size=80
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned long dwFormats; // Size=4 Offset=72
    unsigned short wChannels; // Size=2 Offset=76
    unsigned short wReserved1; // Size=2 Offset=78
} *PtagWAVEINCAPSW;
typedef struct _SHORT_SIZEDARR // Size=8
{
    unsigned long clSize; // Size=4 Offset=0
    unsigned short * pData; // Size=4 Offset=4
} SHORT_SIZEDARR, *PSHORT_SIZEDARR;
typedef struct _LONG_SIZEDARR // Size=8
{
    unsigned long clSize; // Size=4 Offset=0
    unsigned long * pData; // Size=4 Offset=4
} LONG_SIZEDARR, *PLONG_SIZEDARR;
typedef struct _HYPER_SIZEDARR // Size=8
{
    unsigned long clSize; // Size=4 Offset=0
    __int64 * pData; // Size=4 Offset=4
} HYPER_SIZEDARR, *PHYPER_SIZEDARR;
typedef struct WSAData // Size=400
{
    unsigned short wVersion; // Size=2 Offset=0
    unsigned short wHighVersion; // Size=2 Offset=2
    char szDescription[257]; // Size=257 Offset=4
    char szSystemStatus[129]; // Size=129 Offset=261
    unsigned short iMaxSockets; // Size=2 Offset=390
    unsigned short iMaxUdpDg; // Size=2 Offset=392
    char * lpVendorInfo; // Size=4 Offset=396
} *PWSAData;
typedef struct tagCANDIDATELIST // Size=28
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwStyle; // Size=4 Offset=4
    unsigned long dwCount; // Size=4 Offset=8
    unsigned long dwSelection; // Size=4 Offset=12
    unsigned long dwPageStart; // Size=4 Offset=16
    unsigned long dwPageSize; // Size=4 Offset=20
    unsigned long dwOffset[1]; // Size=4 Offset=24
} *PtagCANDIDATELIST;
typedef struct tagACCESSTIMEOUT // Size=12
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned long iTimeOutMSec; // Size=4 Offset=8
} *PtagACCESSTIMEOUT;
typedef class MSG_CG2Z_DERBY_RACE_INFO // Size=292
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    int iDerbyIndex; // Size=4 Offset=4
    int nVCurvePoint; // Size=4 Offset=8
    float fVCurve[70]; // Size=280 Offset=12
} *PMSG_CG2Z_DERBY_RACE_INFO;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT // Size=8
{
    void * CompletionKey; // Size=4 Offset=0
    void * CompletionPort; // Size=4 Offset=4
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct HWINEVENTHOOK__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHWINEVENTHOOK__;
typedef struct IInternetBindInfo // Size=4
{
} *PIInternetBindInfo;
typedef struct tWAVEFORMATEX // Size=18
{
    unsigned short wFormatTag; // Size=2 Offset=0
    unsigned short nChannels; // Size=2 Offset=2
    unsigned long nSamplesPerSec; // Size=4 Offset=4
    unsigned long nAvgBytesPerSec; // Size=4 Offset=8
    unsigned short nBlockAlign; // Size=2 Offset=12
    unsigned short wBitsPerSample; // Size=2 Offset=14
    unsigned short cbSize; // Size=2 Offset=16
} *PtWAVEFORMATEX;
typedef struct _CMS_KEY_INFO // Size=16
{
    unsigned long dwVersion; // Size=4 Offset=0
    unsigned int Algid; // Size=4 Offset=4
    unsigned char * pbOID; // Size=4 Offset=8
    unsigned long cbOID; // Size=4 Offset=12
} CMS_KEY_INFO, *PCMS_KEY_INFO;
typedef struct _MESSAGE_RESOURCE_ENTRY // Size=6
{
    unsigned short Length; // Size=2 Offset=0
    unsigned short Flags; // Size=2 Offset=2
    unsigned char Text[1]; // Size=1 Offset=4
} MESSAGE_RESOURCE_ENTRY, *PMESSAGE_RESOURCE_ENTRY;
typedef struct tagHIGHCONTRASTW // Size=12
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned short * lpszDefaultScheme; // Size=4 Offset=8
} *PtagHIGHCONTRASTW;
typedef struct tagMCI_LOAD_PARMSA // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    char * lpfilename; // Size=4 Offset=4
} *PtagMCI_LOAD_PARMSA;
typedef struct _PORT_INFO_1W // Size=4
{
    unsigned short * pName; // Size=4 Offset=0
} PORT_INFO_1W, *PPORT_INFO_1W;
typedef struct tagWAVEINCAPSA // Size=48
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned long dwFormats; // Size=4 Offset=40
    unsigned short wChannels; // Size=2 Offset=44
    unsigned short wReserved1; // Size=2 Offset=46
} *PtagWAVEINCAPSA;
typedef struct IDropSource // Size=4
{
} *PIDropSource;
typedef struct _EFS_HASH_BLOB // Size=8
{
    unsigned long cbData; // Size=4 Offset=0
    unsigned char * pbData; // Size=4 Offset=4
} EFS_HASH_BLOB, *PEFS_HASH_BLOB;
typedef struct SYSTEM_BATTERY_STATE // Size=32
{
    unsigned char AcOnLine; // Size=1 Offset=0
    unsigned char BatteryPresent; // Size=1 Offset=1
    unsigned char Charging; // Size=1 Offset=2
    unsigned char Discharging; // Size=1 Offset=3
    unsigned char Spare1[4]; // Size=4 Offset=4
    unsigned long MaxCapacity; // Size=4 Offset=8
    unsigned long RemainingCapacity; // Size=4 Offset=12
    unsigned long Rate; // Size=4 Offset=16
    unsigned long EstimatedTime; // Size=4 Offset=20
    unsigned long DefaultAlert1; // Size=4 Offset=24
    unsigned long DefaultAlert2; // Size=4 Offset=28
} *PSYSTEM_BATTERY_STATE;
typedef struct _nlsversioninfo // Size=12
{
    unsigned long dwNLSVersionInfoSize; // Size=4 Offset=0
    unsigned long dwNLSVersion; // Size=4 Offset=4
    unsigned long dwDefinedVersion; // Size=4 Offset=8
} nlsversioninfo, *Pnlsversioninfo;
typedef struct HMETAFILE__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMETAFILE__;
typedef struct ITypeComp // Size=4
{
} *PITypeComp;
typedef struct ITypeInfo // Size=4
{
} *PITypeInfo;
typedef struct _FOCUS_EVENT_RECORD // Size=4
{
    int bSetFocus; // Size=4 Offset=0
} FOCUS_EVENT_RECORD, *PFOCUS_EVENT_RECORD;
typedef struct tagHELPWININFOW // Size=28
{
    int wStructSize; // Size=4 Offset=0
    int x; // Size=4 Offset=4
    int y; // Size=4 Offset=8
    int dx; // Size=4 Offset=12
    int dy; // Size=4 Offset=16
    int wMax; // Size=4 Offset=20
    unsigned short rgchMember[2]; // Size=4 Offset=24
} *PtagHELPWININFOW;
typedef struct _numberfmtA // Size=24
{
    unsigned int NumDigits; // Size=4 Offset=0
    unsigned int LeadingZero; // Size=4 Offset=4
    unsigned int Grouping; // Size=4 Offset=8
    char * lpDecimalSep; // Size=4 Offset=12
    char * lpThousandSep; // Size=4 Offset=16
    unsigned int NegativeOrder; // Size=4 Offset=20
} numberfmtA, *PnumberfmtA;
typedef struct _CERT_STORE_PROV_FIND_INFO // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwMsgAndCertEncodingType; // Size=4 Offset=4
    unsigned long dwFindFlags; // Size=4 Offset=8
    unsigned long dwFindType; // Size=4 Offset=12
    void * pvFindPara; // Size=4 Offset=16
} CERT_STORE_PROV_FIND_INFO, *PCERT_STORE_PROV_FIND_INFO;
typedef struct tagHANDLETABLE // Size=4
{
    void * objectHandle[1]; // Size=4 Offset=0
} *PtagHANDLETABLE;
typedef struct tagBinaryParam // Size=8
{
    void * Buffer; // Size=4 Offset=0
    short Size; // Size=2 Offset=4
} *PtagBinaryParam;
typedef struct _NTFS_STATISTICS::__unnamed // Size=8
{
    unsigned short Write; // Size=2 Offset=0
    unsigned short Create; // Size=2 Offset=2
    unsigned short SetInfo; // Size=2 Offset=4
    unsigned short Flush; // Size=2 Offset=6
} NTFS_STATISTICS::__unnamed, *PNTFS_STATISTICS::__unnamed;
typedef struct tagSOUNDSENTRYA // Size=48
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned long iFSTextEffect; // Size=4 Offset=8
    unsigned long iFSTextEffectMSec; // Size=4 Offset=12
    unsigned long iFSTextEffectColorBits; // Size=4 Offset=16
    unsigned long iFSGrafEffect; // Size=4 Offset=20
    unsigned long iFSGrafEffectMSec; // Size=4 Offset=24
    unsigned long iFSGrafEffectColor; // Size=4 Offset=28
    unsigned long iWindowsEffect; // Size=4 Offset=32
    unsigned long iWindowsEffectMSec; // Size=4 Offset=36
    char * lpszWindowsEffectDLL; // Size=4 Offset=40
    unsigned long iWindowsEffectOrdinal; // Size=4 Offset=44
} *PtagSOUNDSENTRYA;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY // Size=16
{
    unsigned long OffsetToData; // Size=4 Offset=0
    unsigned long Size; // Size=4 Offset=4
    unsigned long CodePage; // Size=4 Offset=8
    unsigned long Reserved; // Size=4 Offset=12
} IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY;
typedef struct _COMMTIMEOUTS // Size=20
{
    unsigned long ReadIntervalTimeout; // Size=4 Offset=0
    unsigned long ReadTotalTimeoutMultiplier; // Size=4 Offset=4
    unsigned long ReadTotalTimeoutConstant; // Size=4 Offset=8
    unsigned long WriteTotalTimeoutMultiplier; // Size=4 Offset=12
    unsigned long WriteTotalTimeoutConstant; // Size=4 Offset=16
} COMMTIMEOUTS, *PCOMMTIMEOUTS;
typedef struct _EXIT_PROCESS_DEBUG_INFO // Size=4
{
    unsigned long dwExitCode; // Size=4 Offset=0
} EXIT_PROCESS_DEBUG_INFO, *PEXIT_PROCESS_DEBUG_INFO;
typedef struct _SHNAMEMAPPINGA // Size=16
{
    char * pszOldPath; // Size=4 Offset=0
    char * pszNewPath; // Size=4 Offset=4
    int cchOldPath; // Size=4 Offset=8
    int cchNewPath; // Size=4 Offset=12
} SHNAMEMAPPINGA, *PSHNAMEMAPPINGA;
typedef struct _ImageArchitectureEntry // Size=8
{
    unsigned long FixupInstRVA; // Size=4 Offset=0
    unsigned long NewInst; // Size=4 Offset=4
} ImageArchitectureEntry, *PImageArchitectureEntry;
typedef struct IMPORT_OBJECT_HEADER // Size=20
{
    unsigned short Sig1; // Size=2 Offset=0
    unsigned short Sig2; // Size=2 Offset=2
    unsigned short Version; // Size=2 Offset=4
    unsigned short Machine; // Size=2 Offset=6
    unsigned long TimeDateStamp; // Size=4 Offset=8
    unsigned long SizeOfData; // Size=4 Offset=12
    union
    {
        unsigned short Ordinal; // Size=2 Offset=16
        unsigned short Hint; // Size=2 Offset=16
    };
    struct
    {
        unsigned short Type: 2; // Size=2 Offset=18 BitOffset=0 BitCount=2
        unsigned short NameType: 3; // Size=2 Offset=18 BitOffset=2 BitCount=3
        unsigned short Reserved: 11; // Size=2 Offset=18 BitOffset=5 BitCount=11
    };
} *PIMPORT_OBJECT_HEADER;
typedef struct IContinue // Size=4
{
} *PIContinue;
typedef struct tagCAUI // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    unsigned short * pElems; // Size=4 Offset=4
} *PtagCAUI;
typedef struct ICancelMethodCalls // Size=4
{
} *PICancelMethodCalls;
typedef struct IStream // Size=4
{
} *PIStream;
typedef struct tagMONERRSTRUCT // Size=16
{
    unsigned int cb; // Size=4 Offset=0
    unsigned int wLastError; // Size=4 Offset=4
    unsigned long dwTime; // Size=4 Offset=8
    void * hTask; // Size=4 Offset=12
} *PtagMONERRSTRUCT;
typedef struct _PRINTPROCESSOR_INFO_1W // Size=4
{
    unsigned short * pName; // Size=4 Offset=0
} PRINTPROCESSOR_INFO_1W, *PPRINTPROCESSOR_INFO_1W;
typedef struct IServiceProvider // Size=4
{
} *PIServiceProvider;
typedef struct IStdMarshalInfo // Size=4
{
} *PIStdMarshalInfo;
typedef struct _CRYPT_OBJID_TABLE // Size=8
{
    unsigned long dwAlgId; // Size=4 Offset=0
    char * pszObjId; // Size=4 Offset=4
} CRYPT_OBJID_TABLE, *PCRYPT_OBJID_TABLE;
typedef struct _MODEMDEVCAPS // Size=80
{
    unsigned long dwActualSize; // Size=4 Offset=0
    unsigned long dwRequiredSize; // Size=4 Offset=4
    unsigned long dwDevSpecificOffset; // Size=4 Offset=8
    unsigned long dwDevSpecificSize; // Size=4 Offset=12
    unsigned long dwModemProviderVersion; // Size=4 Offset=16
    unsigned long dwModemManufacturerOffset; // Size=4 Offset=20
    unsigned long dwModemManufacturerSize; // Size=4 Offset=24
    unsigned long dwModemModelOffset; // Size=4 Offset=28
    unsigned long dwModemModelSize; // Size=4 Offset=32
    unsigned long dwModemVersionOffset; // Size=4 Offset=36
    unsigned long dwModemVersionSize; // Size=4 Offset=40
    unsigned long dwDialOptions; // Size=4 Offset=44
    unsigned long dwCallSetupFailTimer; // Size=4 Offset=48
    unsigned long dwInactivityTimeout; // Size=4 Offset=52
    unsigned long dwSpeakerVolume; // Size=4 Offset=56
    unsigned long dwSpeakerMode; // Size=4 Offset=60
    unsigned long dwModemOptions; // Size=4 Offset=64
    unsigned long dwMaxDTERate; // Size=4 Offset=68
    unsigned long dwMaxDCERate; // Size=4 Offset=72
    unsigned char abVariablePortion[1]; // Size=1 Offset=76
} MODEMDEVCAPS, *PMODEMDEVCAPS;
typedef struct tagWAVEOUTCAPSW // Size=84
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned long dwFormats; // Size=4 Offset=72
    unsigned short wChannels; // Size=2 Offset=76
    unsigned short wReserved1; // Size=2 Offset=78
    unsigned long dwSupport; // Size=4 Offset=80
} *PtagWAVEOUTCAPSW;
typedef struct _SERVICE_STATUS // Size=28
{
    unsigned long dwServiceType; // Size=4 Offset=0
    unsigned long dwCurrentState; // Size=4 Offset=4
    unsigned long dwControlsAccepted; // Size=4 Offset=8
    unsigned long dwWin32ExitCode; // Size=4 Offset=12
    unsigned long dwServiceSpecificExitCode; // Size=4 Offset=16
    unsigned long dwCheckPoint; // Size=4 Offset=20
    unsigned long dwWaitHint; // Size=4 Offset=24
} SERVICE_STATUS, *PSERVICE_STATUS;
typedef struct value_entW // Size=16
{
    unsigned short * ve_valuename; // Size=4 Offset=0
    unsigned long ve_valuelen; // Size=4 Offset=4
    unsigned long ve_valueptr; // Size=4 Offset=8
    unsigned long ve_type; // Size=4 Offset=12
} *Pvalue_entW;
typedef struct tagMCI_INFO_PARMSW // Size=12
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned short * lpstrReturn; // Size=4 Offset=4
    unsigned long dwRetSize; // Size=4 Offset=8
} *PtagMCI_INFO_PARMSW;
typedef struct _PACKEDEVENTINFO // Size=8
{
    unsigned long ulSize; // Size=4 Offset=0
    unsigned long ulNumEventsForLogFile; // Size=4 Offset=4
} PACKEDEVENTINFO, *PPACKEDEVENTINFO;
typedef struct _MEMORYSTATUSEX // Size=64
{
    unsigned long dwLength; // Size=4 Offset=0
    unsigned long dwMemoryLoad; // Size=4 Offset=4
    unsigned __int64 ullTotalPhys; // Size=8 Offset=8
    unsigned __int64 ullAvailPhys; // Size=8 Offset=16
    unsigned __int64 ullTotalPageFile; // Size=8 Offset=24
    unsigned __int64 ullAvailPageFile; // Size=8 Offset=32
    unsigned __int64 ullTotalVirtual; // Size=8 Offset=40
    unsigned __int64 ullAvailVirtual; // Size=8 Offset=48
    unsigned __int64 ullAvailExtendedVirtual; // Size=8 Offset=56
} MEMORYSTATUSEX, *PMEMORYSTATUSEX;
typedef struct sockproto // Size=4
{
    unsigned short sp_family; // Size=2 Offset=0
    unsigned short sp_protocol; // Size=2 Offset=2
} *Psockproto;
typedef struct _EFS_RPC_BLOB // Size=8
{
    unsigned long cbData; // Size=4 Offset=0
    unsigned char * pbData; // Size=4 Offset=4
} EFS_RPC_BLOB, *PEFS_RPC_BLOB;
typedef struct _PSINJECTDATA // Size=8
{
    unsigned long DataBytes; // Size=4 Offset=0
    unsigned short InjectionPoint; // Size=2 Offset=4
    unsigned short PageNumber; // Size=2 Offset=6
} PSINJECTDATA, *PPSINJECTDATA;
typedef struct IHttpNegotiate2 // Size=4
{
} *PIHttpNegotiate2;
typedef struct tagGCP_RESULTSA // Size=36
{
    unsigned long lStructSize; // Size=4 Offset=0
    char * lpOutString; // Size=4 Offset=4
    unsigned int * lpOrder; // Size=4 Offset=8
    int * lpDx; // Size=4 Offset=12
    int * lpCaretPos; // Size=4 Offset=16
    char * lpClass; // Size=4 Offset=20
    unsigned short * lpGlyphs; // Size=4 Offset=24
    unsigned int nGlyphs; // Size=4 Offset=28
    int nMaxFit; // Size=4 Offset=32
} *PtagGCP_RESULTSA;
typedef struct IPersist // Size=4
{
} *PIPersist;
typedef struct IPersistFile // Size=4
{
} *PIPersistFile;
typedef struct HTASK__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHTASK__;
typedef struct tagEMRFORMAT // Size=16
{
    unsigned long dSignature; // Size=4 Offset=0
    unsigned long nVersion; // Size=4 Offset=4
    unsigned long cbData; // Size=4 Offset=8
    unsigned long offData; // Size=4 Offset=12
} *PtagEMRFORMAT;
typedef struct tagMCI_VD_STEP_PARMS // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwFrames; // Size=4 Offset=4
} *PtagMCI_VD_STEP_PARMS;
typedef struct tagMETARECORD // Size=8
{
    unsigned long rdSize; // Size=4 Offset=0
    unsigned short rdFunction; // Size=2 Offset=4
    unsigned short rdParm[1]; // Size=2 Offset=6
} *PtagMETARECORD;
typedef struct tagRPC_ERROR_ENUM_HANDLE // Size=12
{
    unsigned long Signature; // Size=4 Offset=0
    void * CurrentPos; // Size=4 Offset=4
    void * Head; // Size=4 Offset=8
} *PtagRPC_ERROR_ENUM_HANDLE;
typedef struct SCARD_T0_COMMAND // Size=5
{
    unsigned char bCla; // Size=1 Offset=0
    unsigned char bIns; // Size=1 Offset=1
    unsigned char bP1; // Size=1 Offset=2
    unsigned char bP2; // Size=1 Offset=3
    unsigned char bP3; // Size=1 Offset=4
} *PSCARD_T0_COMMAND;
typedef struct _GENERIC_MAPPING // Size=16
{
    unsigned long GenericRead; // Size=4 Offset=0
    unsigned long GenericWrite; // Size=4 Offset=4
    unsigned long GenericExecute; // Size=4 Offset=8
    unsigned long GenericAll; // Size=4 Offset=12
} GENERIC_MAPPING, *PGENERIC_MAPPING;
typedef struct _EFS_KEY_INFO // Size=16
{
    unsigned long dwVersion; // Size=4 Offset=0
    unsigned long Entropy; // Size=4 Offset=4
    unsigned int Algorithm; // Size=4 Offset=8
    unsigned long KeyLength; // Size=4 Offset=12
} EFS_KEY_INFO, *PEFS_KEY_INFO;
typedef struct ___unnamed1638 // Size=12
{
    void * pad[2]; // Size=8 Offset=0
    void * userContext; // Size=4 Offset=8
} __unnamed1638, *P__unnamed1638;
typedef struct IMallocSpy // Size=4
{
} *PIMallocSpy;
typedef struct tagVS_FIXEDFILEINFO // Size=52
{
    unsigned long dwSignature; // Size=4 Offset=0
    unsigned long dwStrucVersion; // Size=4 Offset=4
    unsigned long dwFileVersionMS; // Size=4 Offset=8
    unsigned long dwFileVersionLS; // Size=4 Offset=12
    unsigned long dwProductVersionMS; // Size=4 Offset=16
    unsigned long dwProductVersionLS; // Size=4 Offset=20
    unsigned long dwFileFlagsMask; // Size=4 Offset=24
    unsigned long dwFileFlags; // Size=4 Offset=28
    unsigned long dwFileOS; // Size=4 Offset=32
    unsigned long dwFileType; // Size=4 Offset=36
    unsigned long dwFileSubtype; // Size=4 Offset=40
    unsigned long dwFileDateMS; // Size=4 Offset=44
    unsigned long dwFileDateLS; // Size=4 Offset=48
} *PtagVS_FIXEDFILEINFO;
typedef struct tagMIDIOUTCAPSW // Size=84
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned short wTechnology; // Size=2 Offset=72
    unsigned short wVoices; // Size=2 Offset=74
    unsigned short wNotes; // Size=2 Offset=76
    unsigned short wChannelMask; // Size=2 Offset=78
    unsigned long dwSupport; // Size=4 Offset=80
} *PtagMIDIOUTCAPSW;
typedef struct tagMCI_WAVE_OPEN_PARMSW // Size=24
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned int wDeviceID; // Size=4 Offset=4
    unsigned short * lpstrDeviceType; // Size=4 Offset=8
    unsigned short * lpstrElementName; // Size=4 Offset=12
    unsigned short * lpstrAlias; // Size=4 Offset=16
    unsigned long dwBufferSeconds; // Size=4 Offset=20
} *PtagMCI_WAVE_OPEN_PARMSW;
typedef struct HIMC__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHIMC__;
typedef struct _CHANGER_PRODUCT_DATA // Size=61
{
    unsigned char VendorId[8]; // Size=8 Offset=0
    unsigned char ProductId[16]; // Size=16 Offset=8
    unsigned char Revision[4]; // Size=4 Offset=24
    unsigned char SerialNumber[32]; // Size=32 Offset=28
    unsigned char DeviceType; // Size=1 Offset=60
} CHANGER_PRODUCT_DATA, *PCHANGER_PRODUCT_DATA;
typedef struct IBindHost // Size=4
{
} *PIBindHost;
typedef struct _IMAGE_RELOCATION // Size=10
{
    union
    {
        unsigned long VirtualAddress; // Size=4 Offset=0
        unsigned long RelocCount; // Size=4 Offset=0
    };
    unsigned long SymbolTableIndex; // Size=4 Offset=4
    unsigned short Type; // Size=2 Offset=8
} IMAGE_RELOCATION, *PIMAGE_RELOCATION;
typedef struct _SCARD_ATRMASK // Size=76
{
    unsigned long cbAtr; // Size=4 Offset=0
    unsigned char rgbAtr[36]; // Size=36 Offset=4
    unsigned char rgbMask[36]; // Size=36 Offset=40
} SCARD_ATRMASK, *PSCARD_ATRMASK;
typedef struct _LANA_ENUM // Size=256
{
    unsigned char length; // Size=1 Offset=0
    unsigned char lana[255]; // Size=255 Offset=1
} LANA_ENUM, *PLANA_ENUM;
typedef struct _QUERY_SERVICE_LOCK_STATUSW // Size=12
{
    unsigned long fIsLocked; // Size=4 Offset=0
    unsigned short * lpLockOwner; // Size=4 Offset=4
    unsigned long dwLockDuration; // Size=4 Offset=8
} QUERY_SERVICE_LOCK_STATUSW, *PQUERY_SERVICE_LOCK_STATUSW;
typedef struct tagCLIPDATA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    long ulClipFmt; // Size=4 Offset=4
    unsigned char * pClipData; // Size=4 Offset=8
} *PtagCLIPDATA;
typedef struct tagCAC // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    char * pElems; // Size=4 Offset=4
} *PtagCAC;
typedef struct tagCAI // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    short * pElems; // Size=4 Offset=4
} *PtagCAI;
typedef struct tagCAL // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    long * pElems; // Size=4 Offset=4
} *PtagCAL;
typedef struct tagCAFLT // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    float * pElems; // Size=4 Offset=4
} *PtagCAFLT;
typedef struct tagCABOOL // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    short * pElems; // Size=4 Offset=4
} *PtagCABOOL;
typedef struct tagCASCODE // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    long * pElems; // Size=4 Offset=4
} *PtagCASCODE;
typedef struct tagCADATE // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    double * pElems; // Size=4 Offset=4
} *PtagCADATE;
typedef struct tagCALPSTR // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    char * * pElems; // Size=4 Offset=4
} *PtagCALPSTR;
typedef struct tagCALPWSTR // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    unsigned short * * pElems; // Size=4 Offset=4
} *PtagCALPWSTR;
typedef struct _PRINTER_INFO_7W // Size=8
{
    unsigned short * pszObjectGUID; // Size=4 Offset=0
    unsigned long dwAction; // Size=4 Offset=4
} PRINTER_INFO_7W, *PPRINTER_INFO_7W;
typedef struct IOleContainer // Size=4
{
} *PIOleContainer;
typedef struct IEnumUnknown // Size=4
{
} *PIEnumUnknown;
typedef struct ISupportErrorInfo // Size=4
{
} *PISupportErrorInfo;
typedef struct NDR_ALLOC_ALL_NODES_CONTEXT // Size=0
{
} *PNDR_ALLOC_ALL_NODES_CONTEXT;
typedef struct NDR_POINTER_QUEUE_STATE // Size=0
{
} *PNDR_POINTER_QUEUE_STATE;
typedef struct ARRAY_INFO // Size=24
{
    long Dimension; // Size=4 Offset=0
    unsigned long * BufferConformanceMark; // Size=4 Offset=4
    unsigned long * BufferVarianceMark; // Size=4 Offset=8
    unsigned long * MaxCountArray; // Size=4 Offset=12
    unsigned long * OffsetArray; // Size=4 Offset=16
    unsigned long * ActualCountArray; // Size=4 Offset=20
} *PARRAY_INFO;
typedef struct _NDR_ASYNC_MESSAGE // Size=0
{
} NDR_ASYNC_MESSAGE, *PNDR_ASYNC_MESSAGE;
typedef struct CS_STUB_INFO // Size=12
{
    unsigned long WireCodeset; // Size=4 Offset=0
    unsigned long DesiredReceivingCodeset; // Size=4 Offset=4
    void * CSArrayInfo; // Size=4 Offset=8
} *PCS_STUB_INFO;
typedef struct _NDR_PROC_CONTEXT // Size=0
{
} NDR_PROC_CONTEXT, *PNDR_PROC_CONTEXT;
typedef struct IXMLDOMCharacterData // Size=4
{
} *PIXMLDOMCharacterData;
typedef struct tagLOCALESIGNATURE // Size=32
{
    unsigned long lsUsb[4]; // Size=16 Offset=0
    unsigned long lsCsbDefault[2]; // Size=8 Offset=16
    unsigned long lsCsbSupported[2]; // Size=8 Offset=24
} *PtagLOCALESIGNATURE;
typedef struct _RPC_SECURITY_QOS // Size=16
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Capabilities; // Size=4 Offset=4
    unsigned long IdentityTracking; // Size=4 Offset=8
    unsigned long ImpersonationType; // Size=4 Offset=12
} RPC_SECURITY_QOS, *PRPC_SECURITY_QOS;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER // Size=48
{
    unsigned short Signature; // Size=2 Offset=0
    unsigned short Flags; // Size=2 Offset=2
    unsigned short Machine; // Size=2 Offset=4
    unsigned short Characteristics; // Size=2 Offset=6
    unsigned long TimeDateStamp; // Size=4 Offset=8
    unsigned long CheckSum; // Size=4 Offset=12
    unsigned long ImageBase; // Size=4 Offset=16
    unsigned long SizeOfImage; // Size=4 Offset=20
    unsigned long NumberOfSections; // Size=4 Offset=24
    unsigned long ExportedNamesSize; // Size=4 Offset=28
    unsigned long DebugDirectorySize; // Size=4 Offset=32
    unsigned long SectionAlignment; // Size=4 Offset=36
    unsigned long Reserved[2]; // Size=8 Offset=40
} IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _RPC_VERSION // Size=4
{
    unsigned short MajorVersion; // Size=2 Offset=0
    unsigned short MinorVersion; // Size=2 Offset=2
} RPC_VERSION, *PRPC_VERSION;
typedef struct IMarshal2 // Size=4
{
} *PIMarshal2;
typedef struct IClassFactory // Size=4
{
} *PIClassFactory;
typedef struct ICallFactory // Size=4
{
} *PICallFactory;
typedef struct IRootStorage // Size=4
{
} *PIRootStorage;
typedef struct IXMLDSOControl // Size=4
{
} *PIXMLDSOControl;
typedef struct tagDEVNAMES // Size=8
{
    unsigned short wDriverOffset; // Size=2 Offset=0
    unsigned short wDeviceOffset; // Size=2 Offset=2
    unsigned short wOutputOffset; // Size=2 Offset=4
    unsigned short wDefault; // Size=2 Offset=6
} *PtagDEVNAMES;
typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE // Size=20
{
    unsigned short Type; // Size=2 Offset=0
    unsigned short Reserved0; // Size=2 Offset=2
    unsigned long Reserved1; // Size=4 Offset=4
    unsigned long Reserved2; // Size=4 Offset=8
    unsigned long Count; // Size=4 Offset=12
    unsigned short * pFields; // Size=4 Offset=16
} PRINTER_NOTIFY_OPTIONS_TYPE, *PPRINTER_NOTIFY_OPTIONS_TYPE;
typedef struct _cpinfoexW // Size=544
{
    unsigned int MaxCharSize; // Size=4 Offset=0
    unsigned char DefaultChar[2]; // Size=2 Offset=4
    unsigned char LeadByte[12]; // Size=12 Offset=6
    unsigned short UnicodeDefaultChar; // Size=2 Offset=18
    unsigned int CodePage; // Size=4 Offset=20
    unsigned short CodePageName[260]; // Size=520 Offset=24
} cpinfoexW, *PcpinfoexW;
typedef struct _UNIVERSAL_NAME_INFOW // Size=4
{
    unsigned short * lpUniversalName; // Size=4 Offset=0
} UNIVERSAL_NAME_INFOW, *PUNIVERSAL_NAME_INFOW;
typedef struct _TAPE_WRITE_MARKS // Size=12
{
    unsigned long Type; // Size=4 Offset=0
    unsigned long Count; // Size=4 Offset=4
    unsigned char Immediate; // Size=1 Offset=8
} TAPE_WRITE_MARKS, *PTAPE_WRITE_MARKS;
typedef struct _CERTIFICATE_BLOB // Size=12
{
    unsigned long dwCertEncodingType; // Size=4 Offset=0
    unsigned long cbData; // Size=4 Offset=4
    unsigned char * pbData; // Size=4 Offset=8
} CERTIFICATE_BLOB, *PCERTIFICATE_BLOB;
typedef struct tagSTYLEBUFA // Size=36
{
    unsigned long dwStyle; // Size=4 Offset=0
    char szDescription[32]; // Size=32 Offset=4
} *PtagSTYLEBUFA;
typedef struct value_entA // Size=16
{
    char * ve_valuename; // Size=4 Offset=0
    unsigned long ve_valuelen; // Size=4 Offset=4
    unsigned long ve_valueptr; // Size=4 Offset=8
    unsigned long ve_type; // Size=4 Offset=12
} *Pvalue_entA;
typedef struct mmtime_tag::__unnamed::__unnamed // Size=8
{
    unsigned char hour; // Size=1 Offset=0
    unsigned char min; // Size=1 Offset=1
    unsigned char sec; // Size=1 Offset=2
    unsigned char frame; // Size=1 Offset=3
    unsigned char fps; // Size=1 Offset=4
    unsigned char dummy; // Size=1 Offset=5
    unsigned char pad[2]; // Size=2 Offset=6
} *Pmmtime_tag::__unnamed::__unnamed;
typedef struct ITypeChangeEvents // Size=4
{
} *PITypeChangeEvents;
typedef struct _IO_COUNTERS // Size=48
{
    unsigned __int64 ReadOperationCount; // Size=8 Offset=0
    unsigned __int64 WriteOperationCount; // Size=8 Offset=8
    unsigned __int64 OtherOperationCount; // Size=8 Offset=16
    unsigned __int64 ReadTransferCount; // Size=8 Offset=24
    unsigned __int64 WriteTransferCount; // Size=8 Offset=32
    unsigned __int64 OtherTransferCount; // Size=8 Offset=40
} IO_COUNTERS, *PIO_COUNTERS;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW // Size=136
{
    unsigned long dwParam1; // Size=4 Offset=0
    unsigned long dwParam2; // Size=4 Offset=4
    unsigned short szName[64]; // Size=128 Offset=8
} *PtagMIXERCONTROLDETAILS_LISTTEXTW;
typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER // Size=36
{
    unsigned char First0x24BytesOfBootSector[36]; // Size=36 Offset=0
} FSCTL_QUERY_FAT_BPB_BUFFER, *PFSCTL_QUERY_FAT_BPB_BUFFER;
typedef struct AsyncIMultiQI // Size=4
{
} *PAsyncIMultiQI;
typedef struct _MEMORYSTATUS // Size=32
{
    unsigned long dwLength; // Size=4 Offset=0
    unsigned long dwMemoryLoad; // Size=4 Offset=4
    unsigned long dwTotalPhys; // Size=4 Offset=8
    unsigned long dwAvailPhys; // Size=4 Offset=12
    unsigned long dwTotalPageFile; // Size=4 Offset=16
    unsigned long dwAvailPageFile; // Size=4 Offset=20
    unsigned long dwTotalVirtual; // Size=4 Offset=24
    unsigned long dwAvailVirtual; // Size=4 Offset=28
} MEMORYSTATUS, *PMEMORYSTATUS;
typedef struct HMIDIOUT__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMIDIOUT__;
typedef struct IBindProtocol // Size=4
{
} *PIBindProtocol;
typedef struct IBinding // Size=4
{
} *PIBinding;
typedef struct tagRGBQUAD // Size=4
{
    unsigned char rgbBlue; // Size=1 Offset=0
    unsigned char rgbGreen; // Size=1 Offset=1
    unsigned char rgbRed; // Size=1 Offset=2
    unsigned char rgbReserved; // Size=1 Offset=3
} *PtagRGBQUAD;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER // Size=60
{
    unsigned char Name[16]; // Size=16 Offset=0
    unsigned char Date[12]; // Size=12 Offset=16
    unsigned char UserID[6]; // Size=6 Offset=28
    unsigned char GroupID[6]; // Size=6 Offset=34
    unsigned char Mode[8]; // Size=8 Offset=40
    unsigned char Size[10]; // Size=10 Offset=48
    unsigned char EndHeader[2]; // Size=2 Offset=58
} IMAGE_ARCHIVE_MEMBER_HEADER, *PIMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _NCB // Size=64
{
    unsigned char ncb_command; // Size=1 Offset=0
    unsigned char ncb_retcode; // Size=1 Offset=1
    unsigned char ncb_lsn; // Size=1 Offset=2
    unsigned char ncb_num; // Size=1 Offset=3
    unsigned char * ncb_buffer; // Size=4 Offset=4
    unsigned short ncb_length; // Size=2 Offset=8
    unsigned char ncb_callname[16]; // Size=16 Offset=10
    unsigned char ncb_name[16]; // Size=16 Offset=26
    unsigned char ncb_rto; // Size=1 Offset=42
    unsigned char ncb_sto; // Size=1 Offset=43
    void ( * ncb_post)(struct _NCB *); // Size=4 Offset=44
    unsigned char ncb_lana_num; // Size=1 Offset=48
    unsigned char ncb_cmd_cplt; // Size=1 Offset=49
    unsigned char ncb_reserve[10]; // Size=10 Offset=50
    void * ncb_event; // Size=4 Offset=60
} NCB, *PNCB;
typedef struct IWinInetInfo // Size=4
{
} *PIWinInetInfo;
typedef struct _IMAGE_EXPORT_DIRECTORY // Size=40
{
    unsigned long Characteristics; // Size=4 Offset=0
    unsigned long TimeDateStamp; // Size=4 Offset=4
    unsigned short MajorVersion; // Size=2 Offset=8
    unsigned short MinorVersion; // Size=2 Offset=10
    unsigned long Name; // Size=4 Offset=12
    unsigned long Base; // Size=4 Offset=16
    unsigned long NumberOfFunctions; // Size=4 Offset=20
    unsigned long NumberOfNames; // Size=4 Offset=24
    unsigned long AddressOfFunctions; // Size=4 Offset=28
    unsigned long AddressOfNames; // Size=4 Offset=32
    unsigned long AddressOfNameOrdinals; // Size=4 Offset=36
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY;
typedef struct IOleInPlaceObject // Size=4
{
} *PIOleInPlaceObject;
typedef struct _LOAD_DLL_DEBUG_INFO // Size=24
{
    void * hFile; // Size=4 Offset=0
    void * lpBaseOfDll; // Size=4 Offset=4
    unsigned long dwDebugInfoFileOffset; // Size=4 Offset=8
    unsigned long nDebugInfoSize; // Size=4 Offset=12
    void * lpImageName; // Size=4 Offset=16
    unsigned short fUnicode; // Size=2 Offset=20
} LOAD_DLL_DEBUG_INFO, *PLOAD_DLL_DEBUG_INFO;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY // Size=12
{
    unsigned long BeginAddress; // Size=4 Offset=0
    unsigned long EndAddress; // Size=4 Offset=4
    unsigned long UnwindInfoAddress; // Size=4 Offset=8
} IMAGE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    unsigned long dwSignerIndex; // Size=4 Offset=8
    unsigned long dwSignerType; // Size=4 Offset=12
    void * pvSigner; // Size=4 Offset=16
} CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
typedef struct DDEADVISE // Size=4
{
    struct
    {
        unsigned short reserved: 14; // Size=2 Offset=0 BitOffset=0 BitCount=14
        unsigned short fDeferUpd: 1; // Size=2 Offset=0 BitOffset=14 BitCount=1
        unsigned short fAckReq: 1; // Size=2 Offset=0 BitOffset=15 BitCount=1
    };
    short cfFormat; // Size=2 Offset=2
} *PDDEADVISE;
typedef struct IXMLDOMElement // Size=4
{
} *PIXMLDOMElement;
typedef union _FILE_SEGMENT_ELEMENT // Size=8
{
    void * Buffer; // Size=4 Offset=0
    unsigned __int64 Alignment; // Size=8 Offset=0
} FILE_SEGMENT_ELEMENT, *PFILE_SEGMENT_ELEMENT;
typedef struct _div_t // Size=8
{
    int quot; // Size=4 Offset=0
    int rem; // Size=4 Offset=4
} div_t, *Pdiv_t;
typedef struct _JOB_SET_ARRAY // Size=12
{
    void * JobHandle; // Size=4 Offset=0
    unsigned long MemberLevel; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
} JOB_SET_ARRAY, *PJOB_SET_ARRAY;
typedef struct _MIDL_FORMAT_STRING // Size=2
{
    short Pad; // Size=2 Offset=0
} MIDL_FORMAT_STRING, *PMIDL_FORMAT_STRING;
typedef struct tagMCI_ANIM_STEP_PARMS // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwFrames; // Size=4 Offset=4
} *PtagMCI_ANIM_STEP_PARMS;
typedef struct IInternetSecurityManager // Size=4
{
} *PIInternetSecurityManager;
typedef struct IInternetSecurityMgrSite // Size=4
{
} *PIInternetSecurityMgrSite;
typedef struct in_addr::__unnamed::__unnamed // Size=4
{
    unsigned char s_b1; // Size=1 Offset=0
    unsigned char s_b2; // Size=1 Offset=1
    unsigned char s_b3; // Size=1 Offset=2
    unsigned char s_b4; // Size=1 Offset=3
} *Pin_addr::__unnamed::__unnamed;
typedef class MSG_Z2CG_ASK_LOTTO_INFO // Size=4
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
} *PMSG_Z2CG_ASK_LOTTO_INFO;
typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION // Size=48
{
    unsigned long dwFlags; // Size=4 Offset=0
    unsigned long ulFormatVersion; // Size=4 Offset=4
    unsigned long ulAssemblyCount; // Size=4 Offset=8
    unsigned long ulRootManifestPathType; // Size=4 Offset=12
    unsigned long ulRootManifestPathChars; // Size=4 Offset=16
    unsigned long ulRootConfigurationPathType; // Size=4 Offset=20
    unsigned long ulRootConfigurationPathChars; // Size=4 Offset=24
    unsigned long ulAppDirPathType; // Size=4 Offset=28
    unsigned long ulAppDirPathChars; // Size=4 Offset=32
    unsigned short * lpRootManifestPath; // Size=4 Offset=36
    unsigned short * lpRootConfigurationPath; // Size=4 Offset=40
    unsigned short * lpAppDirPath; // Size=4 Offset=44
} ACTIVATION_CONTEXT_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_DETAILED_INFORMATION;
typedef struct _CREATE_THREAD_DEBUG_INFO // Size=12
{
    void * hThread; // Size=4 Offset=0
    void * lpThreadLocalBase; // Size=4 Offset=4
    unsigned long ( * lpStartAddress)(void *); // Size=4 Offset=8
} CREATE_THREAD_DEBUG_INFO, *PCREATE_THREAD_DEBUG_INFO;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE // Size=20
{
    unsigned char Revision; // Size=1 Offset=0
    unsigned char Sbz1; // Size=1 Offset=1
    unsigned short Control; // Size=2 Offset=2
    unsigned long Owner; // Size=4 Offset=4
    unsigned long Group; // Size=4 Offset=8
    unsigned long Sacl; // Size=4 Offset=12
    unsigned long Dacl; // Size=4 Offset=16
} SECURITY_DESCRIPTOR_RELATIVE, *PSECURITY_DESCRIPTOR_RELATIVE;
typedef struct _CERT_REVOCATION_STATUS // Size=24
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwIndex; // Size=4 Offset=4
    unsigned long dwError; // Size=4 Offset=8
    unsigned long dwReason; // Size=4 Offset=12
    int fHasFreshnessTime; // Size=4 Offset=16
    unsigned long dwFreshnessTime; // Size=4 Offset=20
} CERT_REVOCATION_STATUS, *PCERT_REVOCATION_STATUS;
typedef struct IXMLDOMComment // Size=4
{
} *PIXMLDOMComment;
typedef struct tagCSPLATFORM // Size=16
{
    unsigned long dwPlatformId; // Size=4 Offset=0
    unsigned long dwVersionHi; // Size=4 Offset=4
    unsigned long dwVersionLo; // Size=4 Offset=8
    unsigned long dwProcessorArch; // Size=4 Offset=12
} *PtagCSPLATFORM;
typedef struct _SHNAMEMAPPINGW // Size=16
{
    unsigned short * pszOldPath; // Size=4 Offset=0
    unsigned short * pszNewPath; // Size=4 Offset=4
    int cchOldPath; // Size=4 Offset=8
    int cchNewPath; // Size=4 Offset=12
} SHNAMEMAPPINGW, *PSHNAMEMAPPINGW;
typedef struct _OVERLAPPED // Size=20
{
    unsigned long Internal; // Size=4 Offset=0
    unsigned long InternalHigh; // Size=4 Offset=4
    union
    {
        unsigned long Offset; // Size=4 Offset=8
        void * Pointer; // Size=4 Offset=8
    };
    unsigned long OffsetHigh; // Size=4 Offset=12
    void * hEvent; // Size=4 Offset=16
} OVERLAPPED, *POVERLAPPED;
typedef struct _CERT_CHAIN_POLICY_STATUS // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwError; // Size=4 Offset=4
    long lChainIndex; // Size=4 Offset=8
    long lElementIndex; // Size=4 Offset=12
    void * pvExtraPolicyStatus; // Size=4 Offset=16
} CERT_CHAIN_POLICY_STATUS, *PCERT_CHAIN_POLICY_STATUS;
typedef struct tagMCI_GETDEVCAPS_PARMS // Size=12
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwReturn; // Size=4 Offset=4
    unsigned long dwItem; // Size=4 Offset=8
} *PtagMCI_GETDEVCAPS_PARMS;
typedef struct tagRPC_CALL_ATTRIBUTES_V1_W // Size=36
{
    unsigned int Version; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long ServerPrincipalNameBufferLength; // Size=4 Offset=8
    unsigned short * ServerPrincipalName; // Size=4 Offset=12
    unsigned long ClientPrincipalNameBufferLength; // Size=4 Offset=16
    unsigned short * ClientPrincipalName; // Size=4 Offset=20
    unsigned long AuthenticationLevel; // Size=4 Offset=24
    unsigned long AuthenticationService; // Size=4 Offset=28
    int NullSession; // Size=4 Offset=32
} *PtagRPC_CALL_ATTRIBUTES_V1_W;
typedef struct tagMCI_LOAD_PARMSW // Size=8
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned short * lpfilename; // Size=4 Offset=4
} *PtagMCI_LOAD_PARMSW;
typedef struct IErrorInfo // Size=4
{
} *PIErrorInfo;
typedef struct _RSAPUBKEY // Size=12
{
    unsigned long magic; // Size=4 Offset=0
    unsigned long bitlen; // Size=4 Offset=4
    unsigned long pubexp; // Size=4 Offset=8
} RSAPUBKEY, *PRSAPUBKEY;
typedef struct _IMAGE_TLS_DIRECTORY32 // Size=24
{
    unsigned long StartAddressOfRawData; // Size=4 Offset=0
    unsigned long EndAddressOfRawData; // Size=4 Offset=4
    unsigned long AddressOfIndex; // Size=4 Offset=8
    unsigned long AddressOfCallBacks; // Size=4 Offset=12
    unsigned long SizeOfZeroFill; // Size=4 Offset=16
    unsigned long Characteristics; // Size=4 Offset=20
} IMAGE_TLS_DIRECTORY32, *PIMAGE_TLS_DIRECTORY32;
typedef struct _GRADIENT_RECT // Size=8
{
    unsigned long UpperLeft; // Size=4 Offset=0
    unsigned long LowerRight; // Size=4 Offset=4
} GRADIENT_RECT, *PGRADIENT_RECT;
typedef struct _SESSION_BUFFER // Size=36
{
    unsigned char lsn; // Size=1 Offset=0
    unsigned char state; // Size=1 Offset=1
    unsigned char local_name[16]; // Size=16 Offset=2
    unsigned char remote_name[16]; // Size=16 Offset=18
    unsigned char rcvs_outstanding; // Size=1 Offset=34
    unsigned char sends_outstanding; // Size=1 Offset=35
} SESSION_BUFFER, *PSESSION_BUFFER;
typedef struct IOleLink // Size=4
{
} *PIOleLink;
typedef struct _TAPE_ERASE // Size=8
{
    unsigned long Type; // Size=4 Offset=0
    unsigned char Immediate; // Size=1 Offset=4
} TAPE_ERASE, *PTAPE_ERASE;
typedef struct HRSRC__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHRSRC__;
typedef union _RemotableHandle::__MIDL_IWinTypes_0009 // Size=4
{
    long hInproc; // Size=4 Offset=0
    long hRemote; // Size=4 Offset=0
} RemotableHandle::__MIDL_IWinTypes_0009, *PRemotableHandle::__MIDL_IWinTypes_0009;
typedef struct _ACL_SIZE_INFORMATION // Size=12
{
    unsigned long AceCount; // Size=4 Offset=0
    unsigned long AclBytesInUse; // Size=4 Offset=4
    unsigned long AclBytesFree; // Size=4 Offset=8
} ACL_SIZE_INFORMATION, *PACL_SIZE_INFORMATION;
typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO // Size=8
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
} CMSG_SP3_COMPATIBLE_AUX_INFO, *PCMSG_SP3_COMPATIBLE_AUX_INFO;
typedef struct IOleCache // Size=4
{
} *PIOleCache;
typedef struct IViewObject2 // Size=4
{
} *PIViewObject2;
typedef struct IRunnableObject // Size=4
{
} *PIRunnableObject;
typedef struct _LARGE_INTEGER::__unnamed // Size=8
{
    unsigned long LowPart; // Size=4 Offset=0
    long HighPart; // Size=4 Offset=4
} LARGE_INTEGER::__unnamed, *PLARGE_INTEGER::__unnamed;
typedef struct tagDRVCONFIGINFO // Size=12
{
    unsigned long dwDCISize; // Size=4 Offset=0
    unsigned short * lpszDCISectionName; // Size=4 Offset=4
    unsigned short * lpszDCIAliasName; // Size=4 Offset=8
} *PtagDRVCONFIGINFO;
typedef struct _FILE_PREFETCH // Size=16
{
    unsigned long Type; // Size=4 Offset=0
    unsigned long Count; // Size=4 Offset=4
    unsigned __int64 Prefetch[1]; // Size=8 Offset=8
} FILE_PREFETCH, *PFILE_PREFETCH;
typedef struct _CMSG_RC2_AUX_INFO // Size=8
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwBitLen; // Size=4 Offset=4
} CMSG_RC2_AUX_INFO, *PCMSG_RC2_AUX_INFO;
typedef struct IMultiQI // Size=4
{
} *PIMultiQI;
typedef struct tagKERNINGPAIR // Size=8
{
    unsigned short wFirst; // Size=2 Offset=0
    unsigned short wSecond; // Size=2 Offset=2
    int iKernAmount; // Size=4 Offset=4
} *PtagKERNINGPAIR;
typedef class CBaseServerEx // Size=8388728
{
} *PCBaseServerEx;
typedef class CZoneServer // Size=8388768
{
    int m_bRunServer; // Size=4 Offset=8388728
    char m_szZoneServerIP[16]; // Size=16 Offset=8388732
    int m_iZoneServerPort; // Size=4 Offset=8388748
    int m_iZoneServerID; // Size=4 Offset=8388752
    int m_bIsDerby; // Size=4 Offset=8388756
    int m_bIsLotto; // Size=4 Offset=8388760
    long m_lTickConnected; // Size=4 Offset=8388764
} *PCZoneServer;
typedef struct _ULARGE_INTEGER::__unnamed // Size=8
{
    unsigned long LowPart; // Size=4 Offset=0
    unsigned long HighPart; // Size=4 Offset=4
} ULARGE_INTEGER::__unnamed, *PULARGE_INTEGER::__unnamed;
typedef struct _GET_CHANGER_PARAMETERS // Size=60
{
    unsigned long Size; // Size=4 Offset=0
    unsigned short NumberTransportElements; // Size=2 Offset=4
    unsigned short NumberStorageElements; // Size=2 Offset=6
    unsigned short NumberCleanerSlots; // Size=2 Offset=8
    unsigned short NumberIEElements; // Size=2 Offset=10
    unsigned short NumberDataTransferElements; // Size=2 Offset=12
    unsigned short NumberOfDoors; // Size=2 Offset=14
    unsigned short FirstSlotNumber; // Size=2 Offset=16
    unsigned short FirstDriveNumber; // Size=2 Offset=18
    unsigned short FirstTransportNumber; // Size=2 Offset=20
    unsigned short FirstIEPortNumber; // Size=2 Offset=22
    unsigned short FirstCleanerSlotAddress; // Size=2 Offset=24
    unsigned short MagazineSize; // Size=2 Offset=26
    unsigned long DriveCleanTimeout; // Size=4 Offset=28
    unsigned long Features0; // Size=4 Offset=32
    unsigned long Features1; // Size=4 Offset=36
    unsigned char MoveFromTransport; // Size=1 Offset=40
    unsigned char MoveFromSlot; // Size=1 Offset=41
    unsigned char MoveFromIePort; // Size=1 Offset=42
    unsigned char MoveFromDrive; // Size=1 Offset=43
    unsigned char ExchangeFromTransport; // Size=1 Offset=44
    unsigned char ExchangeFromSlot; // Size=1 Offset=45
    unsigned char ExchangeFromIePort; // Size=1 Offset=46
    unsigned char ExchangeFromDrive; // Size=1 Offset=47
    unsigned char LockUnlockCapabilities; // Size=1 Offset=48
    unsigned char PositionCapabilities; // Size=1 Offset=49
    unsigned char Reserved1[2]; // Size=2 Offset=50
    unsigned long Reserved2[2]; // Size=8 Offset=52
} GET_CHANGER_PARAMETERS, *PGET_CHANGER_PARAMETERS;
typedef struct ISequentialStream // Size=4
{
} *PISequentialStream;
typedef union _KEY_EVENT_RECORD::__unnamed // Size=2
{
    unsigned short UnicodeChar; // Size=2 Offset=0
    char AsciiChar; // Size=1 Offset=0
} KEY_EVENT_RECORD::__unnamed, *PKEY_EVENT_RECORD::__unnamed;
typedef struct IXMLDOMDocumentType // Size=4
{
} *PIXMLDOMDocumentType;
typedef struct _PERF_INSTANCE_DEFINITION // Size=24
{
    unsigned long ByteLength; // Size=4 Offset=0
    unsigned long ParentObjectTitleIndex; // Size=4 Offset=4
    unsigned long ParentObjectInstance; // Size=4 Offset=8
    long UniqueID; // Size=4 Offset=12
    unsigned long NameOffset; // Size=4 Offset=16
    unsigned long NameLength; // Size=4 Offset=20
} PERF_INSTANCE_DEFINITION, *PPERF_INSTANCE_DEFINITION;
typedef struct _PROVIDOR_INFO_2A // Size=4
{
    char * pOrder; // Size=4 Offset=0
} PROVIDOR_INFO_2A, *PPROVIDOR_INFO_2A;
typedef struct _QUERY_SERVICE_LOCK_STATUSA // Size=12
{
    unsigned long fIsLocked; // Size=4 Offset=0
    char * lpLockOwner; // Size=4 Offset=4
    unsigned long dwLockDuration; // Size=4 Offset=8
} QUERY_SERVICE_LOCK_STATUSA, *PQUERY_SERVICE_LOCK_STATUSA;
typedef struct HMIDISTRM__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMIDISTRM__;
typedef struct IMAGE_LOAD_CONFIG_DIRECTORY64 // Size=112
{
    unsigned long Size; // Size=4 Offset=0
    unsigned long TimeDateStamp; // Size=4 Offset=4
    unsigned short MajorVersion; // Size=2 Offset=8
    unsigned short MinorVersion; // Size=2 Offset=10
    unsigned long GlobalFlagsClear; // Size=4 Offset=12
    unsigned long GlobalFlagsSet; // Size=4 Offset=16
    unsigned long CriticalSectionDefaultTimeout; // Size=4 Offset=20
    unsigned __int64 DeCommitFreeBlockThreshold; // Size=8 Offset=24
    unsigned __int64 DeCommitTotalFreeThreshold; // Size=8 Offset=32
    unsigned __int64 LockPrefixTable; // Size=8 Offset=40
    unsigned __int64 MaximumAllocationSize; // Size=8 Offset=48
    unsigned __int64 VirtualMemoryThreshold; // Size=8 Offset=56
    unsigned __int64 ProcessAffinityMask; // Size=8 Offset=64
    unsigned long ProcessHeapFlags; // Size=4 Offset=72
    unsigned short CSDVersion; // Size=2 Offset=76
    unsigned short Reserved1; // Size=2 Offset=78
    unsigned __int64 EditList; // Size=8 Offset=80
    unsigned __int64 SecurityCookie; // Size=8 Offset=88
    unsigned __int64 SEHandlerTable; // Size=8 Offset=96
    unsigned __int64 SEHandlerCount; // Size=8 Offset=104
} *PIMAGE_LOAD_CONFIG_DIRECTORY64;
typedef struct linger // Size=4
{
    unsigned short l_onoff; // Size=2 Offset=0
    unsigned short l_linger; // Size=2 Offset=2
} *Plinger;
typedef class MSG_CG2Z_DERBY_BET_INFO // Size=72
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    int iDerbyIndex; // Size=4 Offset=4
    unsigned int iBetTotal[15]; // Size=60 Offset=8
    float fReturnRatio; // Size=4 Offset=68
} *PMSG_CG2Z_DERBY_BET_INFO;
typedef struct _NT_TIB64 // Size=56
{
    unsigned __int64 ExceptionList; // Size=8 Offset=0
    unsigned __int64 StackBase; // Size=8 Offset=8
    unsigned __int64 StackLimit; // Size=8 Offset=16
    unsigned __int64 SubSystemTib; // Size=8 Offset=24
    union
    {
        unsigned __int64 FiberData; // Size=8 Offset=32
        unsigned long Version; // Size=4 Offset=32
    };
    unsigned __int64 ArbitraryUserPointer; // Size=8 Offset=40
    unsigned __int64 Self; // Size=8 Offset=48
} NT_TIB64, *PNT_TIB64;
typedef struct _ABCFLOAT // Size=12
{
    float abcfA; // Size=4 Offset=0
    float abcfB; // Size=4 Offset=4
    float abcfC; // Size=4 Offset=8
} ABCFLOAT, *PABCFLOAT;
typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY // Size=40
{
    unsigned __int64 BeginAddress; // Size=8 Offset=0
    unsigned __int64 EndAddress; // Size=8 Offset=8
    unsigned __int64 ExceptionHandler; // Size=8 Offset=16
    unsigned __int64 HandlerData; // Size=8 Offset=24
    unsigned __int64 PrologEndAddress; // Size=8 Offset=32
} IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
typedef struct _CONSOLE_CURSOR_INFO // Size=8
{
    unsigned long dwSize; // Size=4 Offset=0
    int bVisible; // Size=4 Offset=4
} CONSOLE_CURSOR_INFO, *PCONSOLE_CURSOR_INFO;
typedef struct IMessageFilter // Size=4
{
} *PIMessageFilter;
typedef struct _PROV_ENUMALGS // Size=32
{
    unsigned int aiAlgid; // Size=4 Offset=0
    unsigned long dwBitLen; // Size=4 Offset=4
    unsigned long dwNameLen; // Size=4 Offset=8
    char szName[20]; // Size=20 Offset=12
} PROV_ENUMALGS, *PPROV_ENUMALGS;
typedef struct IAsyncManager // Size=4
{
} *PIAsyncManager;
typedef struct IReleaseMarshalBuffers // Size=4
{
} *PIReleaseMarshalBuffers;
typedef class CLoopSleepMgr // Size=20
{
    int m_iInterval; // Size=4 Offset=4
    unsigned long m_dwLongSleep; // Size=4 Offset=8
    unsigned long m_dwShortSleep; // Size=4 Offset=12
    int m_iCounter; // Size=4 Offset=16
} *PCLoopSleepMgr;
typedef struct _SERVICE_DESCRIPTIONA // Size=4
{
    char * lpDescription; // Size=4 Offset=0
} SERVICE_DESCRIPTIONA, *PSERVICE_DESCRIPTIONA;
typedef struct tagCRGB // Size=4
{
    unsigned char bRed; // Size=1 Offset=0
    unsigned char bGreen; // Size=1 Offset=1
    unsigned char bBlue; // Size=1 Offset=2
    unsigned char bExtra; // Size=1 Offset=3
} *PtagCRGB;
typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR // Size=8
{
    unsigned short * pwszName; // Size=4 Offset=0
    unsigned short * pwszValue; // Size=4 Offset=4
} CRYPT_ENROLLMENT_NAME_VALUE_PAIR, *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR;
typedef struct IOleObject // Size=4
{
} *PIOleObject;
typedef struct timeval // Size=8
{
    long tv_sec; // Size=4 Offset=0
    long tv_usec; // Size=4 Offset=4
} *Ptimeval;
typedef struct tagBITMAP // Size=24
{
    long bmType; // Size=4 Offset=0
    long bmWidth; // Size=4 Offset=4
    long bmHeight; // Size=4 Offset=8
    long bmWidthBytes; // Size=4 Offset=12
    unsigned short bmPlanes; // Size=2 Offset=16
    unsigned short bmBitsPixel; // Size=2 Offset=18
    void * bmBits; // Size=4 Offset=20
} *PtagBITMAP;
typedef struct tagRemHBITMAP // Size=8
{
    unsigned long cbData; // Size=4 Offset=0
    unsigned char data[1]; // Size=1 Offset=4
} *PtagRemHBITMAP;
typedef struct ICreateTypeLib // Size=4
{
} *PICreateTypeLib;
typedef struct _TOKEN_OWNER // Size=4
{
    void * Owner; // Size=4 Offset=0
} TOKEN_OWNER, *PTOKEN_OWNER;
typedef struct _CMSG_RC4_AUX_INFO // Size=8
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwBitLen; // Size=4 Offset=4
} CMSG_RC4_AUX_INFO, *PCMSG_RC4_AUX_INFO;
typedef struct IXMLHttpRequest // Size=4
{
} *PIXMLHttpRequest;
typedef struct _COAUTHIDENTITY // Size=28
{
    unsigned short * User; // Size=4 Offset=0
    unsigned long UserLength; // Size=4 Offset=4
    unsigned short * Domain; // Size=4 Offset=8
    unsigned long DomainLength; // Size=4 Offset=12
    unsigned short * Password; // Size=4 Offset=16
    unsigned long PasswordLength; // Size=4 Offset=20
    unsigned long Flags; // Size=4 Offset=24
} COAUTHIDENTITY, *PCOAUTHIDENTITY;
typedef struct _CERT_POLICY_ID // Size=8
{
    unsigned long cCertPolicyElementId; // Size=4 Offset=0
    char * * rgpszCertPolicyElementId; // Size=4 Offset=4
} CERT_POLICY_ID, *PCERT_POLICY_ID;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN // Size=4
{
    long fValue; // Size=4 Offset=0
} *PtMIXERCONTROLDETAILS_BOOLEAN;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING // Size=4
{
    unsigned short Length; // Size=2 Offset=0
    char NameString[1]; // Size=1 Offset=2
} IMAGE_RESOURCE_DIRECTORY_STRING, *PIMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IMAGE_DOS_HEADER // Size=64
{
    unsigned short e_magic; // Size=2 Offset=0
    unsigned short e_cblp; // Size=2 Offset=2
    unsigned short e_cp; // Size=2 Offset=4
    unsigned short e_crlc; // Size=2 Offset=6
    unsigned short e_cparhdr; // Size=2 Offset=8
    unsigned short e_minalloc; // Size=2 Offset=10
    unsigned short e_maxalloc; // Size=2 Offset=12
    unsigned short e_ss; // Size=2 Offset=14
    unsigned short e_sp; // Size=2 Offset=16
    unsigned short e_csum; // Size=2 Offset=18
    unsigned short e_ip; // Size=2 Offset=20
    unsigned short e_cs; // Size=2 Offset=22
    unsigned short e_lfarlc; // Size=2 Offset=24
    unsigned short e_ovno; // Size=2 Offset=26
    unsigned short e_res[4]; // Size=8 Offset=28
    unsigned short e_oemid; // Size=2 Offset=36
    unsigned short e_oeminfo; // Size=2 Offset=38
    unsigned short e_res2[10]; // Size=20 Offset=40
    long e_lfanew; // Size=4 Offset=60
} IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;
typedef struct _ADAPTER_STATUS // Size=60
{
    unsigned char adapter_address[6]; // Size=6 Offset=0
    unsigned char rev_major; // Size=1 Offset=6
    unsigned char reserved0; // Size=1 Offset=7
    unsigned char adapter_type; // Size=1 Offset=8
    unsigned char rev_minor; // Size=1 Offset=9
    unsigned short duration; // Size=2 Offset=10
    unsigned short frmr_recv; // Size=2 Offset=12
    unsigned short frmr_xmit; // Size=2 Offset=14
    unsigned short iframe_recv_err; // Size=2 Offset=16
    unsigned short xmit_aborts; // Size=2 Offset=18
    unsigned long xmit_success; // Size=4 Offset=20
    unsigned long recv_success; // Size=4 Offset=24
    unsigned short iframe_xmit_err; // Size=2 Offset=28
    unsigned short recv_buff_unavail; // Size=2 Offset=30
    unsigned short t1_timeouts; // Size=2 Offset=32
    unsigned short ti_timeouts; // Size=2 Offset=34
    unsigned long reserved1; // Size=4 Offset=36
    unsigned short free_ncbs; // Size=2 Offset=40
    unsigned short max_cfg_ncbs; // Size=2 Offset=42
    unsigned short max_ncbs; // Size=2 Offset=44
    unsigned short xmit_buf_unavail; // Size=2 Offset=46
    unsigned short max_dgram_size; // Size=2 Offset=48
    unsigned short pending_sess; // Size=2 Offset=50
    unsigned short max_cfg_sess; // Size=2 Offset=52
    unsigned short max_sess; // Size=2 Offset=54
    unsigned short max_sess_pkt_size; // Size=2 Offset=56
    unsigned short name_count; // Size=2 Offset=58
} ADAPTER_STATUS, *PADAPTER_STATUS;
typedef struct HDROP__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHDROP__;
typedef struct tagCOLORADJUSTMENT // Size=24
{
    unsigned short caSize; // Size=2 Offset=0
    unsigned short caFlags; // Size=2 Offset=2
    unsigned short caIlluminantIndex; // Size=2 Offset=4
    unsigned short caRedGamma; // Size=2 Offset=6
    unsigned short caGreenGamma; // Size=2 Offset=8
    unsigned short caBlueGamma; // Size=2 Offset=10
    unsigned short caReferenceBlack; // Size=2 Offset=12
    unsigned short caReferenceWhite; // Size=2 Offset=14
    short caContrast; // Size=2 Offset=16
    short caBrightness; // Size=2 Offset=18
    short caColorfulness; // Size=2 Offset=20
    short caRedGreenTint; // Size=2 Offset=22
} *PtagCOLORADJUSTMENT;
typedef struct _FPO_DATA // Size=16
{
    unsigned long ulOffStart; // Size=4 Offset=0
    unsigned long cbProcSize; // Size=4 Offset=4
    unsigned long cdwLocals; // Size=4 Offset=8
    unsigned short cdwParams; // Size=2 Offset=12
    struct
    {
        unsigned short cbProlog: 8; // Size=2 Offset=14 BitOffset=0 BitCount=8
        unsigned short cbRegs: 3; // Size=2 Offset=14 BitOffset=8 BitCount=3
        unsigned short fHasSEH: 1; // Size=2 Offset=14 BitOffset=11 BitCount=1
        unsigned short fUseBP: 1; // Size=2 Offset=14 BitOffset=12 BitCount=1
        unsigned short reserved: 1; // Size=2 Offset=14 BitOffset=13 BitCount=1
        unsigned short cbFrame: 2; // Size=2 Offset=14 BitOffset=14 BitCount=2
    };
} FPO_DATA, *PFPO_DATA;
typedef struct _SEC_WINNT_AUTH_IDENTITY_W // Size=28
{
    unsigned short * User; // Size=4 Offset=0
    unsigned long UserLength; // Size=4 Offset=4
    unsigned short * Domain; // Size=4 Offset=8
    unsigned long DomainLength; // Size=4 Offset=12
    unsigned short * Password; // Size=4 Offset=16
    unsigned long PasswordLength; // Size=4 Offset=20
    unsigned long Flags; // Size=4 Offset=24
} SEC_WINNT_AUTH_IDENTITY_W, *PSEC_WINNT_AUTH_IDENTITY_W;
typedef struct _SERVICE_TABLE_ENTRYA // Size=8
{
    char * lpServiceName; // Size=4 Offset=0
    void ( * lpServiceProc)(unsigned long,char * *); // Size=4 Offset=4
} SERVICE_TABLE_ENTRYA, *PSERVICE_TABLE_ENTRYA;
typedef struct _RPC_PROTSEQ_VECTORA // Size=8
{
    unsigned int Count; // Size=4 Offset=0
    unsigned char * Protseq[1]; // Size=4 Offset=4
} RPC_PROTSEQ_VECTORA, *PRPC_PROTSEQ_VECTORA;
typedef struct _MENU_EVENT_RECORD // Size=4
{
    unsigned int dwCommandId; // Size=4 Offset=0
} MENU_EVENT_RECORD, *PMENU_EVENT_RECORD;
typedef struct _REMOTE_NAME_INFOA // Size=12
{
    char * lpUniversalName; // Size=4 Offset=0
    char * lpConnectionName; // Size=4 Offset=4
    char * lpRemainingPath; // Size=4 Offset=8
} REMOTE_NAME_INFOA, *PREMOTE_NAME_INFOA;
typedef struct _CMSG_STREAM_INFO // Size=12
{
    unsigned long cbContent; // Size=4 Offset=0
    int ( * pfnStreamOutput)(void *,unsigned char *,unsigned long,int); // Size=4 Offset=4
    void * pvArg; // Size=4 Offset=8
} CMSG_STREAM_INFO, *PCMSG_STREAM_INFO;
typedef struct _DATATYPES_INFO_1W // Size=4
{
    unsigned short * pName; // Size=4 Offset=0
} DATATYPES_INFO_1W, *PDATATYPES_INFO_1W;
typedef struct _FIND_NAME_HEADER // Size=4
{
    unsigned short node_count; // Size=2 Offset=0
    unsigned char reserved; // Size=1 Offset=2
    unsigned char unique_group; // Size=1 Offset=3
} FIND_NAME_HEADER, *PFIND_NAME_HEADER;
typedef struct tagFILTERKEYS // Size=24
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned long iWaitMSec; // Size=4 Offset=8
    unsigned long iDelayMSec; // Size=4 Offset=12
    unsigned long iRepeatMSec; // Size=4 Offset=16
    unsigned long iBounceMSec; // Size=4 Offset=20
} *PtagFILTERKEYS;
typedef struct _FIND_NAME_BUFFER // Size=33
{
    unsigned char length; // Size=1 Offset=0
    unsigned char access_control; // Size=1 Offset=1
    unsigned char frame_control; // Size=1 Offset=2
    unsigned char destination_addr[6]; // Size=6 Offset=3
    unsigned char source_addr[6]; // Size=6 Offset=9
    unsigned char routing_info[18]; // Size=18 Offset=15
} FIND_NAME_BUFFER, *PFIND_NAME_BUFFER;
typedef struct _ACTION_HEADER // Size=8
{
    unsigned long transport_id; // Size=4 Offset=0
    unsigned short action_code; // Size=2 Offset=4
    unsigned short reserved; // Size=2 Offset=6
} ACTION_HEADER, *PACTION_HEADER;
typedef struct IOleCache2 // Size=4
{
} *PIOleCache2;
typedef struct _DOCINFOW // Size=20
{
    int cbSize; // Size=4 Offset=0
    unsigned short * lpszDocName; // Size=4 Offset=4
    unsigned short * lpszOutput; // Size=4 Offset=8
    unsigned short * lpszDatatype; // Size=4 Offset=12
    unsigned long fwType; // Size=4 Offset=16
} DOCINFOW, *PDOCINFOW;
typedef struct ISynchronizeMutex // Size=4
{
} *PISynchronizeMutex;
typedef struct tagSTATPROPSTG // Size=12
{
    unsigned short * lpwstrName; // Size=4 Offset=0
    unsigned long propid; // Size=4 Offset=4
    unsigned short vt; // Size=2 Offset=8
} *PtagSTATPROPSTG;
typedef struct HMIDI__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMIDI__;
typedef struct HMMIO__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMMIO__;
typedef class MSG_S2G_HEADER // Size=10
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwPCID; // Size=4 Offset=4
    unsigned char byCtrl; // Size=1 Offset=8
    unsigned char byCmd; // Size=1 Offset=9
} *PMSG_S2G_HEADER;
typedef struct tagMONITORINFOEXW // Size=104
{
    unsigned short szDevice[32]; // Size=64 Offset=40
} *PtagMONITORINFOEXW;
typedef struct IOleInPlaceFrame // Size=4
{
} *PIOleInPlaceFrame;
typedef struct tagOleMenuGroupWidths // Size=24
{
    long width[6]; // Size=24 Offset=0
} *PtagOleMenuGroupWidths;
typedef struct tagNEWTEXTMETRICW // Size=76
{
    long tmHeight; // Size=4 Offset=0
    long tmAscent; // Size=4 Offset=4
    long tmDescent; // Size=4 Offset=8
    long tmInternalLeading; // Size=4 Offset=12
    long tmExternalLeading; // Size=4 Offset=16
    long tmAveCharWidth; // Size=4 Offset=20
    long tmMaxCharWidth; // Size=4 Offset=24
    long tmWeight; // Size=4 Offset=28
    long tmOverhang; // Size=4 Offset=32
    long tmDigitizedAspectX; // Size=4 Offset=36
    long tmDigitizedAspectY; // Size=4 Offset=40
    unsigned short tmFirstChar; // Size=2 Offset=44
    unsigned short tmLastChar; // Size=2 Offset=46
    unsigned short tmDefaultChar; // Size=2 Offset=48
    unsigned short tmBreakChar; // Size=2 Offset=50
    unsigned char tmItalic; // Size=1 Offset=52
    unsigned char tmUnderlined; // Size=1 Offset=53
    unsigned char tmStruckOut; // Size=1 Offset=54
    unsigned char tmPitchAndFamily; // Size=1 Offset=55
    unsigned char tmCharSet; // Size=1 Offset=56
    unsigned long ntmFlags; // Size=4 Offset=60
    unsigned int ntmSizeEM; // Size=4 Offset=64
    unsigned int ntmCellHeight; // Size=4 Offset=68
    unsigned int ntmAvgWidth; // Size=4 Offset=72
} *PtagNEWTEXTMETRICW;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U // Size=4
{
    unsigned short Length; // Size=2 Offset=0
    unsigned short NameString[1]; // Size=2 Offset=2
} IMAGE_RESOURCE_DIR_STRING_U, *PIMAGE_RESOURCE_DIR_STRING_U;
typedef struct HMIXER__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMIXER__;
typedef struct IAdviseSink2 // Size=4
{
} *PIAdviseSink2;
typedef struct IOleAdviseHolder // Size=4
{
} *PIOleAdviseHolder;
typedef struct BATTERY_REPORTING_SCALE // Size=8
{
    unsigned long Granularity; // Size=4 Offset=0
    unsigned long Capacity; // Size=4 Offset=4
} *PBATTERY_REPORTING_SCALE;
typedef struct _complex // Size=16
{
    double x; // Size=8 Offset=0
    double y; // Size=8 Offset=8
} complex, *Pcomplex;
typedef struct tagMCI_RECORD_PARMS // Size=12
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwFrom; // Size=4 Offset=4
    unsigned long dwTo; // Size=4 Offset=8
} *PtagMCI_RECORD_PARMS;
typedef struct ITypeInfo2 // Size=4
{
} *PITypeInfo2;
typedef struct SERVICE_STATUS_HANDLE__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PSERVICE_STATUS_HANDLE__;
typedef struct IEnumSTATSTG // Size=4
{
} *PIEnumSTATSTG;
typedef struct tagMCI_VD_PLAY_PARMS // Size=16
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwFrom; // Size=4 Offset=4
    unsigned long dwTo; // Size=4 Offset=8
    unsigned long dwSpeed; // Size=4 Offset=12
} *PtagMCI_VD_PLAY_PARMS;
typedef struct _DRIVER_INFO_1W // Size=4
{
    unsigned short * pName; // Size=4 Offset=0
} DRIVER_INFO_1W, *PDRIVER_INFO_1W;
typedef struct IExternalConnection // Size=4
{
} *PIExternalConnection;
typedef union tagMIXERCONTROLA::__unnamed // Size=24
{
    struct
    {
        long lMinimum; // Size=4 Offset=0
        union
        {
            long lMaximum; // Size=4 Offset=4
            unsigned long dwMaximum; // Size=4 Offset=4
        };
    };
    unsigned long dwMinimum; // Size=4 Offset=0
    unsigned long dwReserved[6]; // Size=24 Offset=0
} *PtagMIXERCONTROLA::__unnamed;
typedef struct IOleClientSite // Size=4
{
} *PIOleClientSite;
typedef struct _exception // Size=32
{
    int type; // Size=4 Offset=0
    char * name; // Size=4 Offset=4
    double arg1; // Size=8 Offset=8
    double arg2; // Size=8 Offset=16
    double retval; // Size=8 Offset=24
} exception, *Pexception;
typedef struct HWAVE__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHWAVE__;
typedef struct _DRIVER_INFO_2A // Size=24
{
    unsigned long cVersion; // Size=4 Offset=0
    char * pName; // Size=4 Offset=4
    char * pEnvironment; // Size=4 Offset=8
    char * pDriverPath; // Size=4 Offset=12
    char * pDataFile; // Size=4 Offset=16
    char * pConfigFile; // Size=4 Offset=20
} DRIVER_INFO_2A, *PDRIVER_INFO_2A;
typedef struct _cpinfo // Size=20
{
    unsigned int MaxCharSize; // Size=4 Offset=0
    unsigned char DefaultChar[2]; // Size=2 Offset=4
    unsigned char LeadByte[12]; // Size=12 Offset=6
} cpinfo, *Pcpinfo;
typedef struct IXMLDOMParseError // Size=4
{
} *PIXMLDOMParseError;
typedef struct _flowspec // Size=32
{
    unsigned long TokenRate; // Size=4 Offset=0
    unsigned long TokenBucketSize; // Size=4 Offset=4
    unsigned long PeakBandwidth; // Size=4 Offset=8
    unsigned long Latency; // Size=4 Offset=12
    unsigned long DelayVariation; // Size=4 Offset=16
    unsigned long ServiceType; // Size=4 Offset=20
    unsigned long MaxSduSize; // Size=4 Offset=24
    unsigned long MinimumPolicedSize; // Size=4 Offset=28
} flowspec, *Pflowspec;
typedef struct IMonikerProp // Size=4
{
} *PIMonikerProp;
typedef struct _PSFEATURE_OUTPUT // Size=8
{
    int bPageIndependent; // Size=4 Offset=0
    int bSetPageDevice; // Size=4 Offset=4
} PSFEATURE_OUTPUT, *PPSFEATURE_OUTPUT;
typedef struct tagMIDIINCAPSW // Size=76
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned long dwSupport; // Size=4 Offset=72
} *PtagMIDIINCAPSW;
typedef struct IEnumVARIANT // Size=4
{
} *PIEnumVARIANT;
typedef struct netent // Size=16
{
    char * n_name; // Size=4 Offset=0
    char * * n_aliases; // Size=4 Offset=4
    short n_addrtype; // Size=2 Offset=8
    unsigned long n_net; // Size=4 Offset=12
} *Pnetent;
typedef struct IRecordInfo // Size=4
{
} *PIRecordInfo;
typedef struct IBindStatusCallback // Size=4
{
} *PIBindStatusCallback;
typedef struct tagCURSORSHAPE // Size=24
{
    int xHotSpot; // Size=4 Offset=0
    int yHotSpot; // Size=4 Offset=4
    int cx; // Size=4 Offset=8
    int cy; // Size=4 Offset=12
    int cbWidth; // Size=4 Offset=16
    unsigned char Planes; // Size=1 Offset=20
    unsigned char BitsPixel; // Size=1 Offset=21
} *PtagCURSORSHAPE;
typedef struct _CERT_SYSTEM_STORE_INFO // Size=4
{
    unsigned long cbSize; // Size=4 Offset=0
} CERT_SYSTEM_STORE_INFO, *PCERT_SYSTEM_STORE_INFO;
typedef struct HCOLORSPACE__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHCOLORSPACE__;
typedef struct _userBITMAP // Size=28
{
    long bmType; // Size=4 Offset=0
    long bmWidth; // Size=4 Offset=4
    long bmHeight; // Size=4 Offset=8
    long bmWidthBytes; // Size=4 Offset=12
    unsigned short bmPlanes; // Size=2 Offset=16
    unsigned short bmBitsPixel; // Size=2 Offset=18
    unsigned long cbSize; // Size=4 Offset=20
    unsigned char pBuffer[1]; // Size=1 Offset=24
} userBITMAP, *PuserBITMAP;
typedef struct ICodeInstall // Size=4
{
} *PICodeInstall;
typedef struct XMLDOMDocumentEvents // Size=4
{
} *PXMLDOMDocumentEvents;
typedef struct _TAPE_CREATE_PARTITION // Size=12
{
    unsigned long Method; // Size=4 Offset=0
    unsigned long Count; // Size=4 Offset=4
    unsigned long Size; // Size=4 Offset=8
} TAPE_CREATE_PARTITION, *PTAPE_CREATE_PARTITION;
typedef struct joyinfo_tag // Size=16
{
    unsigned int wXpos; // Size=4 Offset=0
    unsigned int wYpos; // Size=4 Offset=4
    unsigned int wZpos; // Size=4 Offset=8
    unsigned int wButtons; // Size=4 Offset=12
} *Pjoyinfo_tag;
typedef struct tagSOUNDSENTRYW // Size=48
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    unsigned long iFSTextEffect; // Size=4 Offset=8
    unsigned long iFSTextEffectMSec; // Size=4 Offset=12
    unsigned long iFSTextEffectColorBits; // Size=4 Offset=16
    unsigned long iFSGrafEffect; // Size=4 Offset=20
    unsigned long iFSGrafEffectMSec; // Size=4 Offset=24
    unsigned long iFSGrafEffectColor; // Size=4 Offset=28
    unsigned long iWindowsEffect; // Size=4 Offset=32
    unsigned long iWindowsEffectMSec; // Size=4 Offset=36
    unsigned short * lpszWindowsEffectDLL; // Size=4 Offset=40
    unsigned long iWindowsEffectOrdinal; // Size=4 Offset=44
} *PtagSOUNDSENTRYW;
typedef struct tagMCI_SET_PARMS // Size=12
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwTimeFormat; // Size=4 Offset=4
    unsigned long dwAudio; // Size=4 Offset=8
} *PtagMCI_SET_PARMS;
typedef struct IDummyHICONIncluder // Size=4
{
} *PIDummyHICONIncluder;
typedef struct _PRINTER_INFO_3 // Size=4
{
    void * pSecurityDescriptor; // Size=4 Offset=0
} PRINTER_INFO_3, *PPRINTER_INFO_3;
typedef struct IRpcHelper // Size=4
{
} *PIRpcHelper;
typedef union _IMAGE_SECTION_HEADER::__unnamed // Size=4
{
    unsigned long PhysicalAddress; // Size=4 Offset=0
    unsigned long VirtualSize; // Size=4 Offset=0
} IMAGE_SECTION_HEADER::__unnamed, *PIMAGE_SECTION_HEADER::__unnamed;
typedef struct tagSTGOPTIONS // Size=12
{
    unsigned short usVersion; // Size=2 Offset=0
    unsigned short reserved; // Size=2 Offset=2
    unsigned long ulSectorSize; // Size=4 Offset=4
    unsigned short * pwcsTemplateFile; // Size=4 Offset=8
} *PtagSTGOPTIONS;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST // Size=12
{
    unsigned long NumberOfAssignedProcesses; // Size=4 Offset=0
    unsigned long NumberOfProcessIdsInList; // Size=4 Offset=4
    unsigned long ProcessIdList[1]; // Size=4 Offset=8
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct IMalloc // Size=4
{
} *PIMalloc;
typedef struct _FILE_NOTIFY_INFORMATION // Size=16
{
    unsigned long NextEntryOffset; // Size=4 Offset=0
    unsigned long Action; // Size=4 Offset=4
    unsigned long FileNameLength; // Size=4 Offset=8
    unsigned short FileName[1]; // Size=2 Offset=12
} FILE_NOTIFY_INFORMATION, *PFILE_NOTIFY_INFORMATION;
typedef class type_info // Size=12
{
    void * _m_data; // Size=4 Offset=4
    char _m_d_name[1]; // Size=1 Offset=8
} *Ptype_info;
typedef struct NUMPARSE // Size=24
{
    int cDig; // Size=4 Offset=0
    unsigned long dwInFlags; // Size=4 Offset=4
    unsigned long dwOutFlags; // Size=4 Offset=8
    int cchUsed; // Size=4 Offset=12
    int nBaseShift; // Size=4 Offset=16
    int nPwr10; // Size=4 Offset=20
} *PNUMPARSE;
typedef struct _IMAGE_RESOURCE_DIRECTORY // Size=16
{
    unsigned long Characteristics; // Size=4 Offset=0
    unsigned long TimeDateStamp; // Size=4 Offset=4
    unsigned short MajorVersion; // Size=2 Offset=8
    unsigned short MinorVersion; // Size=2 Offset=10
    unsigned short NumberOfNamedEntries; // Size=2 Offset=12
    unsigned short NumberOfIdEntries; // Size=2 Offset=14
} IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY;
typedef struct IMarshal // Size=4
{
} *PIMarshal;
typedef struct IForegroundTransfer // Size=4
{
} *PIForegroundTransfer;
typedef struct _ldiv_t // Size=8
{
    long quot; // Size=4 Offset=0
    long rem; // Size=4 Offset=4
} ldiv_t, *Pldiv_t;
typedef struct _SERVICE_DESCRIPTIONW // Size=4
{
    unsigned short * lpDescription; // Size=4 Offset=0
} SERVICE_DESCRIPTIONW, *PSERVICE_DESCRIPTIONW;
typedef struct _NT_TIB32 // Size=28
{
    unsigned long ExceptionList; // Size=4 Offset=0
    unsigned long StackBase; // Size=4 Offset=4
    unsigned long StackLimit; // Size=4 Offset=8
    unsigned long SubSystemTib; // Size=4 Offset=12
    union
    {
        unsigned long FiberData; // Size=4 Offset=16
        unsigned long Version; // Size=4 Offset=16
    };
    unsigned long ArbitraryUserPointer; // Size=4 Offset=20
    unsigned long Self; // Size=4 Offset=24
} NT_TIB32, *PNT_TIB32;
typedef struct _iobuf // Size=32
{
    char * _ptr; // Size=4 Offset=0
    int _cnt; // Size=4 Offset=4
    char * _base; // Size=4 Offset=8
    int _flag; // Size=4 Offset=12
    int _file; // Size=4 Offset=16
    int _charbuf; // Size=4 Offset=20
    int _bufsiz; // Size=4 Offset=24
    char * _tmpfname; // Size=4 Offset=28
} iobuf, *Piobuf;
typedef struct _IMAGE_TLS_DIRECTORY64 // Size=40
{
    unsigned __int64 StartAddressOfRawData; // Size=8 Offset=0
    unsigned __int64 EndAddressOfRawData; // Size=8 Offset=8
    unsigned __int64 AddressOfIndex; // Size=8 Offset=16
    unsigned __int64 AddressOfCallBacks; // Size=8 Offset=24
    unsigned long SizeOfZeroFill; // Size=4 Offset=32
    unsigned long Characteristics; // Size=4 Offset=36
} IMAGE_TLS_DIRECTORY64, *PIMAGE_TLS_DIRECTORY64;
typedef struct HWAVEOUT__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHWAVEOUT__;
typedef struct DDEDATA // Size=6
{
    struct
    {
        unsigned short unused: 12; // Size=2 Offset=0 BitOffset=0 BitCount=12
        unsigned short fResponse: 1; // Size=2 Offset=0 BitOffset=12 BitCount=1
        unsigned short fRelease: 1; // Size=2 Offset=0 BitOffset=13 BitCount=1
        unsigned short reserved: 1; // Size=2 Offset=0 BitOffset=14 BitCount=1
        unsigned short fAckReq: 1; // Size=2 Offset=0 BitOffset=15 BitCount=1
    };
    short cfFormat; // Size=2 Offset=2
    unsigned char Value[1]; // Size=1 Offset=4
} *PDDEDATA;
typedef struct _CRYPT_DECODE_PARA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    void * ( * pfnAlloc)(unsigned int); // Size=4 Offset=4
    void ( * pfnFree)(void *); // Size=4 Offset=8
} CRYPT_DECODE_PARA, *PCRYPT_DECODE_PARA;
typedef struct IXMLDOMText // Size=4
{
} *PIXMLDOMText;
typedef struct IXMLDOMCDATASection // Size=4
{
} *PIXMLDOMCDATASection;
typedef union tagMIXERCONTROLW::__unnamed // Size=24
{
    struct
    {
        long lMinimum; // Size=4 Offset=0
        union
        {
            long lMaximum; // Size=4 Offset=4
            unsigned long dwMaximum; // Size=4 Offset=4
        };
    };
    unsigned long dwMinimum; // Size=4 Offset=0
    unsigned long dwReserved[6]; // Size=24 Offset=0
} *PtagMIXERCONTROLW::__unnamed;
typedef struct _EVENTLOG_FULL_INFORMATION // Size=4
{
    unsigned long dwFull; // Size=4 Offset=0
} EVENTLOG_FULL_INFORMATION, *PEVENTLOG_FULL_INFORMATION;
typedef struct IEnumOLEVERB // Size=4
{
} *PIEnumOLEVERB;
typedef struct AsyncIAdviseSink // Size=4
{
} *PAsyncIAdviseSink;
typedef struct AsyncIAdviseSink2 // Size=4
{
} *PAsyncIAdviseSink2;
typedef struct HHOOK__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHHOOK__;
typedef struct ILockBytes // Size=4
{
} *PILockBytes;
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS // Size=8
{
    unsigned long cbSize; // Size=4 Offset=0
    int fCommercial; // Size=4 Offset=4
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
typedef struct _PERF_COUNTER_BLOCK // Size=4
{
    unsigned long ByteLength; // Size=4 Offset=0
} PERF_COUNTER_BLOCK, *PPERF_COUNTER_BLOCK;
typedef struct _TAPE_PREPARE // Size=8
{
    unsigned long Operation; // Size=4 Offset=0
    unsigned char Immediate; // Size=1 Offset=4
} TAPE_PREPARE, *PTAPE_PREPARE;
typedef struct ICatalogFileInfo // Size=4
{
} *PICatalogFileInfo;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS // Size=4
{
    unsigned long UIRestrictionsClass; // Size=4 Offset=0
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct RPC_CLIENT_INFORMATION1 // Size=16
{
    unsigned char * UserName; // Size=4 Offset=0
    unsigned char * ComputerName; // Size=4 Offset=4
    unsigned short Privilege; // Size=2 Offset=8
    unsigned long AuthFlags; // Size=4 Offset=12
} *PRPC_CLIENT_INFORMATION1;
typedef struct IBlockingLock // Size=4
{
} *PIBlockingLock;
typedef struct LIST_ENTRY64 // Size=16
{
    unsigned __int64 Flink; // Size=8 Offset=0
    unsigned __int64 Blink; // Size=8 Offset=8
} *PLIST_ENTRY64;
typedef struct _REPARSE_GUID_DATA_BUFFER::__unnamed // Size=1
{
    unsigned char DataBuffer[1]; // Size=1 Offset=0
} REPARSE_GUID_DATA_BUFFER::__unnamed, *PREPARSE_GUID_DATA_BUFFER::__unnamed;
typedef struct HPEN__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHPEN__;
typedef struct ICreateTypeInfo // Size=4
{
} *PICreateTypeInfo;
typedef struct ITimeAndNoticeControl // Size=4
{
} *PITimeAndNoticeControl;
typedef struct tagI_RpcProxyCallbackInterface // Size=12
{
    long ( * IsValidMachineFn)(char *,char *,unsigned long); // Size=4 Offset=0
    long ( * GetClientAddressFn)(void *,char *,unsigned long *); // Size=4 Offset=4
    long ( * GetConnectionTimeoutFn)(unsigned long *); // Size=4 Offset=8
} *PtagI_RpcProxyCallbackInterface;
typedef struct _DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed::__unnamed // Size=2
{
    unsigned char MediumType; // Size=1 Offset=0
    unsigned char DensityCode; // Size=1 Offset=1
} DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed::__unnamed, *PDEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed::__unnamed;
typedef struct AsyncIUnknown // Size=4
{
} *PAsyncIUnknown;
typedef struct IEnumFORMATETC // Size=4
{
} *PIEnumFORMATETC;
typedef struct _tagCODEBASEHOLD // Size=24
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned short * szDistUnit; // Size=4 Offset=4
    unsigned short * szCodeBase; // Size=4 Offset=8
    unsigned long dwVersionMS; // Size=4 Offset=12
    unsigned long dwVersionLS; // Size=4 Offset=16
    unsigned long dwStyle; // Size=4 Offset=20
} tagCODEBASEHOLD, *PtagCODEBASEHOLD;
typedef struct _CRYPT_URL_INFO // Size=16
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwSyncDeltaTime; // Size=4 Offset=4
    unsigned long cGroup; // Size=4 Offset=8
    unsigned long * rgcGroupEntry; // Size=4 Offset=12
} CRYPT_URL_INFO, *PCRYPT_URL_INFO;
typedef struct IXMLDOMProcessingInstruction // Size=4
{
} *PIXMLDOMProcessingInstruction;
typedef struct _TAPE_GET_DRIVE_PARAMETERS // Size=32
{
    unsigned char ECC; // Size=1 Offset=0
    unsigned char Compression; // Size=1 Offset=1
    unsigned char DataPadding; // Size=1 Offset=2
    unsigned char ReportSetmarks; // Size=1 Offset=3
    unsigned long DefaultBlockSize; // Size=4 Offset=4
    unsigned long MaximumBlockSize; // Size=4 Offset=8
    unsigned long MinimumBlockSize; // Size=4 Offset=12
    unsigned long MaximumPartitionCount; // Size=4 Offset=16
    unsigned long FeaturesLow; // Size=4 Offset=20
    unsigned long FeaturesHigh; // Size=4 Offset=24
    unsigned long EOTWarningZoneSize; // Size=4 Offset=28
} TAPE_GET_DRIVE_PARAMETERS, *PTAPE_GET_DRIVE_PARAMETERS;
typedef struct ISurrogateService // Size=4
{
} *PISurrogateService;
typedef struct IProcessLock // Size=4
{
} *PIProcessLock;
typedef struct _TAPE_SET_MEDIA_PARAMETERS // Size=4
{
    unsigned long BlockSize; // Size=4 Offset=0
} TAPE_SET_MEDIA_PARAMETERS, *PTAPE_SET_MEDIA_PARAMETERS;
typedef struct DDEACK // Size=2
{
    unsigned short bAppReturnCode: 8; // Size=2 Offset=0 BitOffset=0 BitCount=8
    unsigned short reserved: 6; // Size=2 Offset=0 BitOffset=8 BitCount=6
    unsigned short fBusy: 1; // Size=2 Offset=0 BitOffset=14 BitCount=1
    unsigned short fAck: 1; // Size=2 Offset=0 BitOffset=15 BitCount=1
} *PDDEACK;
typedef struct tagMDICREATESTRUCTW // Size=36
{
    unsigned short * szClass; // Size=4 Offset=0
    unsigned short * szTitle; // Size=4 Offset=4
    void * hOwner; // Size=4 Offset=8
    int x; // Size=4 Offset=12
    int y; // Size=4 Offset=16
    int cx; // Size=4 Offset=20
    int cy; // Size=4 Offset=24
    unsigned long style; // Size=4 Offset=28
    long lParam; // Size=4 Offset=32
} *PtagMDICREATESTRUCTW;
typedef struct tagMCI_ANIM_PLAY_PARMS // Size=16
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned long dwFrom; // Size=4 Offset=4
    unsigned long dwTo; // Size=4 Offset=8
    unsigned long dwSpeed; // Size=4 Offset=12
} *PtagMCI_ANIM_PLAY_PARMS;
typedef struct IHttpNegotiate // Size=4
{
} *PIHttpNegotiate;
typedef struct IGlobalInterfaceTable // Size=4
{
} *PIGlobalInterfaceTable;
typedef struct IDirectWriterLock // Size=4
{
} *PIDirectWriterLock;
typedef struct SCARD_READERSTATEW // Size=56
{
    unsigned short * szReader; // Size=4 Offset=0
    void * pvUserData; // Size=4 Offset=4
    unsigned long dwCurrentState; // Size=4 Offset=8
    unsigned long dwEventState; // Size=4 Offset=12
    unsigned long cbAtr; // Size=4 Offset=16
    unsigned char rgbAtr[36]; // Size=36 Offset=20
} *PSCARD_READERSTATEW;
typedef struct _IMAGE_IMPORT_DESCRIPTOR // Size=20
{
    union
    {
        unsigned long Characteristics; // Size=4 Offset=0
        unsigned long OriginalFirstThunk; // Size=4 Offset=0
    };
    unsigned long TimeDateStamp; // Size=4 Offset=4
    unsigned long ForwarderChain; // Size=4 Offset=8
    unsigned long Name; // Size=4 Offset=12
    unsigned long FirstThunk; // Size=4 Offset=16
} IMAGE_IMPORT_DESCRIPTOR, *PIMAGE_IMPORT_DESCRIPTOR;
typedef struct _EXCEPTION_REGISTRATION_RECORD // Size=0
{
} EXCEPTION_REGISTRATION_RECORD, *PEXCEPTION_REGISTRATION_RECORD;
typedef struct ILayoutStorage // Size=4
{
} *PILayoutStorage;
typedef struct _tagDATAINFO // Size=16
{
    unsigned long ulTotalSize; // Size=4 Offset=0
    unsigned long ulavrPacketSize; // Size=4 Offset=4
    unsigned long ulConnectSpeed; // Size=4 Offset=8
    unsigned long ulProcessorSpeed; // Size=4 Offset=12
} tagDATAINFO, *PtagDATAINFO;
typedef struct IXMLDocument // Size=4
{
} *PIXMLDocument;
typedef struct IXMLElement // Size=4
{
} *PIXMLElement;
typedef struct _DISK_LOGGING // Size=12
{
    unsigned char Function; // Size=1 Offset=0
    void * BufferAddress; // Size=4 Offset=4
    unsigned long BufferSize; // Size=4 Offset=8
} DISK_LOGGING, *PDISK_LOGGING;
typedef struct _EXCEPTION_RECORD64 // Size=152
{
    unsigned long ExceptionCode; // Size=4 Offset=0
    unsigned long ExceptionFlags; // Size=4 Offset=4
    unsigned __int64 ExceptionRecord; // Size=8 Offset=8
    unsigned __int64 ExceptionAddress; // Size=8 Offset=16
    unsigned long NumberParameters; // Size=4 Offset=24
    unsigned long __unusedAlignment; // Size=4 Offset=28
    unsigned __int64 ExceptionInformation[15]; // Size=120 Offset=32
} EXCEPTION_RECORD64, *PEXCEPTION_RECORD64;
typedef struct IXMLDocument2 // Size=4
{
} *PIXMLDocument2;
typedef struct ICreateTypeInfo2 // Size=4
{
} *PICreateTypeInfo2;
typedef struct pvalueW // Size=16
{
    unsigned short * pv_valuename; // Size=4 Offset=0
    int pv_valuelen; // Size=4 Offset=4
    void * pv_value_context; // Size=4 Offset=8
    unsigned long pv_type; // Size=4 Offset=12
} *PpvalueW;
typedef struct tagMCI_INFO_PARMSA // Size=12
{
    unsigned long dwCallback; // Size=4 Offset=0
    char * lpstrReturn; // Size=4 Offset=4
    unsigned long dwRetSize; // Size=4 Offset=8
} *PtagMCI_INFO_PARMSA;
typedef struct IFillLockBytes // Size=4
{
} *PIFillLockBytes;
typedef struct _SHQUERYRBINFO // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    __int64 i64Size; // Size=8 Offset=4
    __int64 i64NumItems; // Size=8 Offset=12
} SHQUERYRBINFO, *PSHQUERYRBINFO;
typedef struct IInternetProtocolRoot // Size=4
{
} *PIInternetProtocolRoot;
typedef struct IInternetSession // Size=4
{
} *PIInternetSession;
typedef struct IXMLDOMImplementation // Size=4
{
} *PIXMLDOMImplementation;
typedef struct _PSFEATURE_CUSTPAPER // Size=20
{
    long lOrientation; // Size=4 Offset=0
    long lWidth; // Size=4 Offset=4
    long lHeight; // Size=4 Offset=8
    long lWidthOffset; // Size=4 Offset=12
    long lHeightOffset; // Size=4 Offset=16
} PSFEATURE_CUSTPAPER, *PPSFEATURE_CUSTPAPER;
typedef struct IProgressNotify // Size=4
{
} *PIProgressNotify;
typedef struct _xml_error // Size=32
{
    unsigned int _nLine; // Size=4 Offset=0
    unsigned short * _pchBuf; // Size=4 Offset=4
    unsigned int _cchBuf; // Size=4 Offset=8
    unsigned int _ich; // Size=4 Offset=12
    unsigned short * _pszFound; // Size=4 Offset=16
    unsigned short * _pszExpected; // Size=4 Offset=20
    unsigned long _reserved1; // Size=4 Offset=24
    unsigned long _reserved2; // Size=4 Offset=28
} xml_error, *Pxml_error;
typedef struct protoent // Size=12
{
    char * p_name; // Size=4 Offset=0
    char * * p_aliases; // Size=4 Offset=4
    short p_proto; // Size=2 Offset=8
} *Pprotoent;
typedef struct HDESK__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHDESK__;
typedef struct MENUITEMTEMPLATE // Size=6
{
    unsigned short mtOption; // Size=2 Offset=0
    unsigned short mtID; // Size=2 Offset=2
    unsigned short mtString[1]; // Size=2 Offset=4
} *PMENUITEMTEMPLATE;
typedef struct DDEPOKE // Size=6
{
    struct
    {
        unsigned short unused: 13; // Size=2 Offset=0 BitOffset=0 BitCount=13
        unsigned short fRelease: 1; // Size=2 Offset=0 BitOffset=13 BitCount=1
        unsigned short fReserved: 2; // Size=2 Offset=0 BitOffset=14 BitCount=2
    };
    short cfFormat; // Size=2 Offset=2
    unsigned char Value[1]; // Size=1 Offset=4
} *PDDEPOKE;
typedef struct DDELN // Size=4
{
    struct
    {
        unsigned short unused: 13; // Size=2 Offset=0 BitOffset=0 BitCount=13
        unsigned short fRelease: 1; // Size=2 Offset=0 BitOffset=13 BitCount=1
        unsigned short fDeferUpd: 1; // Size=2 Offset=0 BitOffset=14 BitCount=1
        unsigned short fAckReq: 1; // Size=2 Offset=0 BitOffset=15 BitCount=1
    };
    short cfFormat; // Size=2 Offset=2
} *PDDELN;
typedef struct DDEUP // Size=6
{
    struct
    {
        unsigned short unused: 12; // Size=2 Offset=0 BitOffset=0 BitCount=12
        unsigned short fAck: 1; // Size=2 Offset=0 BitOffset=12 BitCount=1
        unsigned short fRelease: 1; // Size=2 Offset=0 BitOffset=13 BitCount=1
        unsigned short fReserved: 1; // Size=2 Offset=0 BitOffset=14 BitCount=1
        unsigned short fAckReq: 1; // Size=2 Offset=0 BitOffset=15 BitCount=1
    };
    short cfFormat; // Size=2 Offset=2
    unsigned char rgb[1]; // Size=1 Offset=4
} *PDDEUP;
typedef struct RPC_STATS_VECTOR // Size=8
{
    unsigned int Count; // Size=4 Offset=0
    unsigned long Stats[1]; // Size=4 Offset=4
} *PRPC_STATS_VECTOR;
typedef struct _RPC_BINDING_VECTOR // Size=8
{
    unsigned long Count; // Size=4 Offset=0
    void * BindingH[1]; // Size=4 Offset=4
} RPC_BINDING_VECTOR, *PRPC_BINDING_VECTOR;
typedef struct tagRemSNB // Size=12
{
    unsigned long ulCntStr; // Size=4 Offset=0
    unsigned long ulCntChar; // Size=4 Offset=4
    unsigned short rgString[1]; // Size=2 Offset=8
} *PtagRemSNB;
typedef struct _PUBLICKEYSTRUC // Size=8
{
    unsigned char bType; // Size=1 Offset=0
    unsigned char bVersion; // Size=1 Offset=1
    unsigned short reserved; // Size=2 Offset=2
    unsigned int aiKeyAlg; // Size=4 Offset=4
} PUBLICKEYSTRUC, *PPUBLICKEYSTRUC;
typedef struct IOleInPlaceSite // Size=4
{
} *PIOleInPlaceSite;
typedef struct IRpcChannelBuffer2 // Size=4
{
} *PIRpcChannelBuffer2;
typedef struct AsyncIPipeByte // Size=4
{
} *PAsyncIPipeByte;
typedef struct IOplockStorage // Size=4
{
} *PIOplockStorage;
typedef struct IEnumContextProps // Size=4
{
} *PIEnumContextProps;
typedef struct tagGCP_RESULTSW // Size=36
{
    unsigned long lStructSize; // Size=4 Offset=0
    unsigned short * lpOutString; // Size=4 Offset=4
    unsigned int * lpOrder; // Size=4 Offset=8
    int * lpDx; // Size=4 Offset=12
    int * lpCaretPos; // Size=4 Offset=16
    char * lpClass; // Size=4 Offset=20
    unsigned short * lpGlyphs; // Size=4 Offset=24
    unsigned int nGlyphs; // Size=4 Offset=28
    int nMaxFit; // Size=4 Offset=32
} *PtagGCP_RESULTSW;
typedef struct IPrintDialogCallback // Size=4
{
} *PIPrintDialogCallback;
typedef struct _IMAGE_IMPORT_BY_NAME // Size=4
{
    unsigned short Hint; // Size=2 Offset=0
    unsigned char Name[1]; // Size=1 Offset=2
} IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME;
typedef struct IRpcChannelBuffer3 // Size=4
{
} *PIRpcChannelBuffer3;
typedef struct IPipeByte // Size=4
{
} *PIPipeByte;
typedef struct IAddrTrackingControl // Size=4
{
} *PIAddrTrackingControl;
typedef class MSG_CG2Z_DERBY_TICK // Size=9
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    int iDerbyIndex; // Size=4 Offset=4
    unsigned char byDerbyTick; // Size=1 Offset=8
} *PMSG_CG2Z_DERBY_TICK;
typedef struct IXTLRuntime // Size=4
{
} *PIXTLRuntime;
typedef struct IRpcSyntaxNegotiate // Size=4
{
} *PIRpcSyntaxNegotiate;
typedef struct ISynchronizeContainer // Size=4
{
} *PISynchronizeContainer;
typedef struct IHttpSecurity // Size=4
{
} *PIHttpSecurity;
typedef union _CHAR_INFO::__unnamed // Size=2
{
    unsigned short UnicodeChar; // Size=2 Offset=0
    char AsciiChar; // Size=1 Offset=0
} CHAR_INFO::__unnamed, *PCHAR_INFO::__unnamed;
typedef struct __s_GUID // Size=16
{
    unsigned long Data1; // Size=4 Offset=0
    unsigned short Data2; // Size=2 Offset=4
    unsigned short Data3; // Size=2 Offset=6
    unsigned char Data4[8]; // Size=8 Offset=8
} _s_GUID, *P_s_GUID;
typedef struct IXMLDOMNotation // Size=4
{
} *PIXMLDOMNotation;
typedef struct IXMLDOMEntity // Size=4
{
} *PIXMLDOMEntity;
typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwMsgEncodingType; // Size=4 Offset=4
    unsigned long hCryptProv; // Size=4 Offset=8
} CRYPT_KEY_VERIFY_MESSAGE_PARA, *PCRYPT_KEY_VERIFY_MESSAGE_PARA;
typedef struct IAsyncRpcChannelBuffer // Size=4
{
} *PIAsyncRpcChannelBuffer;
typedef struct IThumbnailExtractor // Size=4
{
} *PIThumbnailExtractor;
typedef union _IMAGE_THUNK_DATA64::__unnamed // Size=8
{
    unsigned __int64 ForwarderString; // Size=8 Offset=0
    unsigned __int64 Function; // Size=8 Offset=0
    unsigned __int64 Ordinal; // Size=8 Offset=0
    unsigned __int64 AddressOfData; // Size=8 Offset=0
} IMAGE_THUNK_DATA64::__unnamed, *PIMAGE_THUNK_DATA64::__unnamed;
typedef struct _CERT_CHAIN_ENGINE_CONFIG // Size=40
{
    unsigned long cbSize; // Size=4 Offset=0
    void * hRestrictedRoot; // Size=4 Offset=4
    void * hRestrictedTrust; // Size=4 Offset=8
    void * hRestrictedOther; // Size=4 Offset=12
    unsigned long cAdditionalStore; // Size=4 Offset=16
    void * * rghAdditionalStore; // Size=4 Offset=20
    unsigned long dwFlags; // Size=4 Offset=24
    unsigned long dwUrlRetrievalTimeout; // Size=4 Offset=28
    unsigned long MaximumCachedCertificates; // Size=4 Offset=32
    unsigned long CycleDetectionModulus; // Size=4 Offset=36
} CERT_CHAIN_ENGINE_CONFIG, *PCERT_CHAIN_ENGINE_CONFIG;
typedef struct AsyncIPipeLong // Size=4
{
} *PAsyncIPipeLong;
typedef struct ITypeFactory // Size=4
{
} *PITypeFactory;
typedef struct IInternetHostSecurityManager // Size=4
{
} *PIInternetHostSecurityManager;
typedef struct ICreateErrorInfo // Size=4
{
} *PICreateErrorInfo;
typedef class MSG_Z2CG_LOTTO_BET // Size=9
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    unsigned char arrLottoNum[5]; // Size=5 Offset=4
} *PMSG_Z2CG_LOTTO_BET;
typedef struct HSTR__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHSTR__;
typedef struct _ACL_REVISION_INFORMATION // Size=4
{
    unsigned long AclRevision; // Size=4 Offset=0
} ACL_REVISION_INFORMATION, *PACL_REVISION_INFORMATION;
typedef struct IInternalUnknown // Size=4
{
} *PIInternalUnknown;
typedef class MSG_G2S_SVR_LOGIN // Size=11
{
    class MSG_S2G_HEADER MsgHeader; // Size=10 Offset=0
    unsigned char byThisServerID; // Size=1 Offset=10
} *PMSG_G2S_SVR_LOGIN;
typedef struct IROTData // Size=4
{
} *PIROTData;
typedef class MSG_Z2CG_DERBY_BET // Size=7
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    unsigned char byBetCase; // Size=1 Offset=4
    unsigned short wBetMoney; // Size=2 Offset=5
} *PMSG_Z2CG_DERBY_BET;
typedef struct HMIXEROBJ__ // Size=4
{
    int unused; // Size=4 Offset=0
} *PHMIXEROBJ__;
typedef struct IAuthenticate // Size=4
{
} *PIAuthenticate;
typedef struct IXMLError // Size=4
{
} *PIXMLError;
typedef struct ISoftDistExt // Size=4
{
} *PISoftDistExt;
typedef struct IXMLAttribute // Size=4
{
} *PIXMLAttribute;
typedef struct IPipeLong // Size=4
{
} *PIPipeLong;
typedef struct IPipeDouble // Size=4
{
} *PIPipeDouble;
typedef class std::logic_error // Size=40
{
    class std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str; // Size=28 Offset=12
} *Pstd::logic_error;
typedef class std::length_error // Size=40
{
} *Pstd::length_error;
typedef class exception // Size=12
{
    char * _m_what; // Size=4 Offset=4
    int _m_doFree; // Size=4 Offset=8
} *Pexception;
typedef class std::runtime_error // Size=40
{
    class std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Str; // Size=28 Offset=12
} *Pstd::runtime_error;
typedef struct std::ctype_base // Size=8
{
} *Pstd::ctype_base;
typedef class std::locale::id // Size=4
{
    union
    {
        unsigned int _Id; // Size=4 Offset=0
        int _Id_cnt; // Size=4 Offset=0
    };
} *Pstd::locale::id;
typedef class std::_Locinfo // Size=116
{
    class std::_Lockit _Lock; // Size=4 Offset=0
    class std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Days; // Size=28 Offset=4
    class std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Months; // Size=28 Offset=32
    class std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Oldlocname; // Size=28 Offset=60
    class std::basic_string<char,std::char_traits<char>,std::allocator<char> > _Newlocname; // Size=28 Offset=88
} *Pstd::_Locinfo;
typedef class std::locale::facet // Size=8
{
    unsigned int _Refs; // Size=4 Offset=4
} *Pstd::locale::facet;
typedef struct _Ctypevec // Size=16
{
    unsigned long _Hand; // Size=4 Offset=0
    unsigned int _Page; // Size=4 Offset=4
    short * _Table; // Size=4 Offset=8
    int _Delfl; // Size=4 Offset=12
} Ctypevec, *PCtypevec;
typedef class std::basic_ostringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > // Size=0
{
} *Pstd::basic_ostringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >;
typedef class std::allocator<void> // Size=1
{
} *Pstd::allocator<void>;
typedef class std::_Init_locks // Size=1
{
} *Pstd::_Init_locks;
typedef class std::basic_ios<unsigned short,std::char_traits<unsigned short> > // Size=52
{
    class std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > * _Mystrbuf; // Size=4 Offset=40
    class std::basic_ostream<unsigned short,std::char_traits<unsigned short> > * _Tiestr; // Size=4 Offset=44
    unsigned short _Fillch; // Size=2 Offset=48
} *Pstd::basic_ios<unsigned short,std::char_traits<unsigned short> >;
typedef class std::basic_istream<unsigned short,std::char_traits<unsigned short> > // Size=60
{
    int _Chcount; // Size=4 Offset=4
} *Pstd::basic_istream<unsigned short,std::char_traits<unsigned short> >;
typedef class std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > // Size=60
{
    class std::_Mutex _Mylock; // Size=4 Offset=4
    unsigned short * _Gfirst; // Size=4 Offset=8
    unsigned short * _Pfirst; // Size=4 Offset=12
    unsigned short * * _IGfirst; // Size=4 Offset=16
    unsigned short * * _IPfirst; // Size=4 Offset=20
    unsigned short * _Gnext; // Size=4 Offset=24
    unsigned short * _Pnext; // Size=4 Offset=28
    unsigned short * * _IGnext; // Size=4 Offset=32
    unsigned short * * _IPnext; // Size=4 Offset=36
    int _Gcount; // Size=4 Offset=40
    int _Pcount; // Size=4 Offset=44
    int * _IGcount; // Size=4 Offset=48
    int * _IPcount; // Size=4 Offset=52
    class std::locale * _Plocale; // Size=4 Offset=56
} *Pstd::basic_streambuf<unsigned short,std::char_traits<unsigned short> >;
typedef class std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> > // Size=0
{
} *Pstd::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> >;
typedef class std::num_get<unsigned short,std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> > > // Size=0
{
} *Pstd::num_get<unsigned short,std::istreambuf_iterator<unsigned short,std::char_traits<unsigned short> > >;
typedef class std::fpos<int> // Size=24
{
    union
    {
        int _Stz; // Size=4 Offset=0
        long _Myoff; // Size=4 Offset=0
    };
    __int64 _Fpos; // Size=8 Offset=8
    int _Mystate; // Size=4 Offset=16
} *Pstd::fpos<int>;
typedef class std::_DebugHeapString // Size=28
{
} *Pstd::_DebugHeapString;
typedef struct std::_Allocator_base<char> // Size=1
{
} *Pstd::_Allocator_base<char>;
typedef class std::allocator<char> // Size=1
{
} *Pstd::allocator<char>;
typedef struct std::allocator<char>::rebind<char> // Size=1
{
} *Pstd::allocator<char>::rebind<char>;
typedef class std::basic_ios<char,std::char_traits<char> > // Size=52
{
    class std::basic_streambuf<char,std::char_traits<char> > * _Mystrbuf; // Size=4 Offset=40
    class std::basic_ostream<char,std::char_traits<char> > * _Tiestr; // Size=4 Offset=44
    char _Fillch; // Size=1 Offset=48
} *Pstd::basic_ios<char,std::char_traits<char> >;
typedef class std::basic_ostream<char,std::char_traits<char> > // Size=56
{
} *Pstd::basic_ostream<char,std::char_traits<char> >;
typedef class std::basic_streambuf<char,std::char_traits<char> > // Size=60
{
    class std::_Mutex _Mylock; // Size=4 Offset=4
    char * _Gfirst; // Size=4 Offset=8
    char * _Pfirst; // Size=4 Offset=12
    char * * _IGfirst; // Size=4 Offset=16
    char * * _IPfirst; // Size=4 Offset=20
    char * _Gnext; // Size=4 Offset=24
    char * _Pnext; // Size=4 Offset=28
    char * * _IGnext; // Size=4 Offset=32
    char * * _IPnext; // Size=4 Offset=36
    int _Gcount; // Size=4 Offset=40
    int _Pcount; // Size=4 Offset=44
    int * _IGcount; // Size=4 Offset=48
    int * _IPcount; // Size=4 Offset=52
    class std::locale * _Plocale; // Size=4 Offset=56
} *Pstd::basic_streambuf<char,std::char_traits<char> >;
typedef struct std::char_traits<char> // Size=1
{
} *Pstd::char_traits<char>;
typedef class std::locale // Size=4
{
    class std::locale::_Locimp * _Ptr; // Size=4 Offset=0
} *Pstd::locale;
typedef class std::_Mutex // Size=4
{
    void * _Mtx; // Size=4 Offset=0
} *Pstd::_Mutex;
typedef struct std::_Int_iterator_tag // Size=1
{
} *Pstd::_Int_iterator_tag;
typedef struct std::iterator_traits<unsigned short> // Size=1
{
} *Pstd::iterator_traits<unsigned short>;
typedef class std::ostreambuf_iterator<char,std::char_traits<char> > // Size=0
{
} *Pstd::ostreambuf_iterator<char,std::char_traits<char> >;
typedef class std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > // Size=0
{
} *Pstd::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >;
typedef class std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > // Size=0
{
} *Pstd::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >;
typedef struct std::output_iterator_tag // Size=1
{
} *Pstd::output_iterator_tag;
typedef struct std::_DebugHeapTag_t // Size=4
{
    int _Type; // Size=4 Offset=0
} *Pstd::_DebugHeapTag_t;
typedef class std::invalid_argument // Size=40
{
} *Pstd::invalid_argument;
typedef struct std::iterator<std::output_iterator_tag,void,void,void,void> // Size=1
{
} *Pstd::iterator<std::output_iterator_tag,void,void,void,void>;
typedef struct std::_Outit // Size=1
{
} *Pstd::_Outit;
typedef class std::basic_fstream<unsigned short,std::char_traits<unsigned short> > // Size=0
{
} *Pstd::basic_fstream<unsigned short,std::char_traits<unsigned short> >;
typedef class std::codecvt_base // Size=8
{
} *Pstd::codecvt_base;
typedef class std::basic_stringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > // Size=0
{
} *Pstd::basic_stringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >;
typedef class std::underflow_error // Size=40
{
} *Pstd::underflow_error;
typedef class std::bad_exception // Size=12
{
} *Pstd::bad_exception;
typedef class std::basic_filebuf<char,std::char_traits<char> > // Size=0
{
} *Pstd::basic_filebuf<char,std::char_traits<char> >;
typedef class std::numpunct<char> // Size=0
{
} *Pstd::numpunct<char>;
typedef class std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > // Size=0
{
} *Pstd::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >;
typedef class std::basic_istream<char,std::char_traits<char> > // Size=60
{
    int _Chcount; // Size=4 Offset=4
} *Pstd::basic_istream<char,std::char_traits<char> >;
typedef class std::istreambuf_iterator<char,std::char_traits<char> > // Size=0
{
} *Pstd::istreambuf_iterator<char,std::char_traits<char> >;
typedef class std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > // Size=0
{
} *Pstd::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >;
typedef class std::_String_base // Size=1
{
} *Pstd::_String_base;
typedef class std::_String_val<char,std::allocator<char> > // Size=1
{
    class std::allocator<char> _Alval; // Size=1 Offset=0
} *Pstd::_String_val<char,std::allocator<char> >;
typedef struct std::random_access_iterator_tag // Size=1
{
} *Pstd::random_access_iterator_tag;
typedef struct std::iterator<std::random_access_iterator_tag,char,int,char const *,char const &> // Size=1
{
} *Pstd::iterator<std::random_access_iterator_tag,char,int,char const *,char const &>;
typedef struct std::iterator_traits<short> // Size=1
{
} *Pstd::iterator_traits<short>;
typedef struct _Cvtvec // Size=8
{
    unsigned long _Hand; // Size=4 Offset=0
    unsigned int _Page; // Size=4 Offset=4
} Cvtvec, *PCvtvec;
typedef class std::basic_ifstream<char,std::char_traits<char> > // Size=0
{
} *Pstd::basic_ifstream<char,std::char_traits<char> >;
typedef struct std::iterator_traits<signed char> // Size=1
{
} *Pstd::iterator_traits<signed char>;
typedef class std::_String_val<char,std::_DebugHeapAllocator<char> > // Size=1
{
    class std::_DebugHeapAllocator<char> _Alval; // Size=1 Offset=0
} *Pstd::_String_val<char,std::_DebugHeapAllocator<char> >;
typedef class std::_DebugHeapAllocator<char> // Size=1
{
} *Pstd::_DebugHeapAllocator<char>;
typedef class std::reverse_iterator<std::basic_string<char,std::char_traits<char>,std::_DebugHeapAllocator<char> >::iterator> // Size=0
{
} *Pstd::reverse_iterator<std::basic_string<char,std::char_traits<char>,std::_DebugHeapAllocator<char> >::iterator>;
typedef struct std::_Ranit<char,int,char const *,char const &> // Size=1
{
} *Pstd::_Ranit<char,int,char const *,char const &>;
typedef class std::basic_ifstream<unsigned short,std::char_traits<unsigned short> > // Size=0
{
} *Pstd::basic_ifstream<unsigned short,std::char_traits<unsigned short> >;
typedef struct std::input_iterator_tag // Size=1
{
} *Pstd::input_iterator_tag;
typedef struct std::forward_iterator_tag // Size=1
{
} *Pstd::forward_iterator_tag;
typedef struct std::char_traits<unsigned short> // Size=1
{
} *Pstd::char_traits<unsigned short>;
typedef struct std::iterator_traits<__int64> // Size=1
{
} *Pstd::iterator_traits<__int64>;
typedef class std::basic_fstream<char,std::char_traits<char> > // Size=0
{
} *Pstd::basic_fstream<char,std::char_traits<char> >;
typedef class std::numpunct<unsigned short> // Size=0
{
} *Pstd::numpunct<unsigned short>;
typedef class std::domain_error // Size=40
{
} *Pstd::domain_error;
typedef class std::overflow_error // Size=40
{
} *Pstd::overflow_error;
typedef class std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> > // Size=0
{
} *Pstd::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >;
typedef class std::range_error // Size=40
{
} *Pstd::range_error;
typedef struct std::_DebugHeapAllocator<char>::rebind<char> // Size=1
{
} *Pstd::_DebugHeapAllocator<char>::rebind<char>;
typedef class std::basic_ostream<unsigned short,std::char_traits<unsigned short> > // Size=56
{
} *Pstd::basic_ostream<unsigned short,std::char_traits<unsigned short> >;
typedef struct std::iterator_traits<char> // Size=1
{
} *Pstd::iterator_traits<char>;
typedef struct _Collvec // Size=8
{
    unsigned long _Hand; // Size=4 Offset=0
    unsigned int _Page; // Size=4 Offset=4
} Collvec, *PCollvec;
typedef class std::_Timevec // Size=4
{
    void * _Timeptr; // Size=4 Offset=0
} *Pstd::_Timevec;
typedef struct lconv // Size=48
{
    char * decimal_point; // Size=4 Offset=0
    char * thousands_sep; // Size=4 Offset=4
    char * grouping; // Size=4 Offset=8
    char * int_curr_symbol; // Size=4 Offset=12
    char * currency_symbol; // Size=4 Offset=16
    char * mon_decimal_point; // Size=4 Offset=20
    char * mon_thousands_sep; // Size=4 Offset=24
    char * mon_grouping; // Size=4 Offset=28
    char * positive_sign; // Size=4 Offset=32
    char * negative_sign; // Size=4 Offset=36
    char int_frac_digits; // Size=1 Offset=40
    char frac_digits; // Size=1 Offset=41
    char p_cs_precedes; // Size=1 Offset=42
    char p_sep_by_space; // Size=1 Offset=43
    char n_cs_precedes; // Size=1 Offset=44
    char n_sep_by_space; // Size=1 Offset=45
    char p_sign_posn; // Size=1 Offset=46
    char n_sign_posn; // Size=1 Offset=47
} *Plconv;
typedef class std::_Lockit // Size=4
{
    int _Locktype; // Size=4 Offset=0
} *Pstd::_Lockit;
typedef struct std::bidirectional_iterator_tag // Size=1
{
} *Pstd::bidirectional_iterator_tag;
typedef class std::basic_ofstream<char,std::char_traits<char> > // Size=0
{
} *Pstd::basic_ofstream<char,std::char_traits<char> >;
typedef class std::out_of_range // Size=40
{
} *Pstd::out_of_range;
typedef struct std::nothrow_t // Size=1
{
} *Pstd::nothrow_t;
typedef class std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> > // Size=0
{
} *Pstd::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> >;
typedef class std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> > > // Size=0
{
} *Pstd::num_put<unsigned short,std::ostreambuf_iterator<unsigned short,std::char_traits<unsigned short> > >;
typedef class std::basic_stringbuf<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > // Size=0
{
} *Pstd::basic_stringbuf<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >;
typedef class std::basic_iostream<unsigned short,std::char_traits<unsigned short> > // Size=0
{
} *Pstd::basic_iostream<unsigned short,std::char_traits<unsigned short> >;
typedef struct std::iterator_traits<int> // Size=1
{
} *Pstd::iterator_traits<int>;
typedef class std::basic_filebuf<unsigned short,std::char_traits<unsigned short> > // Size=0
{
} *Pstd::basic_filebuf<unsigned short,std::char_traits<unsigned short> >;
typedef struct std::iterator_traits<bool> // Size=1
{
} *Pstd::iterator_traits<bool>;
typedef class std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > // Size=0
{
} *Pstd::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >;
typedef class std::basic_ofstream<unsigned short,std::char_traits<unsigned short> > // Size=0
{
} *Pstd::basic_ofstream<unsigned short,std::char_traits<unsigned short> >;
typedef class std::reverse_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >::iterator> // Size=0
{
} *Pstd::reverse_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >::iterator>;
typedef class std::_Locbase<int> // Size=1
{
########################################
} *Pstd::_Locbase<int>;
typedef class std::locale::_Locimp // Size=52
{
    class std::locale::_Locimp * _Clocptr; // Size=4 Offset=0
    class std::locale::facet * * _Facetvec; // Size=4 Offset=8
    unsigned int _Facetcount; // Size=4 Offset=12
    int _Catmask; // Size=4 Offset=16
    bool _Xparent; // Size=1 Offset=20
    class std::_DebugHeapString _Name; // Size=28 Offset=24
} *Pstd::locale::_Locimp;
typedef class std::basic_iostream<char,std::char_traits<char> > // Size=0
{
} *Pstd::basic_iostream<char,std::char_traits<char> >;
typedef struct std::iterator_traits<long> // Size=1
{
} *Pstd::iterator_traits<long>;
typedef class std::bad_alloc // Size=12
{
} *Pstd::bad_alloc;
typedef struct std::_Nonscalar_ptr_iterator_tag // Size=1
{
} *Pstd::_Nonscalar_ptr_iterator_tag;
typedef class std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > // Size=0
{
} *Pstd::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >;
typedef class std::ios_base::failure // Size=40
{
} *Pstd::ios_base::failure;
typedef class std::ios_base::Init // Size=1
{
    int _Init_cnt; // Size=4 Offset=0
} *Pstd::ios_base::Init;
typedef class std::basic_istringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > // Size=0
{
} *Pstd::basic_istringstream<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >;
typedef struct std::_Scalar_ptr_iterator_tag // Size=1
{
} *Pstd::_Scalar_ptr_iterator_tag;
typedef struct _stat // Size=36
{
    unsigned int st_dev; // Size=4 Offset=0
    unsigned short st_ino; // Size=2 Offset=4
    unsigned short st_mode; // Size=2 Offset=6
    short st_nlink; // Size=2 Offset=8
    short st_uid; // Size=2 Offset=10
    short st_gid; // Size=2 Offset=12
    unsigned int st_rdev; // Size=4 Offset=16
    long st_size; // Size=4 Offset=20
    long st_atime; // Size=4 Offset=24
    long st_mtime; // Size=4 Offset=28
    long st_ctime; // Size=4 Offset=32
} stat, *Pstat;
typedef struct __wfinddata64_t // Size=560
{
    unsigned int attrib; // Size=4 Offset=0
    __int64 time_create; // Size=8 Offset=8
    __int64 time_access; // Size=8 Offset=16
    __int64 time_write; // Size=8 Offset=24
    __int64 size; // Size=8 Offset=32
    wchar_t name[260]; // Size=520 Offset=40
} _wfinddata64_t, *P_wfinddata64_t;
typedef struct _wfinddatai64_t // Size=544
{
    unsigned int attrib; // Size=4 Offset=0
    long time_create; // Size=4 Offset=4
    long time_access; // Size=4 Offset=8
    long time_write; // Size=4 Offset=12
    __int64 size; // Size=8 Offset=16
    wchar_t name[260]; // Size=520 Offset=24
} wfinddatai64_t, *Pwfinddatai64_t;
typedef struct _wfinddata_t // Size=540
{
    unsigned int attrib; // Size=4 Offset=0
    long time_create; // Size=4 Offset=4
    long time_access; // Size=4 Offset=8
    long time_write; // Size=4 Offset=12
    unsigned long size; // Size=4 Offset=16
    wchar_t name[260]; // Size=520 Offset=20
} wfinddata_t, *Pwfinddata_t;
typedef struct stat // Size=36
{
    unsigned int st_dev; // Size=4 Offset=0
    unsigned short st_ino; // Size=2 Offset=4
    unsigned short st_mode; // Size=2 Offset=6
    short st_nlink; // Size=2 Offset=8
    short st_uid; // Size=2 Offset=10
    short st_gid; // Size=2 Offset=12
    unsigned int st_rdev; // Size=4 Offset=16
    long st_size; // Size=4 Offset=20
    long st_atime; // Size=4 Offset=24
    long st_mtime; // Size=4 Offset=28
    long st_ctime; // Size=4 Offset=32
} *Pstat;
typedef struct __stat64 // Size=56
{
    unsigned int st_dev; // Size=4 Offset=0
    unsigned short st_ino; // Size=2 Offset=4
    unsigned short st_mode; // Size=2 Offset=6
    short st_nlink; // Size=2 Offset=8
    short st_uid; // Size=2 Offset=10
    short st_gid; // Size=2 Offset=12
    unsigned int st_rdev; // Size=4 Offset=16
    __int64 st_size; // Size=8 Offset=24
    __int64 st_atime; // Size=8 Offset=32
    __int64 st_mtime; // Size=8 Offset=40
    __int64 st_ctime; // Size=8 Offset=48
} _stat64, *P_stat64;
typedef class bad_cast // Size=12
{
} *Pbad_cast;
typedef struct _stati64 // Size=48
{
    unsigned int st_dev; // Size=4 Offset=0
    unsigned short st_ino; // Size=2 Offset=4
    unsigned short st_mode; // Size=2 Offset=6
    short st_nlink; // Size=2 Offset=8
    short st_uid; // Size=2 Offset=10
    short st_gid; // Size=2 Offset=12
    unsigned int st_rdev; // Size=4 Offset=16
    __int64 st_size; // Size=8 Offset=24
    long st_atime; // Size=4 Offset=32
    long st_mtime; // Size=4 Offset=36
    long st_ctime; // Size=4 Offset=40
} stati64, *Pstati64;
typedef class bad_typeid // Size=12
{
} *Pbad_typeid;
typedef class __non_rtti_object // Size=12
{
} _non_rtti_object, *P_non_rtti_object;
typedef class _InternalExceptionHandlerClass // Size=1
{
} InternalExceptionHandlerClass, *PInternalExceptionHandlerClass;
typedef struct _SYMBOL_INFO // Size=88
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned long TypeIndex; // Size=4 Offset=4
    unsigned __int64 Reserved[2]; // Size=16 Offset=8
    unsigned long info; // Size=4 Offset=24
    unsigned long Size; // Size=4 Offset=28
    unsigned __int64 ModBase; // Size=8 Offset=32
    unsigned long Flags; // Size=4 Offset=40
    unsigned __int64 Value; // Size=8 Offset=48
    unsigned __int64 Address; // Size=8 Offset=56
    unsigned long Register; // Size=4 Offset=64
    unsigned long Scope; // Size=4 Offset=68
    unsigned long Tag; // Size=4 Offset=72
    unsigned long NameLen; // Size=4 Offset=76
    unsigned long MaxNameLen; // Size=4 Offset=80
    char Name[1]; // Size=1 Offset=84
} SYMBOL_INFO, *PSYMBOL_INFO;
typedef struct _MINIDUMP_STRING // Size=4
{
    unsigned int Length; // Size=4 Offset=0
} MINIDUMP_STRING, *PMINIDUMP_STRING;
typedef struct _MINIDUMP_HEADER // Size=32
{
    unsigned int Signature; // Size=4 Offset=0
    unsigned int Version; // Size=4 Offset=4
    unsigned int NumberOfStreams; // Size=4 Offset=8
    unsigned long StreamDirectoryRva; // Size=4 Offset=12
    unsigned int CheckSum; // Size=4 Offset=16
    union
    {
        unsigned int Reserved; // Size=4 Offset=20
        unsigned int TimeDateStamp; // Size=4 Offset=20
    };
    unsigned __int64 Flags; // Size=8 Offset=24
} MINIDUMP_HEADER, *PMINIDUMP_HEADER;
typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD // Size=284
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned long BaseOfImage; // Size=4 Offset=4
    unsigned long CheckSum; // Size=4 Offset=8
    unsigned long TimeDateStamp; // Size=4 Offset=12
    char FileName[260]; // Size=260 Offset=16
    unsigned char Reparse; // Size=1 Offset=276
    void * hFile; // Size=4 Offset=280
} IMAGEHLP_DEFERRED_SYMBOL_LOAD, *PIMAGEHLP_DEFERRED_SYMBOL_LOAD;
typedef struct _MINIDUMP_HANDLE_DATA_STREAM // Size=16
{
    unsigned int SizeOfHeader; // Size=4 Offset=0
    unsigned int SizeOfDescriptor; // Size=4 Offset=4
    unsigned int NumberOfDescriptors; // Size=4 Offset=8
    unsigned int Reserved; // Size=4 Offset=12
} MINIDUMP_HANDLE_DATA_STREAM, *PMINIDUMP_HANDLE_DATA_STREAM;
typedef struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR // Size=32
{
    unsigned __int64 MinimumAddress; // Size=8 Offset=0
    unsigned __int64 MaximumAddress; // Size=8 Offset=8
    unsigned __int64 BaseAddress; // Size=8 Offset=16
    unsigned int EntryCount; // Size=4 Offset=24
    unsigned int SizeOfAlignPad; // Size=4 Offset=28
} MINIDUMP_FUNCTION_TABLE_DESCRIPTOR, *PMINIDUMP_FUNCTION_TABLE_DESCRIPTOR;
typedef struct _IMAGEHLP_SYMBOL64 // Size=32
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned __int64 Address; // Size=8 Offset=8
    unsigned long Size; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    unsigned long MaxNameLength; // Size=4 Offset=24
    char Name[1]; // Size=1 Offset=28
} IMAGEHLP_SYMBOL64, *PIMAGEHLP_SYMBOL64;
typedef struct _MINIDUMP_LOCATION_DESCRIPTOR // Size=8
{
    unsigned int DataSize; // Size=4 Offset=0
    unsigned long Rva; // Size=4 Offset=4
} MINIDUMP_LOCATION_DESCRIPTOR, *PMINIDUMP_LOCATION_DESCRIPTOR;
typedef struct _IMAGEHLP_SYMBOL_SRC // Size=268
{
    unsigned long sizeofstruct; // Size=4 Offset=0
    unsigned long type; // Size=4 Offset=4
    char file[260]; // Size=260 Offset=8
} IMAGEHLP_SYMBOL_SRC, *PIMAGEHLP_SYMBOL_SRC;
typedef struct _CAT_MEMBERINFO // Size=8
{
    unsigned short * pwszSubjGuid; // Size=4 Offset=0
    unsigned long dwCertVersion; // Size=4 Offset=4
} CAT_MEMBERINFO, *PCAT_MEMBERINFO;
typedef struct _MINIDUMP_MEMORY_DESCRIPTOR64 // Size=16
{
    unsigned __int64 StartOfMemoryRange; // Size=8 Offset=0
    unsigned __int64 DataSize; // Size=8 Offset=8
} MINIDUMP_MEMORY_DESCRIPTOR64, *PMINIDUMP_MEMORY_DESCRIPTOR64;
typedef struct _KDHELP // Size=64
{
    unsigned long Thread; // Size=4 Offset=0
    unsigned long ThCallbackStack; // Size=4 Offset=4
    unsigned long NextCallback; // Size=4 Offset=8
    unsigned long FramePointer; // Size=4 Offset=12
    unsigned long KiCallUserMode; // Size=4 Offset=16
    unsigned long KeUserCallbackDispatcher; // Size=4 Offset=20
    unsigned long SystemRangeStart; // Size=4 Offset=24
    unsigned long ThCallbackBStore; // Size=4 Offset=28
    unsigned long Reserved[8]; // Size=32 Offset=32
} KDHELP, *PKDHELP;
typedef struct _WIN_CERTIFICATE // Size=12
{
    unsigned long dwLength; // Size=4 Offset=0
    unsigned short wRevision; // Size=2 Offset=4
    unsigned short wCertificateType; // Size=2 Offset=6
    unsigned char bCertificate[1]; // Size=1 Offset=8
} WIN_CERTIFICATE, *PWIN_CERTIFICATE;
typedef struct _IMAGEHLP_CBA_READ_MEMORY // Size=24
{
    unsigned __int64 addr; // Size=8 Offset=0
    void * buf; // Size=4 Offset=8
    unsigned long bytes; // Size=4 Offset=12
    unsigned long * bytesread; // Size=4 Offset=16
} IMAGEHLP_CBA_READ_MEMORY, *PIMAGEHLP_CBA_READ_MEMORY;
typedef struct _CRYPT_PROVUI_DATA // Size=36
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwFinalError; // Size=4 Offset=4
    unsigned short * pYesButtonText; // Size=4 Offset=8
    unsigned short * pNoButtonText; // Size=4 Offset=12
    unsigned short * pMoreInfoButtonText; // Size=4 Offset=16
    unsigned short * pAdvancedLinkText; // Size=4 Offset=20
    unsigned short * pCopyActionText; // Size=4 Offset=24
    unsigned short * pCopyActionTextNoTS; // Size=4 Offset=28
    unsigned short * pCopyActionTextNotSigned; // Size=4 Offset=32
} CRYPT_PROVUI_DATA, *PCRYPT_PROVUI_DATA;
typedef struct _MINIDUMP_FUNCTION_TABLE_STREAM // Size=24
{
    unsigned int SizeOfHeader; // Size=4 Offset=0
    unsigned int SizeOfDescriptor; // Size=4 Offset=4
    unsigned int SizeOfNativeDescriptor; // Size=4 Offset=8
    unsigned int SizeOfFunctionEntry; // Size=4 Offset=12
    unsigned int NumberOfDescriptors; // Size=4 Offset=16
    unsigned int SizeOfAlignPad; // Size=4 Offset=20
} MINIDUMP_FUNCTION_TABLE_STREAM, *PMINIDUMP_FUNCTION_TABLE_STREAM;
typedef struct _MINIDUMP_INCLUDE_MODULE_CALLBACK // Size=8
{
    unsigned __int64 BaseOfImage; // Size=8 Offset=0
} MINIDUMP_INCLUDE_MODULE_CALLBACK, *PMINIDUMP_INCLUDE_MODULE_CALLBACK;
typedef struct _SPC_FINANCIAL_CRITERIA // Size=8
{
    int fFinancialInfoAvailable; // Size=4 Offset=0
    int fMeetsCriteria; // Size=4 Offset=4
} SPC_FINANCIAL_CRITERIA, *PSPC_FINANCIAL_CRITERIA;
typedef struct _MINIDUMP_USER_STREAM // Size=12
{
    unsigned int Type; // Size=4 Offset=0
    unsigned long BufferSize; // Size=4 Offset=4
    void * Buffer; // Size=4 Offset=8
} MINIDUMP_USER_STREAM, *PMINIDUMP_USER_STREAM;
typedef struct _IMAGEHLP_STACK_FRAME // Size=128
{
    unsigned __int64 InstructionOffset; // Size=8 Offset=0
    unsigned __int64 ReturnOffset; // Size=8 Offset=8
    unsigned __int64 FrameOffset; // Size=8 Offset=16
    unsigned __int64 StackOffset; // Size=8 Offset=24
    unsigned __int64 BackingStoreOffset; // Size=8 Offset=32
    unsigned __int64 FuncTableEntry; // Size=8 Offset=40
    unsigned __int64 Params[4]; // Size=32 Offset=48
    unsigned __int64 Reserved[5]; // Size=40 Offset=80
    int Virtual; // Size=4 Offset=120
    unsigned long Reserved2; // Size=4 Offset=124
} IMAGEHLP_STACK_FRAME, *PIMAGEHLP_STACK_FRAME;
typedef struct _IMAGEHLP_SYMBOL // Size=24
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned long Address; // Size=4 Offset=4
    unsigned long Size; // Size=4 Offset=8
    unsigned long Flags; // Size=4 Offset=12
    unsigned long MaxNameLength; // Size=4 Offset=16
    char Name[1]; // Size=1 Offset=20
} IMAGEHLP_SYMBOL, *PIMAGEHLP_SYMBOL;
typedef struct _diskfree_t // Size=16
{
    unsigned int total_clusters; // Size=4 Offset=0
    unsigned int avail_clusters; // Size=4 Offset=4
    unsigned int sectors_per_cluster; // Size=4 Offset=8
    unsigned int bytes_per_sector; // Size=4 Offset=12
} diskfree_t, *Pdiskfree_t;
typedef struct _MINIDUMP_CALLBACK_OUTPUT // Size=4
{
    union
    {
        unsigned long ModuleWriteFlags; // Size=4 Offset=0
        unsigned long ThreadWriteFlags; // Size=4 Offset=0
    };
} MINIDUMP_CALLBACK_OUTPUT, *PMINIDUMP_CALLBACK_OUTPUT;
typedef struct _MINIDUMP_UNLOADED_MODULE_LIST // Size=12
{
    unsigned int SizeOfHeader; // Size=4 Offset=0
    unsigned int SizeOfEntry; // Size=4 Offset=4
    unsigned int NumberOfEntries; // Size=4 Offset=8
} MINIDUMP_UNLOADED_MODULE_LIST, *PMINIDUMP_UNLOADED_MODULE_LIST;
typedef struct _CRYPT_TRUST_REG_ENTRY // Size=12
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned short * pwszDLLName; // Size=4 Offset=4
    unsigned short * pwszFunctionName; // Size=4 Offset=8
} CRYPT_TRUST_REG_ENTRY, *PCRYPT_TRUST_REG_ENTRY;
typedef struct _KDHELP64 // Size=112
{
    unsigned __int64 Thread; // Size=8 Offset=0
    unsigned long ThCallbackStack; // Size=4 Offset=8
    unsigned long ThCallbackBStore; // Size=4 Offset=12
    unsigned long NextCallback; // Size=4 Offset=16
    unsigned long FramePointer; // Size=4 Offset=20
    unsigned __int64 KiCallUserMode; // Size=8 Offset=24
    unsigned __int64 KeUserCallbackDispatcher; // Size=8 Offset=32
    unsigned __int64 SystemRangeStart; // Size=8 Offset=40
    unsigned __int64 Reserved[8]; // Size=64 Offset=48
} KDHELP64, *PKDHELP64;
typedef struct _SOURCEFILE // Size=16
{
    unsigned __int64 ModBase; // Size=8 Offset=0
    char * FileName; // Size=4 Offset=8
} SOURCEFILE, *PSOURCEFILE;
typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64 // Size=296
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned __int64 BaseOfImage; // Size=8 Offset=8
    unsigned long CheckSum; // Size=4 Offset=16
    unsigned long TimeDateStamp; // Size=4 Offset=20
    char FileName[260]; // Size=260 Offset=24
    unsigned char Reparse; // Size=1 Offset=284
    void * hFile; // Size=4 Offset=288
    unsigned long Flags; // Size=4 Offset=292
} IMAGEHLP_DEFERRED_SYMBOL_LOAD64, *PIMAGEHLP_DEFERRED_SYMBOL_LOAD64;
typedef struct _WIN_TRUST_SUBJECT_FILE // Size=8
{
    void * hFile; // Size=4 Offset=0
    unsigned short * lpPath; // Size=4 Offset=4
} WIN_TRUST_SUBJECT_FILE, *PWIN_TRUST_SUBJECT_FILE;
typedef struct _IMAGEHLP_LINE64 // Size=24
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    void * Key; // Size=4 Offset=4
    unsigned long LineNumber; // Size=4 Offset=8
    char * FileName; // Size=4 Offset=12
    unsigned __int64 Address; // Size=8 Offset=16
} IMAGEHLP_LINE64, *PIMAGEHLP_LINE64;
typedef struct _MINIDUMP_INCLUDE_THREAD_CALLBACK // Size=4
{
    unsigned long ThreadId; // Size=4 Offset=0
} MINIDUMP_INCLUDE_THREAD_CALLBACK, *PMINIDUMP_INCLUDE_THREAD_CALLBACK;
typedef struct API_VERSION // Size=8
{
    unsigned short MajorVersion; // Size=2 Offset=0
    unsigned short MinorVersion; // Size=2 Offset=2
    unsigned short Revision; // Size=2 Offset=4
    unsigned short Reserved; // Size=2 Offset=6
} *PAPI_VERSION;
typedef struct _MODULE_TYPE_INFO // Size=6
{
    unsigned short dataLength; // Size=2 Offset=0
    unsigned short leaf; // Size=2 Offset=2
    unsigned char data[1]; // Size=1 Offset=4
} MODULE_TYPE_INFO, *PMODULE_TYPE_INFO;
typedef struct _IMAGEHLP_LINE // Size=20
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    void * Key; // Size=4 Offset=4
    unsigned long LineNumber; // Size=4 Offset=8
    char * FileName; // Size=4 Offset=12
    unsigned long Address; // Size=4 Offset=16
} IMAGEHLP_LINE, *PIMAGEHLP_LINE;
typedef struct _MINIDUMP_HANDLE_DESCRIPTOR // Size=32
{
    unsigned __int64 Handle; // Size=8 Offset=0
    unsigned long TypeNameRva; // Size=4 Offset=8
    unsigned long ObjectNameRva; // Size=4 Offset=12
    unsigned int Attributes; // Size=4 Offset=16
    unsigned int GrantedAccess; // Size=4 Offset=20
    unsigned int HandleCount; // Size=4 Offset=24
    unsigned int PointerCount; // Size=4 Offset=28
} MINIDUMP_HANDLE_DESCRIPTOR, *PMINIDUMP_HANDLE_DESCRIPTOR;
typedef struct _MODLOAD_DATA // Size=20
{
    unsigned long ssize; // Size=4 Offset=0
    unsigned long ssig; // Size=4 Offset=4
    void * data; // Size=4 Offset=8
    unsigned long size; // Size=4 Offset=12
    unsigned long flags; // Size=4 Offset=16
} MODLOAD_DATA, *PMODLOAD_DATA;
typedef struct SIP_DISPATCH_INFO_ // Size=0
{
} *PSIP_DISPATCH_INFO_;
typedef struct SIP_SUBJECTINFO_ // Size=0
{
} *PSIP_SUBJECTINFO_;
typedef struct SIP_INDIRECT_DATA_ // Size=0
{
} *PSIP_INDIRECT_DATA_;
typedef struct _MINIDUMP_MISC_INFO // Size=24
{
    unsigned int SizeOfInfo; // Size=4 Offset=0
    unsigned int Flags1; // Size=4 Offset=4
    unsigned int ProcessId; // Size=4 Offset=8
    unsigned int ProcessCreateTime; // Size=4 Offset=12
    unsigned int ProcessUserTime; // Size=4 Offset=16
    unsigned int ProcessKernelTime; // Size=4 Offset=20
} MINIDUMP_MISC_INFO, *PMINIDUMP_MISC_INFO;
typedef struct _SPC_STATEMENT_TYPE // Size=8
{
    unsigned long cKeyPurposeId; // Size=4 Offset=0
    char * * rgpszKeyPurposeId; // Size=4 Offset=4
} SPC_STATEMENT_TYPE, *PSPC_STATEMENT_TYPE;
typedef struct _MINIDUMP_EXCEPTION // Size=152
{
    unsigned int ExceptionCode; // Size=4 Offset=0
    unsigned int ExceptionFlags; // Size=4 Offset=4
    unsigned __int64 ExceptionRecord; // Size=8 Offset=8
    unsigned __int64 ExceptionAddress; // Size=8 Offset=16
    unsigned int NumberParameters; // Size=4 Offset=24
    unsigned int __unusedAlignment; // Size=4 Offset=28
    unsigned __int64 ExceptionInformation[15]; // Size=120 Offset=32
} MINIDUMP_EXCEPTION, *PMINIDUMP_EXCEPTION;
typedef struct _IMAGEHLP_CBA_EVENT // Size=16
{
    unsigned long severity; // Size=4 Offset=0
    unsigned long code; // Size=4 Offset=4
    char * desc; // Size=4 Offset=8
    void * object; // Size=4 Offset=12
} IMAGEHLP_CBA_EVENT, *PIMAGEHLP_CBA_EVENT;
typedef struct _MINIDUMP_UNLOADED_MODULE // Size=24
{
    unsigned __int64 BaseOfImage; // Size=8 Offset=0
    unsigned int SizeOfImage; // Size=4 Offset=8
    unsigned int CheckSum; // Size=4 Offset=12
    unsigned int TimeDateStamp; // Size=4 Offset=16
    unsigned long ModuleNameRva; // Size=4 Offset=20
} MINIDUMP_UNLOADED_MODULE, *PMINIDUMP_UNLOADED_MODULE;
typedef struct _TI_FINDCHILDREN_PARAMS // Size=12
{
    unsigned long Count; // Size=4 Offset=0
    unsigned long Start; // Size=4 Offset=4
    unsigned long ChildId[1]; // Size=4 Offset=8
} TI_FINDCHILDREN_PARAMS, *PTI_FINDCHILDREN_PARAMS;
typedef union _CPU_INFORMATION // Size=0
{
} CPU_INFORMATION, *PCPU_INFORMATION;
typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY // Size=12
{
    void * hFile; // Size=4 Offset=0
    unsigned short * lpPath; // Size=4 Offset=4
    unsigned short * lpDisplayName; // Size=4 Offset=8
} WIN_TRUST_SUBJECT_FILE_AND_DISPLAY, *PWIN_TRUST_SUBJECT_FILE_AND_DISPLAY;
typedef struct _MINIDUMP_LOCATION_DESCRIPTOR64 // Size=16
{
    unsigned __int64 DataSize; // Size=8 Offset=0
    unsigned __int64 Rva; // Size=8 Offset=8
} MINIDUMP_LOCATION_DESCRIPTOR64, *PMINIDUMP_LOCATION_DESCRIPTOR64;
typedef struct _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION::__unnamed // Size=24
{
    unsigned int VendorId[3]; // Size=12 Offset=0
    unsigned int VersionInformation; // Size=4 Offset=12
    unsigned int FeatureInformation; // Size=4 Offset=16
    unsigned int AMDExtendedCpuFeatures; // Size=4 Offset=20
} MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION::__unnamed, *PMINIDUMP_SYSTEM_INFO::_CPU_INFORMATION::__unnamed;
typedef struct _TRANSMIT_FILE_BUFFERS // Size=16
{
    void * Head; // Size=4 Offset=0
    unsigned long HeadLength; // Size=4 Offset=4
    void * Tail; // Size=4 Offset=8
    unsigned long TailLength; // Size=4 Offset=12
} TRANSMIT_FILE_BUFFERS, *PTRANSMIT_FILE_BUFFERS;
typedef struct _QSORT_ELEMENT_ // Size=8
{
    int index; // Size=4 Offset=0
    float value; // Size=4 Offset=4
} QSORT_ELEMENT_, *PQSORT_ELEMENT_;
typedef struct _FloatOutStruct // Size=26
{
    short exp; // Size=2 Offset=0
    char sign; // Size=1 Offset=2
    char ManLen; // Size=1 Offset=3
    char man[22]; // Size=22 Offset=4
} FloatOutStruct, *PFloatOutStruct;
typedef struct _LDOUBLE // Size=10
{
    unsigned char ld[10]; // Size=10 Offset=0
} LDOUBLE, *PLDOUBLE;
typedef struct _LDBL12 // Size=12
{
    unsigned char ld12[12]; // Size=12 Offset=0
} LDBL12, *PLDBL12;
typedef struct FpFormatDescriptor // Size=24
{
    int max_exp; // Size=4 Offset=0
    int min_exp; // Size=4 Offset=4
    int precision; // Size=4 Offset=8
    int exp_width; // Size=4 Offset=12
    int format_width; // Size=4 Offset=16
    int bias; // Size=4 Offset=20
} *PFpFormatDescriptor;
typedef struct DOUBLE // Size=8
{
    double x; // Size=8 Offset=0
} *PDOUBLE;
typedef struct FLOAT // Size=4
{
    float f; // Size=4 Offset=0
} *PFLOAT;
typedef struct _strflt // Size=16
{
    int sign; // Size=4 Offset=0
    int decpt; // Size=4 Offset=4
    int flag; // Size=4 Offset=8
    char * mantissa; // Size=4 Offset=12
} strflt, *Pstrflt;
typedef struct transitiondate // Size=12
{
    int yr; // Size=4 Offset=0
    int yd; // Size=4 Offset=4
    int ms; // Size=4 Offset=8
} *Ptransitiondate;
typedef struct __lc_time_data // Size=184
{
    char * wday_abbr[7]; // Size=28 Offset=0
    char * wday[7]; // Size=28 Offset=28
    char * month_abbr[12]; // Size=48 Offset=56
    char * month[12]; // Size=48 Offset=104
    char * ampm[2]; // Size=8 Offset=152
    char * ww_sdatefmt; // Size=4 Offset=160
    char * ww_ldatefmt; // Size=4 Offset=164
    char * ww_timefmt; // Size=4 Offset=168
    unsigned long ww_lcid; // Size=4 Offset=172
    int ww_caltype; // Size=4 Offset=176
    int refcount; // Size=4 Offset=180
} _lc_time_data, *P_lc_time_data;
typedef struct threadmbcinfostruct // Size=544
{
    int refcount; // Size=4 Offset=0
    int mbcodepage; // Size=4 Offset=4
    int ismbcodepage; // Size=4 Offset=8
    int mblcid; // Size=4 Offset=12
    unsigned short mbulinfo[6]; // Size=12 Offset=16
    char mbctype[257]; // Size=257 Offset=28
    char mbcasemap[256]; // Size=256 Offset=285
} *Pthreadmbcinfostruct;
typedef union ___unnamed3033 // Size=512
{
    char sz[512]; // Size=512 Offset=0
} __unnamed3033, *P__unnamed3033;
typedef union ___unnamed3035 // Size=4
{
    char * sz; // Size=4 Offset=0
    unsigned short * wz; // Size=4 Offset=0
} __unnamed3035, *P__unnamed3035;
typedef struct _count_string // Size=8
{
    short Length; // Size=2 Offset=0
    short MaximumLength; // Size=2 Offset=2
    char * Buffer; // Size=4 Offset=4
} count_string, *Pcount_string;
typedef struct _XCPT_ACTION // Size=12
{
    unsigned long XcptNum; // Size=4 Offset=0
    int SigNum; // Size=4 Offset=4
    void ( * XcptAction)(int); // Size=4 Offset=8
} XCPT_ACTION, *PXCPT_ACTION;
typedef struct rterrmsgs // Size=8
{
    int rterrno; // Size=4 Offset=0
    char * rterrtxt; // Size=4 Offset=4
} *Prterrmsgs;
typedef struct _RTC_vardesc // Size=12
{
    int addr; // Size=4 Offset=0
    int size; // Size=4 Offset=4
    char * name; // Size=4 Offset=8
} RTC_vardesc, *PRTC_vardesc;
typedef struct PDB // Size=0
{
} *PPDB;
typedef struct DBI // Size=0
{
} *PDBI;
typedef struct Mod // Size=0
{
} *PMod;
typedef struct _MODULEINFO // Size=12
{
    void * lpBaseOfDll; // Size=4 Offset=0
    unsigned long SizeOfImage; // Size=4 Offset=4
    void * EntryPoint; // Size=4 Offset=8
} MODULEINFO, *PMODULEINFO;
typedef struct _RTC_GetSrcLine::__l3::SStartEnd // Size=8
{
    unsigned long start; // Size=4 Offset=0
    unsigned long end; // Size=4 Offset=4
} RTC_GetSrcLine::__l3::SStartEnd, *PRTC_GetSrcLine::__l3::SStartEnd;
typedef struct _RTC_GetSrcLine::__l2::SSrcModuleHdr // Size=4
{
    unsigned short cFile; // Size=2 Offset=0
    unsigned short cSeg; // Size=2 Offset=2
} RTC_GetSrcLine::__l2::SSrcModuleHdr, *PRTC_GetSrcLine::__l2::SSrcModuleHdr;
typedef struct tagEXCEPTION_VISUALCPP_DEBUG_INFO::__unnamed::__unnamed // Size=12
{
    char * szName; // Size=4 Offset=0
    unsigned long dwThreadID; // Size=4 Offset=4
    unsigned long dwFlags; // Size=4 Offset=8
} *PtagEXCEPTION_VISUALCPP_DEBUG_INFO::__unnamed::__unnamed;
typedef struct tagLC_ID // Size=6
{
    unsigned short wLanguage; // Size=2 Offset=0
    unsigned short wCountry; // Size=2 Offset=2
    unsigned short wCodePage; // Size=2 Offset=4
} *PtagLC_ID;
typedef struct tagLC_STRINGS // Size=144
{
    char szLanguage[64]; // Size=64 Offset=0
    char szCountry[64]; // Size=64 Offset=64
    char szCodePage[16]; // Size=16 Offset=128
} *PtagLC_STRINGS;
typedef struct _is_ctype_compatible // Size=8
{
    unsigned long id; // Size=4 Offset=0
    int is_clike; // Size=4 Offset=4
} is_ctype_compatible, *Pis_ctype_compatible;
typedef struct ___unnamed3066 // Size=12
{
    char * catname; // Size=4 Offset=0
    char * locale; // Size=4 Offset=4
    int ( * init)(); // Size=4 Offset=8
} __unnamed3066, *P__unnamed3066;
typedef struct tagRGLOCINFO // Size=44
{
    unsigned long lcid; // Size=4 Offset=0
    char chILanguage[8]; // Size=8 Offset=4
    char * pchSEngLanguage; // Size=4 Offset=12
    char chSAbbrevLangName[4]; // Size=4 Offset=16
    char * pchSEngCountry; // Size=4 Offset=20
    char chSAbbrevCtryName[4]; // Size=4 Offset=24
    char chIDefaultCodepage[8]; // Size=8 Offset=28
    char chIDefaultAnsiCodepage[8]; // Size=8 Offset=36
} *PtagRGLOCINFO;
typedef struct tagLOCALETAB // Size=8
{
    char * szName; // Size=4 Offset=0
    char chAbbrev[4]; // Size=4 Offset=4
} *PtagLOCALETAB;
typedef struct _AlignMemBlockHdr // Size=8
{
    void * pHead; // Size=4 Offset=0
    unsigned char Gap[4]; // Size=4 Offset=4
} AlignMemBlockHdr, *PAlignMemBlockHdr;
typedef struct ___unnamed246 // Size=8
{
    unsigned long LowPart; // Size=4 Offset=0
    long HighPart; // Size=4 Offset=4
} __unnamed246, *P__unnamed246;
typedef struct _JMP_BUF // Size=64
{
    unsigned long saved_ebp; // Size=4 Offset=0
    unsigned long saved_ebx; // Size=4 Offset=4
    unsigned long saved_edi; // Size=4 Offset=8
    unsigned long saved_esi; // Size=4 Offset=12
    unsigned long saved_esp; // Size=4 Offset=16
    unsigned long saved_return; // Size=4 Offset=20
    unsigned long saved_xregistration; // Size=4 Offset=24
    unsigned long saved_trylevel; // Size=4 Offset=28
    unsigned long version_cookie; // Size=4 Offset=32
    unsigned long unwind_func; // Size=4 Offset=36
    unsigned long unwind_data; // Size=4 Offset=40
} JMP_BUF, *PJMP_BUF;
typedef struct _SCOPETABLE_ENTRY // Size=12
{
    unsigned long enclosing_level; // Size=4 Offset=0
    unsigned long filter; // Size=4 Offset=4
    unsigned long specific_handler; // Size=4 Offset=8
} SCOPETABLE_ENTRY, *PSCOPETABLE_ENTRY;
typedef struct _EXCEPTION_REGISTRATION // Size=8
{
    unsigned long prev; // Size=4 Offset=0
    unsigned long handler; // Size=4 Offset=4
} EXCEPTION_REGISTRATION, *PEXCEPTION_REGISTRATION;
typedef struct _NLG_INFO // Size=16
{
    unsigned long dwSig; // Size=4 Offset=0
    unsigned long uoffDestination; // Size=4 Offset=4
    unsigned long dwCode; // Size=4 Offset=8
    unsigned long uoffFramePointer; // Size=4 Offset=12
} NLG_INFO, *PNLG_INFO;
typedef struct _C9_EXCEPTION_REGISTRATION // Size=16
{
    unsigned long er_prev; // Size=4 Offset=0
    unsigned long er_handler; // Size=4 Offset=4
    unsigned long scopetable; // Size=4 Offset=8
    unsigned long trylevel; // Size=4 Offset=12
} C9_EXCEPTION_REGISTRATION, *PC9_EXCEPTION_REGISTRATION;
typedef struct _EXCEPTION_REGISTRATION_COMMON // Size=16
{
    unsigned long scopetable; // Size=4 Offset=8
    unsigned long trylevel; // Size=4 Offset=12
} EXCEPTION_REGISTRATION_COMMON, *PEXCEPTION_REGISTRATION_COMMON;
typedef union ___unnamed1486 // Size=4
{
    unsigned long PhysicalAddress; // Size=4 Offset=0
    unsigned long VirtualSize; // Size=4 Offset=0
} __unnamed1486, *P__unnamed1486;
typedef struct code_page_info // Size=48
{
    int code_page; // Size=4 Offset=0
    unsigned short mbulinfo[6]; // Size=12 Offset=4
    unsigned char rgrange[8]; // Size=32 Offset=16
} *Pcode_page_info;
typedef struct ___unnamed3106 // Size=8
{
    unsigned long lowerhalf; // Size=4 Offset=0
    long upperhalf; // Size=4 Offset=4
} __unnamed3106, *P__unnamed3106;
typedef struct tagEntryEnd // Size=4
{
    int sizeBack; // Size=4 Offset=0
} *PtagEntryEnd;
typedef struct TypeDescriptor // Size=8
{
    unsigned long hash; // Size=4 Offset=0
    void * spare; // Size=4 Offset=4
} *PTypeDescriptor;
typedef struct PMD // Size=12
{
    int mdisp; // Size=4 Offset=0
    int pdisp; // Size=4 Offset=4
    int vdisp; // Size=4 Offset=8
} *PPMD;
typedef struct _s_UnwindMapEntry // Size=8
{
    int toState; // Size=4 Offset=0
    void ( * action)(); // Size=4 Offset=4
} s_UnwindMapEntry, *Ps_UnwindMapEntry;
typedef struct __JUMP_BUFFER // Size=64
{
    unsigned long Ebp; // Size=4 Offset=0
    unsigned long Ebx; // Size=4 Offset=4
    unsigned long Edi; // Size=4 Offset=8
    unsigned long Esi; // Size=4 Offset=12
    unsigned long Esp; // Size=4 Offset=16
    unsigned long Eip; // Size=4 Offset=20
    unsigned long Registration; // Size=4 Offset=24
    unsigned long TryLevel; // Size=4 Offset=28
    unsigned long Cookie; // Size=4 Offset=32
    unsigned long UnwindFunc; // Size=4 Offset=36
    unsigned long UnwindData[6]; // Size=24 Offset=40
} _JUMP_BUFFER, *P_JUMP_BUFFER;
typedef struct errentry // Size=8
{
    unsigned long oscode; // Size=4 Offset=0
    int errnocode; // Size=4 Offset=4
} *Perrentry;
typedef class CTickManage // Size=60
{
    long m_lNowTick; // Size=4 Offset=0
    unsigned long m_dwNowMiliTick; // Size=4 Offset=4
    struct tm * m_ptmNow; // Size=4 Offset=8
    long m_lSecondNewDate; // Size=4 Offset=12
    long m_lSecondOClock; // Size=4 Offset=16
    long m_lSecond10Min; // Size=4 Offset=20
    long m_lSecond180; // Size=4 Offset=24
    long m_lSecond120; // Size=4 Offset=28
    long m_lSecond60; // Size=4 Offset=32
    long m_lSecond30; // Size=4 Offset=36
    long m_lSecond10; // Size=4 Offset=40
    long m_lSecond5; // Size=4 Offset=44
    long m_lSecond2; // Size=4 Offset=48
    long m_lSecond1; // Size=4 Offset=52
    unsigned long m_dwMiliSecond500; // Size=4 Offset=56
} *PCTickManage;
typedef struct tagMIDIINCAPS2W // Size=124
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned long dwSupport; // Size=4 Offset=72
    struct _GUID ManufacturerGuid; // Size=16 Offset=76
    struct _GUID ProductGuid; // Size=16 Offset=92
    struct _GUID NameGuid; // Size=16 Offset=108
} *PtagMIDIINCAPS2W;
typedef struct tagCBTACTIVATESTRUCT // Size=8
{
    int fMouse; // Size=4 Offset=0
    struct HWND__ * hWndActive; // Size=4 Offset=4
} *PtagCBTACTIVATESTRUCT;
typedef struct _WSAVersion // Size=8
{
    unsigned long dwVersion; // Size=4 Offset=0
    enum _WSAEcomparator ecHow; // Size=4 Offset=4
} WSAVersion, *PWSAVersion;
typedef struct tagEMREOF // Size=20
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long nPalEntries; // Size=4 Offset=8
    unsigned long offPalEntries; // Size=4 Offset=12
    unsigned long nSizeLast; // Size=4 Offset=16
} *PtagEMREOF;
typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE // Size=12
{
    char * pszObjId; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Value; // Size=8 Offset=4
} CRYPT_ATTRIBUTE_TYPE_VALUE, *PCRYPT_ATTRIBUTE_TYPE_VALUE;
typedef struct _PROCESSOR_POWER_POLICY // Size=76
{
    unsigned long Revision; // Size=4 Offset=0
    unsigned char DynamicThrottle; // Size=1 Offset=4
    unsigned char Spare[3]; // Size=3 Offset=5
    struct
    {
        unsigned long DisableCStates: 1; // Size=4 Offset=8 BitOffset=0 BitCount=1
        unsigned long Reserved: 31; // Size=4 Offset=8 BitOffset=1 BitCount=31
    };
    unsigned long PolicyCount; // Size=4 Offset=12
    struct _PROCESSOR_POWER_POLICY_INFO Policy[3]; // Size=60 Offset=16
} PROCESSOR_POWER_POLICY, *PPROCESSOR_POWER_POLICY;
typedef struct _FULL_PTR_TO_REFID_ELEMENT // Size=16
{
    struct _FULL_PTR_TO_REFID_ELEMENT * Next; // Size=4 Offset=0
    void * Pointer; // Size=4 Offset=4
    unsigned long RefId; // Size=4 Offset=8
    unsigned char State; // Size=1 Offset=12
} FULL_PTR_TO_REFID_ELEMENT, *PFULL_PTR_TO_REFID_ELEMENT;
typedef struct tagNMHDR // Size=12
{
    struct HWND__ * hwndFrom; // Size=4 Offset=0
    unsigned int idFrom; // Size=4 Offset=4
    unsigned int code; // Size=4 Offset=8
} *PtagNMHDR;
typedef struct _EXCEPTION_RECORD // Size=80
{
    unsigned long ExceptionCode; // Size=4 Offset=0
    unsigned long ExceptionFlags; // Size=4 Offset=4
    struct _EXCEPTION_RECORD * ExceptionRecord; // Size=4 Offset=8
    void * ExceptionAddress; // Size=4 Offset=12
    unsigned long NumberParameters; // Size=4 Offset=16
    unsigned long ExceptionInformation[15]; // Size=60 Offset=20
} EXCEPTION_RECORD, *PEXCEPTION_RECORD;
typedef struct tagICONMETRICSW // Size=108
{
    unsigned int cbSize; // Size=4 Offset=0
    int iHorzSpacing; // Size=4 Offset=4
    int iVertSpacing; // Size=4 Offset=8
    int iTitleWrap; // Size=4 Offset=12
    struct tagLOGFONTW lfFont; // Size=92 Offset=16
} *PtagICONMETRICSW;
typedef struct _CERT_CONTEXT // Size=20
{
    unsigned long dwCertEncodingType; // Size=4 Offset=0
    unsigned char * pbCertEncoded; // Size=4 Offset=4
    unsigned long cbCertEncoded; // Size=4 Offset=8
    struct _CERT_INFO * pCertInfo; // Size=4 Offset=12
    void * hCertStore; // Size=4 Offset=16
} CERT_CONTEXT, *PCERT_CONTEXT;
typedef struct _CERT_REVOCATION_INFO // Size=28
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwRevocationResult; // Size=4 Offset=4
    char * pszRevocationOid; // Size=4 Offset=8
    void * pvOidSpecificInfo; // Size=4 Offset=12
    int fHasFreshnessTime; // Size=4 Offset=16
    unsigned long dwFreshnessTime; // Size=4 Offset=20
    struct _CERT_REVOCATION_CRL_INFO * pCrlInfo; // Size=4 Offset=24
} CERT_REVOCATION_INFO, *PCERT_REVOCATION_INFO;
typedef union _PRINTER_NOTIFY_INFO_DATA::__unnamed // Size=8
{
    unsigned long adwData[2]; // Size=8 Offset=0
    struct _PRINTER_NOTIFY_INFO_DATA::___unnamed167::___unnamed167 Data; // Size=8 Offset=0
} PRINTER_NOTIFY_INFO_DATA::__unnamed, *PPRINTER_NOTIFY_INFO_DATA::__unnamed;
typedef struct _PRINTER_NOTIFY_INFO_DATA // Size=20
{
    unsigned short Type; // Size=2 Offset=0
    unsigned short Field; // Size=2 Offset=2
    unsigned long Reserved; // Size=4 Offset=4
    unsigned long Id; // Size=4 Offset=8
    union _PRINTER_NOTIFY_INFO_DATA::___unnamed168 NotifyData; // Size=8 Offset=12
} PRINTER_NOTIFY_INFO_DATA, *PPRINTER_NOTIFY_INFO_DATA;
typedef struct _CRYPT_ATTRIBUTE // Size=12
{
    char * pszObjId; // Size=4 Offset=0
    unsigned long cValue; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB * rgValue; // Size=4 Offset=8
} CRYPT_ATTRIBUTE, *PCRYPT_ATTRIBUTE;
typedef struct _CRYPT_ATTRIBUTES // Size=8
{
    unsigned long cAttr; // Size=4 Offset=0
    struct _CRYPT_ATTRIBUTE * rgAttr; // Size=4 Offset=4
} CRYPT_ATTRIBUTES, *PCRYPT_ATTRIBUTES;
typedef struct _CMC_ADD_EXTENSIONS_INFO // Size=20
{
    unsigned long dwCmcDataReference; // Size=4 Offset=0
    unsigned long cCertReference; // Size=4 Offset=4
    unsigned long * rgdwCertReference; // Size=4 Offset=8
    unsigned long cExtension; // Size=4 Offset=12
    struct _CERT_EXTENSION * rgExtension; // Size=4 Offset=16
} CMC_ADD_EXTENSIONS_INFO, *PCMC_ADD_EXTENSIONS_INFO;
typedef struct _CHANGER_ELEMENT // Size=8
{
    enum _ELEMENT_TYPE ElementType; // Size=4 Offset=0
    unsigned long ElementAddress; // Size=4 Offset=4
} CHANGER_ELEMENT, *PCHANGER_ELEMENT;
typedef struct _PRINTER_NOTIFY_OPTIONS // Size=16
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long Count; // Size=4 Offset=8
    struct _PRINTER_NOTIFY_OPTIONS_TYPE * pTypes; // Size=4 Offset=12
} PRINTER_NOTIFY_OPTIONS, *PPRINTER_NOTIFY_OPTIONS;
typedef struct _COMMCONFIG // Size=52
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned short wVersion; // Size=2 Offset=4
    unsigned short wReserved; // Size=2 Offset=6
    struct _DCB dcb; // Size=28 Offset=8
    unsigned long dwProviderSubType; // Size=4 Offset=36
    unsigned long dwProviderOffset; // Size=4 Offset=40
    unsigned long dwProviderSize; // Size=4 Offset=44
    unsigned short wcProviderData[1]; // Size=2 Offset=48
} COMMCONFIG, *PCOMMCONFIG;
typedef struct _CRL_CONTEXT // Size=20
{
    unsigned long dwCertEncodingType; // Size=4 Offset=0
    unsigned char * pbCrlEncoded; // Size=4 Offset=4
    unsigned long cbCrlEncoded; // Size=4 Offset=8
    struct _CRL_INFO * pCrlInfo; // Size=4 Offset=12
    void * hCertStore; // Size=4 Offset=16
} CRL_CONTEXT, *PCRL_CONTEXT;
typedef struct _CRYPT_KEY_PROV_INFO // Size=28
{
    unsigned short * pwszContainerName; // Size=4 Offset=0
    unsigned short * pwszProvName; // Size=4 Offset=4
    unsigned long dwProvType; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
    unsigned long cProvParam; // Size=4 Offset=16
    struct _CRYPT_KEY_PROV_PARAM * rgProvParam; // Size=4 Offset=20
    unsigned long dwKeySpec; // Size=4 Offset=24
} CRYPT_KEY_PROV_INFO, *PCRYPT_KEY_PROV_INFO;
typedef struct _CRYPT_ALGORITHM_IDENTIFIER // Size=12
{
    char * pszObjId; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Parameters; // Size=8 Offset=4
} CRYPT_ALGORITHM_IDENTIFIER, *PCRYPT_ALGORITHM_IDENTIFIER;
typedef struct _LUID_AND_ATTRIBUTES // Size=12
{
    struct _LUID Luid; // Size=8 Offset=0
    unsigned long Attributes; // Size=4 Offset=8
} LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES;
typedef struct tagPOLYTEXTA // Size=40
{
    int x; // Size=4 Offset=0
    int y; // Size=4 Offset=4
    unsigned int n; // Size=4 Offset=8
    char * lpstr; // Size=4 Offset=12
    unsigned int uiFlags; // Size=4 Offset=16
    struct tagRECT rcl; // Size=16 Offset=20
    int * pdx; // Size=4 Offset=36
} *PtagPOLYTEXTA;
typedef struct tagEMRSELECTOBJECT // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihObject; // Size=4 Offset=8
} *PtagEMRSELECTOBJECT;
typedef union _LARGE_INTEGER // Size=8
{
    struct
    {
        unsigned long LowPart; // Size=4 Offset=0
        long HighPart; // Size=4 Offset=4
    };
    struct ___unnamed246 u; // Size=8 Offset=0
    __int64 QuadPart; // Size=8 Offset=0
} LARGE_INTEGER, *PLARGE_INTEGER;
typedef struct tagMINMAXINFO // Size=40
{
    struct tagPOINT ptReserved; // Size=8 Offset=0
    struct tagPOINT ptMaxSize; // Size=8 Offset=8
    struct tagPOINT ptMaxPosition; // Size=8 Offset=16
    struct tagPOINT ptMinTrackSize; // Size=8 Offset=24
    struct tagPOINT ptMaxTrackSize; // Size=8 Offset=32
} *PtagMINMAXINFO;
typedef struct tagWAVEOUTCAPS2A // Size=100
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned long dwFormats; // Size=4 Offset=40
    unsigned short wChannels; // Size=2 Offset=44
    unsigned short wReserved1; // Size=2 Offset=46
    unsigned long dwSupport; // Size=4 Offset=48
    struct _GUID ManufacturerGuid; // Size=16 Offset=52
    struct _GUID ProductGuid; // Size=16 Offset=68
    struct _GUID NameGuid; // Size=16 Offset=84
} *PtagWAVEOUTCAPS2A;
typedef struct tagMCI_ANIM_WINDOW_PARMSA // Size=16
{
    unsigned long dwCallback; // Size=4 Offset=0
    struct HWND__ * hWnd; // Size=4 Offset=4
    unsigned int nCmdShow; // Size=4 Offset=8
    char * lpstrText; // Size=4 Offset=12
} *PtagMCI_ANIM_WINDOW_PARMSA;
typedef struct tagWINDOWINFO // Size=60
{
    unsigned long cbSize; // Size=4 Offset=0
    struct tagRECT rcWindow; // Size=16 Offset=4
    struct tagRECT rcClient; // Size=16 Offset=20
    unsigned long dwStyle; // Size=4 Offset=36
    unsigned long dwExStyle; // Size=4 Offset=40
    unsigned long dwWindowStatus; // Size=4 Offset=44
    unsigned int cxWindowBorders; // Size=4 Offset=48
    unsigned int cyWindowBorders; // Size=4 Offset=52
    unsigned short atomWindowType; // Size=2 Offset=56
    unsigned short wCreatorVersion; // Size=2 Offset=58
} *PtagWINDOWINFO;
typedef struct tagEMRSELECTCLIPPATH // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long iMode; // Size=4 Offset=8
} *PtagEMRSELECTCLIPPATH;
typedef struct tagWAVEOUTCAPS2W // Size=132
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned long dwFormats; // Size=4 Offset=72
    unsigned short wChannels; // Size=2 Offset=76
    unsigned short wReserved1; // Size=2 Offset=78
    unsigned long dwSupport; // Size=4 Offset=80
    struct _GUID ManufacturerGuid; // Size=16 Offset=84
    struct _GUID ProductGuid; // Size=16 Offset=100
    struct _GUID NameGuid; // Size=16 Offset=116
} *PtagWAVEOUTCAPS2W;
typedef struct _TOKEN_SOURCE // Size=16
{
    char SourceName[8]; // Size=8 Offset=0
    struct _LUID SourceIdentifier; // Size=8 Offset=8
} TOKEN_SOURCE, *PTOKEN_SOURCE;
typedef struct tagABORTPATH // Size=8
{
    struct tagEMR emr; // Size=8 Offset=0
} *PtagABORTPATH;
typedef struct tagCOLORCORRECTPALETTE // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihPalette; // Size=4 Offset=8
    unsigned long nFirstEntry; // Size=4 Offset=12
    unsigned long nPalEntries; // Size=4 Offset=16
    unsigned long nReserved; // Size=4 Offset=20
} *PtagCOLORCORRECTPALETTE;
typedef struct _s__CatchableTypeArray // Size=4
{
    int nCatchableTypes; // Size=4 Offset=0
} s__CatchableTypeArray, *Ps__CatchableTypeArray;
typedef struct _CTL_CONTEXT // Size=32
{
    unsigned long dwMsgAndCertEncodingType; // Size=4 Offset=0
    unsigned char * pbCtlEncoded; // Size=4 Offset=4
    unsigned long cbCtlEncoded; // Size=4 Offset=8
    struct _CTL_INFO * pCtlInfo; // Size=4 Offset=12
    void * hCertStore; // Size=4 Offset=16
    void * hCryptMsg; // Size=4 Offset=20
    unsigned char * pbCtlContent; // Size=4 Offset=24
    unsigned long cbCtlContent; // Size=4 Offset=28
} CTL_CONTEXT, *PCTL_CONTEXT;
typedef struct _CRYPT_BLOB_ARRAY // Size=8
{
    unsigned long cBlob; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB * rgBlob; // Size=4 Offset=4
} CRYPT_BLOB_ARRAY, *PCRYPT_BLOB_ARRAY;
typedef struct tagMIXERLINEW // Size=280
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwDestination; // Size=4 Offset=4
    unsigned long dwSource; // Size=4 Offset=8
    unsigned long dwLineID; // Size=4 Offset=12
    unsigned long fdwLine; // Size=4 Offset=16
    unsigned long dwUser; // Size=4 Offset=20
    unsigned long dwComponentType; // Size=4 Offset=24
    unsigned long cChannels; // Size=4 Offset=28
    unsigned long cConnections; // Size=4 Offset=32
    unsigned long cControls; // Size=4 Offset=36
    unsigned short szShortName[16]; // Size=32 Offset=40
    unsigned short szName[64]; // Size=128 Offset=72
    struct tagMIXERLINEW::___unnamed341 Target; // Size=80 Offset=200
} *PtagMIXERLINEW;
typedef struct _wireBRECORD // Size=16
{
    unsigned long fFlags; // Size=4 Offset=0
    unsigned long clSize; // Size=4 Offset=4
    struct IRecordInfo * pRecInfo; // Size=4 Offset=8
    unsigned char * pRecord; // Size=4 Offset=12
} wireBRECORD, *PwireBRECORD;
typedef struct _wireSAFEARR_BRECORD // Size=8
{
    unsigned long Size; // Size=4 Offset=0
    struct _wireBRECORD * * aRecord; // Size=4 Offset=4
} wireSAFEARR_BRECORD, *PwireSAFEARR_BRECORD;
typedef struct tagMIXERLINECONTROLSW // Size=24
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwLineID; // Size=4 Offset=4
    union
    {
        unsigned long dwControlID; // Size=4 Offset=8
        unsigned long dwControlType; // Size=4 Offset=8
    };
    unsigned long cControls; // Size=4 Offset=12
    unsigned long cbmxctrl; // Size=4 Offset=16
    struct tagMIXERCONTROLW * pamxctrl; // Size=4 Offset=20
} *PtagMIXERLINECONTROLSW;
typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE // Size=8
{
    struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE * pNoticeReference; // Size=4 Offset=0
    unsigned short * pszDisplayText; // Size=4 Offset=4
} CERT_POLICY_QUALIFIER_USER_NOTICE, *PCERT_POLICY_QUALIFIER_USER_NOTICE;
typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA // Size=24
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    struct _CMSG_MAIL_LIST_RECIPIENT_INFO * pMailList; // Size=4 Offset=8
    unsigned long dwRecipientIndex; // Size=4 Offset=12
    unsigned long dwKeyChoice; // Size=4 Offset=16
    union
    {
        unsigned long hKeyEncryptionKey; // Size=4 Offset=20
        void * pvKeyEncryptionKey; // Size=4 Offset=20
    };
} CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
typedef struct _CERT_EXTENSION // Size=16
{
    char * pszObjId; // Size=4 Offset=0
    int fCritical; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB Value; // Size=8 Offset=8
} CERT_EXTENSION, *PCERT_EXTENSION;
typedef union _userHENHMETAFILE::__MIDL_IWinTypes_0006 // Size=8
{
    long hInproc; // Size=4 Offset=0
    struct _BYTE_BLOB * hRemote; // Size=4 Offset=0
    __int64 hInproc64; // Size=8 Offset=0
} userHENHMETAFILE::__MIDL_IWinTypes_0006, *PuserHENHMETAFILE::__MIDL_IWinTypes_0006;
typedef struct _CTL_FIND_SUBJECT_PARA // Size=16
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CTL_FIND_USAGE_PARA * pUsagePara; // Size=4 Offset=4
    unsigned long dwSubjectType; // Size=4 Offset=8
    void * pvSubject; // Size=4 Offset=12
} CTL_FIND_SUBJECT_PARA, *PCTL_FIND_SUBJECT_PARA;
typedef struct _VIDEOPARAMETERS // Size=356
{
    struct _GUID Guid; // Size=16 Offset=0
    unsigned long dwOffset; // Size=4 Offset=16
    unsigned long dwCommand; // Size=4 Offset=20
    unsigned long dwFlags; // Size=4 Offset=24
    unsigned long dwMode; // Size=4 Offset=28
    unsigned long dwTVStandard; // Size=4 Offset=32
    unsigned long dwAvailableModes; // Size=4 Offset=36
    unsigned long dwAvailableTVStandard; // Size=4 Offset=40
    unsigned long dwFlickerFilter; // Size=4 Offset=44
    unsigned long dwOverScanX; // Size=4 Offset=48
    unsigned long dwOverScanY; // Size=4 Offset=52
    unsigned long dwMaxUnscaledX; // Size=4 Offset=56
    unsigned long dwMaxUnscaledY; // Size=4 Offset=60
    unsigned long dwPositionX; // Size=4 Offset=64
    unsigned long dwPositionY; // Size=4 Offset=68
    unsigned long dwBrightness; // Size=4 Offset=72
    unsigned long dwContrast; // Size=4 Offset=76
    unsigned long dwCPType; // Size=4 Offset=80
    unsigned long dwCPCommand; // Size=4 Offset=84
    unsigned long dwCPStandard; // Size=4 Offset=88
    unsigned long dwCPKey; // Size=4 Offset=92
    unsigned long bCP_APSTriggerBits; // Size=4 Offset=96
    unsigned char bOEMCopyProtection[256]; // Size=256 Offset=100
} VIDEOPARAMETERS, *PVIDEOPARAMETERS;
typedef struct _LDT_ENTRY // Size=8
{
    unsigned short LimitLow; // Size=2 Offset=0
    unsigned short BaseLow; // Size=2 Offset=2
    union _LDT_ENTRY::___unnamed444 HighWord; // Size=4 Offset=4
} LDT_ENTRY, *PLDT_ENTRY;
typedef struct _CRYPT_SMIME_CAPABILITY // Size=12
{
    char * pszObjId; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Parameters; // Size=8 Offset=4
} CRYPT_SMIME_CAPABILITY, *PCRYPT_SMIME_CAPABILITY;
typedef struct _CRYPT_SMIME_CAPABILITIES // Size=8
{
    unsigned long cCapability; // Size=4 Offset=0
    struct _CRYPT_SMIME_CAPABILITY * rgCapability; // Size=4 Offset=4
} CRYPT_SMIME_CAPABILITIES, *PCRYPT_SMIME_CAPABILITIES;
typedef struct tagCWPRETSTRUCT // Size=20
{
    long lResult; // Size=4 Offset=0
    long lParam; // Size=4 Offset=4
    unsigned int wParam; // Size=4 Offset=8
    unsigned int message; // Size=4 Offset=12
    struct HWND__ * hwnd; // Size=4 Offset=16
} *PtagCWPRETSTRUCT;
typedef struct tagAUXCAPS2W // Size=128
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned short wTechnology; // Size=2 Offset=72
    unsigned short wReserved1; // Size=2 Offset=74
    unsigned long dwSupport; // Size=4 Offset=76
    struct _GUID ManufacturerGuid; // Size=16 Offset=80
    struct _GUID ProductGuid; // Size=16 Offset=96
    struct _GUID NameGuid; // Size=16 Offset=112
} *PtagAUXCAPS2W;
typedef struct tagMIXERCAPS2W // Size=128
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned long fdwSupport; // Size=4 Offset=72
    unsigned long cDestinations; // Size=4 Offset=76
    struct _GUID ManufacturerGuid; // Size=16 Offset=80
    struct _GUID ProductGuid; // Size=16 Offset=96
    struct _GUID NameGuid; // Size=16 Offset=112
} *PtagMIXERCAPS2W;
typedef struct _RPC_SECURITY_QOS_V3_W // Size=28
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Capabilities; // Size=4 Offset=4
    unsigned long IdentityTracking; // Size=4 Offset=8
    unsigned long ImpersonationType; // Size=4 Offset=12
    unsigned long AdditionalSecurityInfoType; // Size=4 Offset=16
    union _RPC_SECURITY_QOS_V3_W::___unnamed471 u; // Size=4 Offset=20
    void * Sid; // Size=4 Offset=24
} RPC_SECURITY_QOS_V3_W, *PRPC_SECURITY_QOS_V3_W;
typedef struct _MAT2 // Size=16
{
    struct _FIXED eM11; // Size=4 Offset=0
    struct _FIXED eM12; // Size=4 Offset=4
    struct _FIXED eM21; // Size=4 Offset=8
    struct _FIXED eM22; // Size=4 Offset=12
} MAT2, *PMAT2;
typedef struct tagEMRNAMEDESCAPE // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    int iEscape; // Size=4 Offset=8
    int cbDriver; // Size=4 Offset=12
    int cbEscData; // Size=4 Offset=16
    unsigned char EscData[1]; // Size=1 Offset=20
} *PtagEMRNAMEDESCAPE;
typedef struct in_addr // Size=4
{
    union in_addr::___unnamed498 S_un; // Size=4 Offset=0
} *Pin_addr;
typedef struct tagEVENTMSG // Size=20
{
    unsigned int message; // Size=4 Offset=0
    unsigned int paramL; // Size=4 Offset=4
    unsigned int paramH; // Size=4 Offset=8
    unsigned long time; // Size=4 Offset=12
    struct HWND__ * hwnd; // Size=4 Offset=16
} *PtagEVENTMSG;
typedef struct _IMAGE_OPTIONAL_HEADER64 // Size=240
{
    unsigned short Magic; // Size=2 Offset=0
    unsigned char MajorLinkerVersion; // Size=1 Offset=2
    unsigned char MinorLinkerVersion; // Size=1 Offset=3
    unsigned long SizeOfCode; // Size=4 Offset=4
    unsigned long SizeOfInitializedData; // Size=4 Offset=8
    unsigned long SizeOfUninitializedData; // Size=4 Offset=12
    unsigned long AddressOfEntryPoint; // Size=4 Offset=16
    unsigned long BaseOfCode; // Size=4 Offset=20
    unsigned __int64 ImageBase; // Size=8 Offset=24
    unsigned long SectionAlignment; // Size=4 Offset=32
    unsigned long FileAlignment; // Size=4 Offset=36
    unsigned short MajorOperatingSystemVersion; // Size=2 Offset=40
    unsigned short MinorOperatingSystemVersion; // Size=2 Offset=42
    unsigned short MajorImageVersion; // Size=2 Offset=44
    unsigned short MinorImageVersion; // Size=2 Offset=46
    unsigned short MajorSubsystemVersion; // Size=2 Offset=48
    unsigned short MinorSubsystemVersion; // Size=2 Offset=50
    unsigned long Win32VersionValue; // Size=4 Offset=52
    unsigned long SizeOfImage; // Size=4 Offset=56
    unsigned long SizeOfHeaders; // Size=4 Offset=60
    unsigned long CheckSum; // Size=4 Offset=64
    unsigned short Subsystem; // Size=2 Offset=68
    unsigned short DllCharacteristics; // Size=2 Offset=70
    unsigned __int64 SizeOfStackReserve; // Size=8 Offset=72
    unsigned __int64 SizeOfStackCommit; // Size=8 Offset=80
    unsigned __int64 SizeOfHeapReserve; // Size=8 Offset=88
    unsigned __int64 SizeOfHeapCommit; // Size=8 Offset=96
    unsigned long LoaderFlags; // Size=4 Offset=104
    unsigned long NumberOfRvaAndSizes; // Size=4 Offset=108
    struct _IMAGE_DATA_DIRECTORY DataDirectory[16]; // Size=128 Offset=112
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64;
typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A // Size=24
{
    struct _SEC_WINNT_AUTH_IDENTITY_A * TransportCredentials; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long AuthenticationTarget; // Size=4 Offset=8
    unsigned long NumberOfAuthnSchemes; // Size=4 Offset=12
    unsigned long * AuthnSchemes; // Size=4 Offset=16
    unsigned char * ServerCertificateSubject; // Size=4 Offset=20
} RPC_HTTP_TRANSPORT_CREDENTIALS_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_A;
typedef union _RPC_SECURITY_QOS_V2_A::__unnamed // Size=4
{
    struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A * HttpCredentials; // Size=4 Offset=0
} RPC_SECURITY_QOS_V2_A::__unnamed, *PRPC_SECURITY_QOS_V2_A::__unnamed;
typedef struct _RPC_SECURITY_QOS_V2_A // Size=24
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Capabilities; // Size=4 Offset=4
    unsigned long IdentityTracking; // Size=4 Offset=8
    unsigned long ImpersonationType; // Size=4 Offset=12
    unsigned long AdditionalSecurityInfoType; // Size=4 Offset=16
    union _RPC_SECURITY_QOS_V2_A::___unnamed510 u; // Size=4 Offset=20
} RPC_SECURITY_QOS_V2_A, *PRPC_SECURITY_QOS_V2_A;
typedef struct _s__RTTIClassHierarchyDescriptor // Size=16
{
    unsigned long signature; // Size=4 Offset=0
    unsigned long attributes; // Size=4 Offset=4
    unsigned long numBaseClasses; // Size=4 Offset=8
    struct _s__RTTIBaseClassArray * pBaseClassArray; // Size=4 Offset=12
} s__RTTIClassHierarchyDescriptor, *Ps__RTTIClassHierarchyDescriptor;
typedef union _IMAGE_AUX_SYMBOL::__unnamed::__unnamed // Size=4
{
    struct _IMAGE_AUX_SYMBOL::___unnamed523::___unnamed523::___unnamed523 LnSz; // Size=4 Offset=0
    unsigned long TotalSize; // Size=4 Offset=0
} IMAGE_AUX_SYMBOL::__unnamed::__unnamed, *PIMAGE_AUX_SYMBOL::__unnamed::__unnamed;
typedef struct _BY_HANDLE_FILE_INFORMATION // Size=52
{
    unsigned long dwFileAttributes; // Size=4 Offset=0
    struct _FILETIME ftCreationTime; // Size=8 Offset=4
    struct _FILETIME ftLastAccessTime; // Size=8 Offset=12
    struct _FILETIME ftLastWriteTime; // Size=8 Offset=20
    unsigned long dwVolumeSerialNumber; // Size=4 Offset=28
    unsigned long nFileSizeHigh; // Size=4 Offset=32
    unsigned long nFileSizeLow; // Size=4 Offset=36
    unsigned long nNumberOfLinks; // Size=4 Offset=40
    unsigned long nFileIndexHigh; // Size=4 Offset=44
    unsigned long nFileIndexLow; // Size=4 Offset=48
} BY_HANDLE_FILE_INFORMATION, *PBY_HANDLE_FILE_INFORMATION;
typedef struct _CRYPT_X942_OTHER_INFO // Size=20
{
    char * pszContentEncryptionObjId; // Size=4 Offset=0
    unsigned char rgbCounter[4]; // Size=4 Offset=4
    unsigned char rgbKeyLength[4]; // Size=4 Offset=8
    struct _CRYPTOAPI_BLOB PubInfo; // Size=8 Offset=12
} CRYPT_X942_OTHER_INFO, *PCRYPT_X942_OTHER_INFO;
typedef struct tagCACLSID // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    struct _GUID * pElems; // Size=4 Offset=4
} *PtagCACLSID;
typedef struct tagMCI_OVLY_SAVE_PARMSW // Size=24
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned short * lpfilename; // Size=4 Offset=4
    struct tagRECT rc; // Size=16 Offset=8
} *PtagMCI_OVLY_SAVE_PARMSW;
typedef struct tagWAVEINCAPS2A // Size=96
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned long dwFormats; // Size=4 Offset=40
    unsigned short wChannels; // Size=2 Offset=44
    unsigned short wReserved1; // Size=2 Offset=46
    struct _GUID ManufacturerGuid; // Size=16 Offset=48
    struct _GUID ProductGuid; // Size=16 Offset=64
    struct _GUID NameGuid; // Size=16 Offset=80
} *PtagWAVEINCAPS2A;
typedef struct _CERT_ALT_NAME_INFO // Size=8
{
    unsigned long cAltEntry; // Size=4 Offset=0
    struct _CERT_ALT_NAME_ENTRY * rgAltEntry; // Size=4 Offset=4
} CERT_ALT_NAME_INFO, *PCERT_ALT_NAME_INFO;
typedef struct tagFORMATETC // Size=20
{
    unsigned short cfFormat; // Size=2 Offset=0
    struct tagDVTARGETDEVICE * ptd; // Size=4 Offset=4
    unsigned long dwAspect; // Size=4 Offset=8
    long lindex; // Size=4 Offset=12
    unsigned long tymed; // Size=4 Offset=16
} *PtagFORMATETC;
typedef struct _TOKEN_DEFAULT_DACL // Size=4
{
    struct _ACL * DefaultDacl; // Size=4 Offset=0
} TOKEN_DEFAULT_DACL, *PTOKEN_DEFAULT_DACL;
typedef struct _devicemodeA // Size=156
{
    unsigned char dmDeviceName[32]; // Size=32 Offset=0
    unsigned short dmSpecVersion; // Size=2 Offset=32
    unsigned short dmDriverVersion; // Size=2 Offset=34
    unsigned short dmSize; // Size=2 Offset=36
    unsigned short dmDriverExtra; // Size=2 Offset=38
    unsigned long dmFields; // Size=4 Offset=40
    union
    {
        struct
        {
            short dmOrientation; // Size=2 Offset=44
            short dmPaperSize; // Size=2 Offset=46
            short dmPaperLength; // Size=2 Offset=48
            short dmPaperWidth; // Size=2 Offset=50
        };
        struct _POINTL dmPosition; // Size=8 Offset=44
    };
    union
    {
        struct
        {
            short dmScale; // Size=2 Offset=52
            short dmCopies; // Size=2 Offset=54
        };
        unsigned long dmDisplayOrientation; // Size=4 Offset=52
    };
    union
    {
        struct
        {
            short dmDefaultSource; // Size=2 Offset=56
            short dmPrintQuality; // Size=2 Offset=58
        };
        unsigned long dmDisplayFixedOutput; // Size=4 Offset=56
    };
    short dmColor; // Size=2 Offset=60
    short dmDuplex; // Size=2 Offset=62
    short dmYResolution; // Size=2 Offset=64
    short dmTTOption; // Size=2 Offset=66
    short dmCollate; // Size=2 Offset=68
    unsigned char dmFormName[32]; // Size=32 Offset=70
    unsigned short dmLogPixels; // Size=2 Offset=102
    unsigned long dmBitsPerPel; // Size=4 Offset=104
    unsigned long dmPelsWidth; // Size=4 Offset=108
    unsigned long dmPelsHeight; // Size=4 Offset=112
    union
    {
        unsigned long dmDisplayFlags; // Size=4 Offset=116
        unsigned long dmNup; // Size=4 Offset=116
    };
    unsigned long dmDisplayFrequency; // Size=4 Offset=120
    unsigned long dmICMMethod; // Size=4 Offset=124
    unsigned long dmICMIntent; // Size=4 Offset=128
    unsigned long dmMediaType; // Size=4 Offset=132
    unsigned long dmDitherType; // Size=4 Offset=136
    unsigned long dmReserved1; // Size=4 Offset=140
    unsigned long dmReserved2; // Size=4 Offset=144
    unsigned long dmPanningWidth; // Size=4 Offset=148
    unsigned long dmPanningHeight; // Size=4 Offset=152
} devicemodeA, *PdevicemodeA;
typedef struct _ADMINISTRATOR_POWER_POLICY // Size=24
{
    enum _SYSTEM_POWER_STATE MinSleep; // Size=4 Offset=0
    enum _SYSTEM_POWER_STATE MaxSleep; // Size=4 Offset=4
    unsigned long MinVideoTimeout; // Size=4 Offset=8
    unsigned long MaxVideoTimeout; // Size=4 Offset=12
    unsigned long MinSpindownTimeout; // Size=4 Offset=16
    unsigned long MaxSpindownTimeout; // Size=4 Offset=20
} ADMINISTRATOR_POWER_POLICY, *PADMINISTRATOR_POWER_POLICY;
typedef struct _IMAGE_OPTIONAL_HEADER // Size=224
{
    unsigned short Magic; // Size=2 Offset=0
    unsigned char MajorLinkerVersion; // Size=1 Offset=2
    unsigned char MinorLinkerVersion; // Size=1 Offset=3
    unsigned long SizeOfCode; // Size=4 Offset=4
    unsigned long SizeOfInitializedData; // Size=4 Offset=8
    unsigned long SizeOfUninitializedData; // Size=4 Offset=12
    unsigned long AddressOfEntryPoint; // Size=4 Offset=16
    unsigned long BaseOfCode; // Size=4 Offset=20
    unsigned long BaseOfData; // Size=4 Offset=24
    unsigned long ImageBase; // Size=4 Offset=28
    unsigned long SectionAlignment; // Size=4 Offset=32
    unsigned long FileAlignment; // Size=4 Offset=36
    unsigned short MajorOperatingSystemVersion; // Size=2 Offset=40
    unsigned short MinorOperatingSystemVersion; // Size=2 Offset=42
    unsigned short MajorImageVersion; // Size=2 Offset=44
    unsigned short MinorImageVersion; // Size=2 Offset=46
    unsigned short MajorSubsystemVersion; // Size=2 Offset=48
    unsigned short MinorSubsystemVersion; // Size=2 Offset=50
    unsigned long Win32VersionValue; // Size=4 Offset=52
    unsigned long SizeOfImage; // Size=4 Offset=56
    unsigned long SizeOfHeaders; // Size=4 Offset=60
    unsigned long CheckSum; // Size=4 Offset=64
    unsigned short Subsystem; // Size=2 Offset=68
    unsigned short DllCharacteristics; // Size=2 Offset=70
    unsigned long SizeOfStackReserve; // Size=4 Offset=72
    unsigned long SizeOfStackCommit; // Size=4 Offset=76
    unsigned long SizeOfHeapReserve; // Size=4 Offset=80
    unsigned long SizeOfHeapCommit; // Size=4 Offset=84
    unsigned long LoaderFlags; // Size=4 Offset=88
    unsigned long NumberOfRvaAndSizes; // Size=4 Offset=92
    struct _IMAGE_DATA_DIRECTORY DataDirectory[16]; // Size=128 Offset=96
} IMAGE_OPTIONAL_HEADER, *PIMAGE_OPTIONAL_HEADER;
typedef struct tagLOGPEN // Size=16
{
    unsigned int lopnStyle; // Size=4 Offset=0
    struct tagPOINT lopnWidth; // Size=8 Offset=4
    unsigned long lopnColor; // Size=4 Offset=12
} *PtagLOGPEN;
typedef struct tagMIDIOUTCAPS2W // Size=132
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned short wTechnology; // Size=2 Offset=72
    unsigned short wVoices; // Size=2 Offset=74
    unsigned short wNotes; // Size=2 Offset=76
    unsigned short wChannelMask; // Size=2 Offset=78
    unsigned long dwSupport; // Size=4 Offset=80
    struct _GUID ManufacturerGuid; // Size=16 Offset=84
    struct _GUID ProductGuid; // Size=16 Offset=100
    struct _GUID NameGuid; // Size=16 Offset=116
} *PtagMIDIOUTCAPS2W;
typedef struct _CRL_FIND_ISSUED_FOR_PARA // Size=8
{
    struct _CERT_CONTEXT * pSubjectCert; // Size=4 Offset=0
    struct _CERT_CONTEXT * pIssuerCert; // Size=4 Offset=4
} CRL_FIND_ISSUED_FOR_PARA, *PCRL_FIND_ISSUED_FOR_PARA;
typedef struct tagCHOOSECOLORA // Size=36
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HWND__ * hInstance; // Size=4 Offset=8
    unsigned long rgbResult; // Size=4 Offset=12
    unsigned long * lpCustColors; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    long lCustData; // Size=4 Offset=24
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=28
    char * lpTemplateName; // Size=4 Offset=32
} *PtagCHOOSECOLORA;
typedef struct _CERT_ISSUER_SERIAL_NUMBER // Size=16
{
    struct _CRYPTOAPI_BLOB Issuer; // Size=8 Offset=0
    struct _CRYPTOAPI_BLOB SerialNumber; // Size=8 Offset=8
} CERT_ISSUER_SERIAL_NUMBER, *PCERT_ISSUER_SERIAL_NUMBER;
typedef struct tagCOLORMATCHTOTARGET // Size=28
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long dwAction; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
    unsigned long cbName; // Size=4 Offset=16
    unsigned long cbData; // Size=4 Offset=20
    unsigned char Data[1]; // Size=1 Offset=24
} *PtagCOLORMATCHTOTARGET;
typedef struct tagMIXERCAPS2A // Size=96
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned long fdwSupport; // Size=4 Offset=40
    unsigned long cDestinations; // Size=4 Offset=44
    struct _GUID ManufacturerGuid; // Size=16 Offset=48
    struct _GUID ProductGuid; // Size=16 Offset=64
    struct _GUID NameGuid; // Size=16 Offset=80
} *PtagMIXERCAPS2A;
typedef struct tagJOYCAPS2A // Size=452
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    char szPname[32]; // Size=32 Offset=4
    unsigned int wXmin; // Size=4 Offset=36
    unsigned int wXmax; // Size=4 Offset=40
    unsigned int wYmin; // Size=4 Offset=44
    unsigned int wYmax; // Size=4 Offset=48
    unsigned int wZmin; // Size=4 Offset=52
    unsigned int wZmax; // Size=4 Offset=56
    unsigned int wNumButtons; // Size=4 Offset=60
    unsigned int wPeriodMin; // Size=4 Offset=64
    unsigned int wPeriodMax; // Size=4 Offset=68
    unsigned int wRmin; // Size=4 Offset=72
    unsigned int wRmax; // Size=4 Offset=76
    unsigned int wUmin; // Size=4 Offset=80
    unsigned int wUmax; // Size=4 Offset=84
    unsigned int wVmin; // Size=4 Offset=88
    unsigned int wVmax; // Size=4 Offset=92
    unsigned int wCaps; // Size=4 Offset=96
    unsigned int wMaxAxes; // Size=4 Offset=100
    unsigned int wNumAxes; // Size=4 Offset=104
    unsigned int wMaxButtons; // Size=4 Offset=108
    char szRegKey[32]; // Size=32 Offset=112
    char szOEMVxD[260]; // Size=260 Offset=144
    struct _GUID ManufacturerGuid; // Size=16 Offset=404
    struct _GUID ProductGuid; // Size=16 Offset=420
    struct _GUID NameGuid; // Size=16 Offset=436
} *PtagJOYCAPS2A;
typedef struct tagMCI_ANIM_OPEN_PARMSA // Size=28
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned int wDeviceID; // Size=4 Offset=4
    char * lpstrDeviceType; // Size=4 Offset=8
    char * lpstrElementName; // Size=4 Offset=12
    char * lpstrAlias; // Size=4 Offset=16
    unsigned long dwStyle; // Size=4 Offset=20
    struct HWND__ * hWndParent; // Size=4 Offset=24
} *PtagMCI_ANIM_OPEN_PARMSA;
typedef struct tagEMRSELECTPALETTE // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihPal; // Size=4 Offset=8
} *PtagEMRSELECTPALETTE;
typedef struct _PUBKEYVER3 // Size=40
{
    unsigned long magic; // Size=4 Offset=0
    unsigned long bitlenP; // Size=4 Offset=4
    unsigned long bitlenQ; // Size=4 Offset=8
    unsigned long bitlenJ; // Size=4 Offset=12
    struct _DSSSEED DSSSeed; // Size=24 Offset=16
} PUBKEYVER3, *PPUBKEYVER3;
typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA // Size=8
{
    struct HKEY__ * hKey; // Size=4 Offset=0
    unsigned short * pwszStoreDirectory; // Size=4 Offset=4
} CERT_REGISTRY_STORE_ROAMING_PARA, *PCERT_REGISTRY_STORE_ROAMING_PARA;
typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 // Size=40
{
    void * Buffer; // Size=4 Offset=0
    unsigned long BufferSize; // Size=4 Offset=4
    void * ( * pfnAllocate)(unsigned int); // Size=4 Offset=8
    void ( * pfnFree)(void *); // Size=4 Offset=12
    struct IRpcChannelBuffer * pRpcChannelBuffer; // Size=4 Offset=16
    unsigned long Reserved[5]; // Size=20 Offset=20
} NDR_USER_MARSHAL_INFO_LEVEL1, *PNDR_USER_MARSHAL_INFO_LEVEL1;
typedef struct _CONTEXT // Size=716
{
    unsigned long ContextFlags; // Size=4 Offset=0
    unsigned long Dr0; // Size=4 Offset=4
    unsigned long Dr1; // Size=4 Offset=8
    unsigned long Dr2; // Size=4 Offset=12
    unsigned long Dr3; // Size=4 Offset=16
    unsigned long Dr6; // Size=4 Offset=20
    unsigned long Dr7; // Size=4 Offset=24
    struct _FLOATING_SAVE_AREA FloatSave; // Size=112 Offset=28
    unsigned long SegGs; // Size=4 Offset=140
    unsigned long SegFs; // Size=4 Offset=144
    unsigned long SegEs; // Size=4 Offset=148
    unsigned long SegDs; // Size=4 Offset=152
    unsigned long Edi; // Size=4 Offset=156
    unsigned long Esi; // Size=4 Offset=160
    unsigned long Ebx; // Size=4 Offset=164
    unsigned long Edx; // Size=4 Offset=168
    unsigned long Ecx; // Size=4 Offset=172
    unsigned long Eax; // Size=4 Offset=176
    unsigned long Ebp; // Size=4 Offset=180
    unsigned long Eip; // Size=4 Offset=184
    unsigned long SegCs; // Size=4 Offset=188
    unsigned long EFlags; // Size=4 Offset=192
    unsigned long Esp; // Size=4 Offset=196
    unsigned long SegSs; // Size=4 Offset=200
    unsigned char ExtendedRegisters[512]; // Size=512 Offset=204
} CONTEXT, *PCONTEXT;
typedef union _RPC_SECURITY_QOS_V3_A::__unnamed // Size=4
{
    struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A * HttpCredentials; // Size=4 Offset=0
} RPC_SECURITY_QOS_V3_A::__unnamed, *PRPC_SECURITY_QOS_V3_A::__unnamed;
typedef struct _RPC_SECURITY_QOS_V3_A // Size=28
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Capabilities; // Size=4 Offset=4
    unsigned long IdentityTracking; // Size=4 Offset=8
    unsigned long ImpersonationType; // Size=4 Offset=12
    unsigned long AdditionalSecurityInfoType; // Size=4 Offset=16
    union _RPC_SECURITY_QOS_V3_A::___unnamed703 u; // Size=4 Offset=20
    void * Sid; // Size=4 Offset=24
} RPC_SECURITY_QOS_V3_A, *PRPC_SECURITY_QOS_V3_A;
typedef struct _OLESTREAM // Size=4
{
    struct _OLESTREAMVTBL * lpstbl; // Size=4 Offset=0
} OLESTREAM, *POLESTREAM;
typedef struct _OLESTREAMVTBL // Size=8
{
    unsigned long ( * Get)(struct _OLESTREAM *,void *,unsigned long); // Size=4 Offset=0
    unsigned long ( * Put)(struct _OLESTREAM *,void *,unsigned long); // Size=4 Offset=4
} OLESTREAMVTBL, *POLESTREAMVTBL;
typedef struct _PRINTER_INFO_8A // Size=4
{
    struct _devicemodeA * pDevMode; // Size=4 Offset=0
} PRINTER_INFO_8A, *PPRINTER_INFO_8A;
typedef union _MIDL_STUB_DESC::__unnamed // Size=4
{
    void * * pAutoHandle; // Size=4 Offset=0
    void * * pPrimitiveHandle; // Size=4 Offset=0
    struct __GENERIC_BINDING_INFO * pGenericBindingInfo; // Size=4 Offset=0
} MIDL_STUB_DESC::__unnamed, *PMIDL_STUB_DESC::__unnamed;
typedef struct _NDR_CS_ROUTINES // Size=8
{
    struct _NDR_CS_SIZE_CONVERT_ROUTINES * pSizeConvertRoutines; // Size=4 Offset=0
    void ( * * pTagGettingRoutines)(void *,int,unsigned long *,unsigned long *,unsigned long *,unsigned long *); // Size=4 Offset=4
} NDR_CS_ROUTINES, *PNDR_CS_ROUTINES;
typedef struct _GLYPHMETRICSFLOAT // Size=24
{
    float gmfBlackBoxX; // Size=4 Offset=0
    float gmfBlackBoxY; // Size=4 Offset=4
    struct _POINTFLOAT gmfptGlyphOrigin; // Size=8 Offset=8
    float gmfCellIncX; // Size=4 Offset=16
    float gmfCellIncY; // Size=4 Offset=20
} GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT;
typedef struct _CRYPT_OID_INFO // Size=28
{
    unsigned long cbSize; // Size=4 Offset=0
    char * pszOID; // Size=4 Offset=4
    unsigned short * pwszName; // Size=4 Offset=8
    unsigned long dwGroupId; // Size=4 Offset=12
    union
    {
        unsigned long dwValue; // Size=4 Offset=16
        unsigned int Algid; // Size=4 Offset=16
        unsigned long dwLength; // Size=4 Offset=16
    };
    struct _CRYPTOAPI_BLOB ExtraInfo; // Size=8 Offset=20
} CRYPT_OID_INFO, *PCRYPT_OID_INFO;
typedef struct _SOCKET_ADDRESS // Size=8
{
    struct sockaddr * lpSockaddr; // Size=4 Offset=0
    int iSockaddrLength; // Size=4 Offset=4
} SOCKET_ADDRESS, *PSOCKET_ADDRESS;
typedef struct _SYSTEM_ALARM_CALLBACK_ACE // Size=12
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long SidStart; // Size=4 Offset=8
} SYSTEM_ALARM_CALLBACK_ACE, *PSYSTEM_ALARM_CALLBACK_ACE;
typedef struct POWER_ACTION_POLICY // Size=12
{
    enum POWER_ACTION Action; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long EventCode; // Size=4 Offset=8
} *PPOWER_ACTION_POLICY;
typedef struct SCARD_T1_REQUEST // Size=8
{
    struct _SCARD_IO_REQUEST ioRequest; // Size=8 Offset=0
} *PSCARD_T1_REQUEST;
typedef struct _WSANAMESPACE_INFOA // Size=32
{
    struct _GUID NSProviderId; // Size=16 Offset=0
    unsigned long dwNameSpace; // Size=4 Offset=16
    int fActive; // Size=4 Offset=20
    unsigned long dwVersion; // Size=4 Offset=24
    char * lpszIdentifier; // Size=4 Offset=28
} WSANAMESPACE_INFOA, *PWSANAMESPACE_INFOA;
typedef struct tagCACY // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    union tagCY * pElems; // Size=4 Offset=4
} *PtagCACY;
typedef struct _CERT_RDN // Size=8
{
    unsigned long cRDNAttr; // Size=4 Offset=0
    struct _CERT_RDN_ATTR * rgRDNAttr; // Size=4 Offset=4
} CERT_RDN, *PCERT_RDN;
typedef struct _PRINTER_INFO_2A // Size=84
{
    char * pServerName; // Size=4 Offset=0
    char * pPrinterName; // Size=4 Offset=4
    char * pShareName; // Size=4 Offset=8
    char * pPortName; // Size=4 Offset=12
    char * pDriverName; // Size=4 Offset=16
    char * pComment; // Size=4 Offset=20
    char * pLocation; // Size=4 Offset=24
    struct _devicemodeA * pDevMode; // Size=4 Offset=28
    char * pSepFile; // Size=4 Offset=32
    char * pPrintProcessor; // Size=4 Offset=36
    char * pDatatype; // Size=4 Offset=40
    char * pParameters; // Size=4 Offset=44
    void * pSecurityDescriptor; // Size=4 Offset=48
    unsigned long Attributes; // Size=4 Offset=52
    unsigned long Priority; // Size=4 Offset=56
    unsigned long DefaultPriority; // Size=4 Offset=60
    unsigned long StartTime; // Size=4 Offset=64
    unsigned long UntilTime; // Size=4 Offset=68
    unsigned long Status; // Size=4 Offset=72
    unsigned long cJobs; // Size=4 Offset=76
    unsigned long AveragePPM; // Size=4 Offset=80
} PRINTER_INFO_2A, *PPRINTER_INFO_2A;
typedef struct _ENUM_SERVICE_STATUS_PROCESSA // Size=44
{
    char * lpServiceName; // Size=4 Offset=0
    char * lpDisplayName; // Size=4 Offset=4
    struct _SERVICE_STATUS_PROCESS ServiceStatusProcess; // Size=36 Offset=8
} ENUM_SERVICE_STATUS_PROCESSA, *PENUM_SERVICE_STATUS_PROCESSA;
typedef struct _CMC_STATUS_INFO // Size=24
{
    unsigned long dwStatus; // Size=4 Offset=0
    unsigned long cBodyList; // Size=4 Offset=4
    unsigned long * rgdwBodyList; // Size=4 Offset=8
    unsigned short * pwszStatusString; // Size=4 Offset=12
    unsigned long dwOtherInfoChoice; // Size=4 Offset=16
    union
    {
        unsigned long dwFailInfo; // Size=4 Offset=20
        struct _CMC_PEND_INFO * pPendInfo; // Size=4 Offset=20
    };
} CMC_STATUS_INFO, *PCMC_STATUS_INFO;
typedef struct tagMCI_ANIM_OPEN_PARMSW // Size=28
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned int wDeviceID; // Size=4 Offset=4
    unsigned short * lpstrDeviceType; // Size=4 Offset=8
    unsigned short * lpstrElementName; // Size=4 Offset=12
    unsigned short * lpstrAlias; // Size=4 Offset=16
    unsigned long dwStyle; // Size=4 Offset=20
    struct HWND__ * hWndParent; // Size=4 Offset=24
} *PtagMCI_ANIM_OPEN_PARMSW;
typedef struct _PRINTER_DEFAULTSA // Size=12
{
    char * pDatatype; // Size=4 Offset=0
    struct _devicemodeA * pDevMode; // Size=4 Offset=4
    unsigned long DesiredAccess; // Size=4 Offset=8
} PRINTER_DEFAULTSA, *PPRINTER_DEFAULTSA;
typedef struct _CMS_DH_KEY_INFO // Size=24
{
    unsigned long dwVersion; // Size=4 Offset=0
    unsigned int Algid; // Size=4 Offset=4
    char * pszContentEncObjId; // Size=4 Offset=8
    struct _CRYPTOAPI_BLOB PubInfo; // Size=8 Offset=12
    void * pReserved; // Size=4 Offset=20
} CMS_DH_KEY_INFO, *PCMS_DH_KEY_INFO;
typedef struct _IMAGE_SYMBOL // Size=18
{
    union _IMAGE_SYMBOL::___unnamed862 N; // Size=8 Offset=0
    unsigned long Value; // Size=4 Offset=8
    short SectionNumber; // Size=2 Offset=12
    unsigned short Type; // Size=2 Offset=14
    unsigned char StorageClass; // Size=1 Offset=16
    unsigned char NumberOfAuxSymbols; // Size=1 Offset=17
} IMAGE_SYMBOL, *PIMAGE_SYMBOL;
typedef struct _SECURITY_QUALITY_OF_SERVICE // Size=12
{
    unsigned long Length; // Size=4 Offset=0
    enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; // Size=4 Offset=4
    unsigned char ContextTrackingMode; // Size=1 Offset=8
    unsigned char EffectiveOnly; // Size=1 Offset=9
} SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE;
typedef struct _JOB_INFO_1A // Size=64
{
    unsigned long JobId; // Size=4 Offset=0
    char * pPrinterName; // Size=4 Offset=4
    char * pMachineName; // Size=4 Offset=8
    char * pUserName; // Size=4 Offset=12
    char * pDocument; // Size=4 Offset=16
    char * pDatatype; // Size=4 Offset=20
    char * pStatus; // Size=4 Offset=24
    unsigned long Status; // Size=4 Offset=28
    unsigned long Priority; // Size=4 Offset=32
    unsigned long Position; // Size=4 Offset=36
    unsigned long TotalPages; // Size=4 Offset=40
    unsigned long PagesPrinted; // Size=4 Offset=44
    struct _SYSTEMTIME Submitted; // Size=16 Offset=48
} JOB_INFO_1A, *PJOB_INFO_1A;
typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W // Size=24
{
    struct _SEC_WINNT_AUTH_IDENTITY_W * TransportCredentials; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long AuthenticationTarget; // Size=4 Offset=8
    unsigned long NumberOfAuthnSchemes; // Size=4 Offset=12
    unsigned long * AuthnSchemes; // Size=4 Offset=16
    unsigned short * ServerCertificateSubject; // Size=4 Offset=20
} RPC_HTTP_TRANSPORT_CREDENTIALS_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_W;
typedef union _RPC_SECURITY_QOS_V2_W::__unnamed // Size=4
{
    struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W * HttpCredentials; // Size=4 Offset=0
} RPC_SECURITY_QOS_V2_W::__unnamed, *PRPC_SECURITY_QOS_V2_W::__unnamed;
typedef struct _RPC_SECURITY_QOS_V2_W // Size=24
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Capabilities; // Size=4 Offset=4
    unsigned long IdentityTracking; // Size=4 Offset=8
    unsigned long ImpersonationType; // Size=4 Offset=12
    unsigned long AdditionalSecurityInfoType; // Size=4 Offset=16
    union _RPC_SECURITY_QOS_V2_W::___unnamed878 u; // Size=4 Offset=20
} RPC_SECURITY_QOS_V2_W, *PRPC_SECURITY_QOS_V2_W;
typedef struct tagIMEMENUITEMINFOA // Size=112
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned int fType; // Size=4 Offset=4
    unsigned int fState; // Size=4 Offset=8
    unsigned int wID; // Size=4 Offset=12
    struct HBITMAP__ * hbmpChecked; // Size=4 Offset=16
    struct HBITMAP__ * hbmpUnchecked; // Size=4 Offset=20
    unsigned long dwItemData; // Size=4 Offset=24
    char szString[80]; // Size=80 Offset=28
    struct HBITMAP__ * hbmpItem; // Size=4 Offset=108
} *PtagIMEMENUITEMINFOA;
typedef struct _userCLIPFORMAT // Size=8
{
    long fContext; // Size=4 Offset=0
    union _userCLIPFORMAT::__MIDL_IWinTypes_0001 u; // Size=4 Offset=4
} userCLIPFORMAT, *PuserCLIPFORMAT;
typedef struct _WIN32_FIND_DATAW // Size=592
{
    unsigned long dwFileAttributes; // Size=4 Offset=0
    struct _FILETIME ftCreationTime; // Size=8 Offset=4
    struct _FILETIME ftLastAccessTime; // Size=8 Offset=12
    struct _FILETIME ftLastWriteTime; // Size=8 Offset=20
    unsigned long nFileSizeHigh; // Size=4 Offset=28
    unsigned long nFileSizeLow; // Size=4 Offset=32
    unsigned long dwReserved0; // Size=4 Offset=36
    unsigned long dwReserved1; // Size=4 Offset=40
    unsigned short cFileName[260]; // Size=520 Offset=44
    unsigned short cAlternateFileName[14]; // Size=28 Offset=564
} WIN32_FIND_DATAW, *PWIN32_FIND_DATAW;
typedef struct _devicemodeW // Size=220
{
    unsigned short dmDeviceName[32]; // Size=64 Offset=0
    unsigned short dmSpecVersion; // Size=2 Offset=64
    unsigned short dmDriverVersion; // Size=2 Offset=66
    unsigned short dmSize; // Size=2 Offset=68
    unsigned short dmDriverExtra; // Size=2 Offset=70
    unsigned long dmFields; // Size=4 Offset=72
    union
    {
        struct
        {
            short dmOrientation; // Size=2 Offset=76
            short dmPaperSize; // Size=2 Offset=78
            short dmPaperLength; // Size=2 Offset=80
            short dmPaperWidth; // Size=2 Offset=82
        };
        struct _POINTL dmPosition; // Size=8 Offset=76
    };
    union
    {
        struct
        {
            short dmScale; // Size=2 Offset=84
            short dmCopies; // Size=2 Offset=86
        };
        unsigned long dmDisplayOrientation; // Size=4 Offset=84
    };
    union
    {
        struct
        {
            short dmDefaultSource; // Size=2 Offset=88
            short dmPrintQuality; // Size=2 Offset=90
        };
        unsigned long dmDisplayFixedOutput; // Size=4 Offset=88
    };
    short dmColor; // Size=2 Offset=92
    short dmDuplex; // Size=2 Offset=94
    short dmYResolution; // Size=2 Offset=96
    short dmTTOption; // Size=2 Offset=98
    short dmCollate; // Size=2 Offset=100
    unsigned short dmFormName[32]; // Size=64 Offset=102
    unsigned short dmLogPixels; // Size=2 Offset=166
    unsigned long dmBitsPerPel; // Size=4 Offset=168
    unsigned long dmPelsWidth; // Size=4 Offset=172
    unsigned long dmPelsHeight; // Size=4 Offset=176
    union
    {
        unsigned long dmDisplayFlags; // Size=4 Offset=180
        unsigned long dmNup; // Size=4 Offset=180
    };
    unsigned long dmDisplayFrequency; // Size=4 Offset=184
    unsigned long dmICMMethod; // Size=4 Offset=188
    unsigned long dmICMIntent; // Size=4 Offset=192
    unsigned long dmMediaType; // Size=4 Offset=196
    unsigned long dmDitherType; // Size=4 Offset=200
    unsigned long dmReserved1; // Size=4 Offset=204
    unsigned long dmReserved2; // Size=4 Offset=208
    unsigned long dmPanningWidth; // Size=4 Offset=212
    unsigned long dmPanningHeight; // Size=4 Offset=216
} devicemodeW, *PdevicemodeW;
typedef struct _PRINTER_INFO_8W // Size=4
{
    struct _devicemodeW * pDevMode; // Size=4 Offset=0
} PRINTER_INFO_8W, *PPRINTER_INFO_8W;
typedef struct pcmwaveformat_tag // Size=16
{
    struct waveformat_tag wf; // Size=14 Offset=0
    unsigned short wBitsPerSample; // Size=2 Offset=14
} *Ppcmwaveformat_tag;
typedef struct tagMCI_OVLY_OPEN_PARMSW // Size=28
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned int wDeviceID; // Size=4 Offset=4
    unsigned short * lpstrDeviceType; // Size=4 Offset=8
    unsigned short * lpstrElementName; // Size=4 Offset=12
    unsigned short * lpstrAlias; // Size=4 Offset=16
    unsigned long dwStyle; // Size=4 Offset=20
    struct HWND__ * hWndParent; // Size=4 Offset=24
} *PtagMCI_OVLY_OPEN_PARMSW;
typedef struct _PRINTER_DEFAULTSW // Size=12
{
    unsigned short * pDatatype; // Size=4 Offset=0
    struct _devicemodeW * pDevMode; // Size=4 Offset=4
    unsigned long DesiredAccess; // Size=4 Offset=8
} PRINTER_DEFAULTSW, *PPRINTER_DEFAULTSW;
typedef struct _WIN32_FIND_DATAA // Size=320
{
    unsigned long dwFileAttributes; // Size=4 Offset=0
    struct _FILETIME ftCreationTime; // Size=8 Offset=4
    struct _FILETIME ftLastAccessTime; // Size=8 Offset=12
    struct _FILETIME ftLastWriteTime; // Size=8 Offset=20
    unsigned long nFileSizeHigh; // Size=4 Offset=28
    unsigned long nFileSizeLow; // Size=4 Offset=32
    unsigned long dwReserved0; // Size=4 Offset=36
    unsigned long dwReserved1; // Size=4 Offset=40
    char cFileName[260]; // Size=260 Offset=44
    char cAlternateFileName[14]; // Size=14 Offset=304
} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA;
typedef struct _ACCESS_DENIED_ACE // Size=12
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long SidStart; // Size=4 Offset=8
} ACCESS_DENIED_ACE, *PACCESS_DENIED_ACE;
typedef struct _DRIVER_INFO_6W // Size=80
{
    unsigned long cVersion; // Size=4 Offset=0
    unsigned short * pName; // Size=4 Offset=4
    unsigned short * pEnvironment; // Size=4 Offset=8
    unsigned short * pDriverPath; // Size=4 Offset=12
    unsigned short * pDataFile; // Size=4 Offset=16
    unsigned short * pConfigFile; // Size=4 Offset=20
    unsigned short * pHelpFile; // Size=4 Offset=24
    unsigned short * pDependentFiles; // Size=4 Offset=28
    unsigned short * pMonitorName; // Size=4 Offset=32
    unsigned short * pDefaultDataType; // Size=4 Offset=36
    unsigned short * pszzPreviousNames; // Size=4 Offset=40
    struct _FILETIME ftDriverDate; // Size=8 Offset=44
    unsigned __int64 dwlDriverVersion; // Size=8 Offset=56
    unsigned short * pszMfgName; // Size=4 Offset=64
    unsigned short * pszOEMUrl; // Size=4 Offset=68
    unsigned short * pszHardwareID; // Size=4 Offset=72
    unsigned short * pszProvider; // Size=4 Offset=76
} DRIVER_INFO_6W, *PDRIVER_INFO_6W;
typedef struct _SYSTEM_AUDIT_CALLBACK_ACE // Size=12
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long SidStart; // Size=4 Offset=8
} SYSTEM_AUDIT_CALLBACK_ACE, *PSYSTEM_AUDIT_CALLBACK_ACE;
typedef struct tagICEXYZTRIPLE // Size=36
{
    struct tagCIEXYZ ciexyzRed; // Size=12 Offset=0
    struct tagCIEXYZ ciexyzGreen; // Size=12 Offset=12
    struct tagCIEXYZ ciexyzBlue; // Size=12 Offset=24
} *PtagICEXYZTRIPLE;
typedef struct _CMC_TAGGED_CONTENT_INFO // Size=12
{
    unsigned long dwBodyPartID; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB EncodedContentInfo; // Size=8 Offset=4
} CMC_TAGGED_CONTENT_INFO, *PCMC_TAGGED_CONTENT_INFO;
typedef struct _SHFILEOPSTRUCTW // Size=30
{
    struct HWND__ * hwnd; // Size=4 Offset=0
    unsigned int wFunc; // Size=4 Offset=4
    unsigned short * pFrom; // Size=4 Offset=8
    unsigned short * pTo; // Size=4 Offset=12
    unsigned short fFlags; // Size=2 Offset=16
    int fAnyOperationsAborted; // Size=4 Offset=18
    void * hNameMappings; // Size=4 Offset=22
    unsigned short * lpszProgressTitle; // Size=4 Offset=26
} SHFILEOPSTRUCTW, *PSHFILEOPSTRUCTW;
typedef struct _CERT_PRIVATE_KEY_VALIDITY // Size=16
{
    struct _FILETIME NotBefore; // Size=8 Offset=0
    struct _FILETIME NotAfter; // Size=8 Offset=8
} CERT_PRIVATE_KEY_VALIDITY, *PCERT_PRIVATE_KEY_VALIDITY;
typedef struct _RTL_CRITICAL_SECTION // Size=24
{
    struct _RTL_CRITICAL_SECTION_DEBUG * DebugInfo; // Size=4 Offset=0
    long LockCount; // Size=4 Offset=4
    long RecursionCount; // Size=4 Offset=8
    void * OwningThread; // Size=4 Offset=12
    void * LockSemaphore; // Size=4 Offset=16
    unsigned long SpinCount; // Size=4 Offset=20
} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION;
typedef struct _KEY_TYPE_SUBTYPE // Size=36
{
    unsigned long dwKeySpec; // Size=4 Offset=0
    struct _GUID Type; // Size=16 Offset=4
    struct _GUID Subtype; // Size=16 Offset=20
} KEY_TYPE_SUBTYPE, *PKEY_TYPE_SUBTYPE;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT // Size=32
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihBrush; // Size=4 Offset=8
    unsigned long iUsage; // Size=4 Offset=12
    unsigned long offBmi; // Size=4 Offset=16
    unsigned long cbBmi; // Size=4 Offset=20
    unsigned long offBits; // Size=4 Offset=24
    unsigned long cbBits; // Size=4 Offset=28
} *PtagEMRCREATEDIBPATTERNBRUSHPT;
typedef struct tagAUXCAPS2A // Size=96
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned short wTechnology; // Size=2 Offset=40
    unsigned short wReserved1; // Size=2 Offset=42
    unsigned long dwSupport; // Size=4 Offset=44
    struct _GUID ManufacturerGuid; // Size=16 Offset=48
    struct _GUID ProductGuid; // Size=16 Offset=64
    struct _GUID NameGuid; // Size=16 Offset=80
} *PtagAUXCAPS2A;
typedef struct tagPOINTFX // Size=8
{
    struct _FIXED x; // Size=4 Offset=0
    struct _FIXED y; // Size=4 Offset=4
} *PtagPOINTFX;
typedef struct _CERT_X942_DH_VALIDATION_PARAMS // Size=16
{
    struct _CRYPT_BIT_BLOB seed; // Size=12 Offset=0
    unsigned long pgenCounter; // Size=4 Offset=12
} CERT_X942_DH_VALIDATION_PARAMS, *PCERT_X942_DH_VALIDATION_PARAMS;
typedef struct _DISCDLGSTRUCTA // Size=20
{
    unsigned long cbStructure; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    char * lpLocalName; // Size=4 Offset=8
    char * lpRemoteName; // Size=4 Offset=12
    unsigned long dwFlags; // Size=4 Offset=16
} DISCDLGSTRUCTA, *PDISCDLGSTRUCTA;
typedef struct _SINGLE_LIST_ENTRY // Size=4
{
    struct _SINGLE_LIST_ENTRY * Next; // Size=4 Offset=0
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY;
typedef union _RPC_SECURITY_QOS_V3_W::__unnamed // Size=4
{
    struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W * HttpCredentials; // Size=4 Offset=0
} RPC_SECURITY_QOS_V3_W::__unnamed, *PRPC_SECURITY_QOS_V3_W::__unnamed;
typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR // Size=16
{
    unsigned short * DllName; // Size=4 Offset=0
    unsigned long DllFlags; // Size=4 Offset=4
    void * DllAddress; // Size=4 Offset=8
    struct _RTL_VERIFIER_THUNK_DESCRIPTOR * DllThunks; // Size=4 Offset=12
} RTL_VERIFIER_DLL_DESCRIPTOR, *PRTL_VERIFIER_DLL_DESCRIPTOR;
typedef struct _BIDI_DATA // Size=12
{
    unsigned long dwBidiType; // Size=4 Offset=0
    union _BIDI_DATA::___unnamed1099 u; // Size=8 Offset=4
} BIDI_DATA, *PBIDI_DATA;
typedef struct tagMIDIOUTCAPS2A // Size=100
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned short wTechnology; // Size=2 Offset=40
    unsigned short wVoices; // Size=2 Offset=42
    unsigned short wNotes; // Size=2 Offset=44
    unsigned short wChannelMask; // Size=2 Offset=46
    unsigned long dwSupport; // Size=4 Offset=48
    struct _GUID ManufacturerGuid; // Size=16 Offset=52
    struct _GUID ProductGuid; // Size=16 Offset=68
    struct _GUID NameGuid; // Size=16 Offset=84
} *PtagMIDIOUTCAPS2A;
typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES // Size=16
{
    void ( * pfnNetSize)(void *,unsigned long,unsigned long,enum _IDL_CS_CONVERT *,unsigned long *,unsigned long *); // Size=4 Offset=0
    void ( * pfnToNetCs)(void *,unsigned long,void *,unsigned long,unsigned char *,unsigned long *,unsigned long *); // Size=4 Offset=4
    void ( * pfnLocalSize)(void *,unsigned long,unsigned long,enum _IDL_CS_CONVERT *,unsigned long *,unsigned long *); // Size=4 Offset=8
    void ( * pfnFromNetCs)(void *,unsigned long,unsigned char *,unsigned long,unsigned long,void *,unsigned long *,unsigned long *); // Size=4 Offset=12
} NDR_CS_SIZE_CONVERT_ROUTINES, *PNDR_CS_SIZE_CONVERT_ROUTINES;
typedef struct _CERT_RDN_ATTR // Size=16
{
    char * pszObjId; // Size=4 Offset=0
    unsigned long dwValueType; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB Value; // Size=8 Offset=8
} CERT_RDN_ATTR, *PCERT_RDN_ATTR;
typedef struct tagSCROLLBARINFO // Size=60
{
    unsigned long cbSize; // Size=4 Offset=0
    struct tagRECT rcScrollBar; // Size=16 Offset=4
    int dxyLineButton; // Size=4 Offset=20
    int xyThumbTop; // Size=4 Offset=24
    int xyThumbBottom; // Size=4 Offset=28
    int reserved; // Size=4 Offset=32
    unsigned long rgstate[6]; // Size=24 Offset=36
} *PtagSCROLLBARINFO;
typedef struct _TOKEN_USER // Size=8
{
    struct _SID_AND_ATTRIBUTES User; // Size=8 Offset=0
} TOKEN_USER, *PTOKEN_USER;
typedef struct tagEMRSETARCDIRECTION // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long iArcDirection; // Size=4 Offset=8
} *PtagEMRSETARCDIRECTION;
typedef struct midihdr_tag // Size=64
{
    char * lpData; // Size=4 Offset=0
    unsigned long dwBufferLength; // Size=4 Offset=4
    unsigned long dwBytesRecorded; // Size=4 Offset=8
    unsigned long dwUser; // Size=4 Offset=12
    unsigned long dwFlags; // Size=4 Offset=16
    struct midihdr_tag * lpNext; // Size=4 Offset=20
    unsigned long reserved; // Size=4 Offset=24
    unsigned long dwOffset; // Size=4 Offset=28
    unsigned long dwReserved[8]; // Size=32 Offset=32
} *Pmidihdr_tag;
typedef struct _IMAGE_LINENUMBER // Size=6
{
    union _IMAGE_LINENUMBER::___unnamed1170 Type; // Size=4 Offset=0
    unsigned short Linenumber; // Size=2 Offset=4
} IMAGE_LINENUMBER, *PIMAGE_LINENUMBER;
typedef struct tagMIXERLINEA // Size=168
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwDestination; // Size=4 Offset=4
    unsigned long dwSource; // Size=4 Offset=8
    unsigned long dwLineID; // Size=4 Offset=12
    unsigned long fdwLine; // Size=4 Offset=16
    unsigned long dwUser; // Size=4 Offset=20
    unsigned long dwComponentType; // Size=4 Offset=24
    unsigned long cChannels; // Size=4 Offset=28
    unsigned long cConnections; // Size=4 Offset=32
    unsigned long cControls; // Size=4 Offset=36
    char szShortName[16]; // Size=16 Offset=40
    char szName[64]; // Size=64 Offset=56
    struct tagMIXERLINEA::___unnamed1172 Target; // Size=48 Offset=120
} *PtagMIXERLINEA;
typedef struct _CERT_POLICY_INFO // Size=12
{
    char * pszPolicyIdentifier; // Size=4 Offset=0
    unsigned long cPolicyQualifier; // Size=4 Offset=4
    struct _CERT_POLICY_QUALIFIER_INFO * rgPolicyQualifier; // Size=4 Offset=8
} CERT_POLICY_INFO, *PCERT_POLICY_INFO;
typedef struct _CERT_POLICIES_INFO // Size=8
{
    unsigned long cPolicyInfo; // Size=4 Offset=0
    struct _CERT_POLICY_INFO * rgPolicyInfo; // Size=4 Offset=4
} CERT_POLICIES_INFO, *PCERT_POLICIES_INFO;
typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    unsigned long dwKeySpec; // Size=4 Offset=8
    struct _CMSG_KEY_TRANS_RECIPIENT_INFO * pKeyTrans; // Size=4 Offset=12
    unsigned long dwRecipientIndex; // Size=4 Offset=16
} CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
typedef struct tagMCI_BREAK_PARMS // Size=12
{
    unsigned long dwCallback; // Size=4 Offset=0
    int nVirtKey; // Size=4 Offset=4
    struct HWND__ * hwndBreak; // Size=4 Offset=8
} *PtagMCI_BREAK_PARMS;
typedef struct _CERT_PHYSICAL_STORE_INFO // Size=32
{
    unsigned long cbSize; // Size=4 Offset=0
    char * pszOpenStoreProvider; // Size=4 Offset=4
    unsigned long dwOpenEncodingType; // Size=4 Offset=8
    unsigned long dwOpenFlags; // Size=4 Offset=12
    struct _CRYPTOAPI_BLOB OpenParameters; // Size=8 Offset=16
    unsigned long dwFlags; // Size=4 Offset=24
    unsigned long dwPriority; // Size=4 Offset=28
} CERT_PHYSICAL_STORE_INFO, *PCERT_PHYSICAL_STORE_INFO;
typedef struct tagMCI_ANIM_WINDOW_PARMSW // Size=16
{
    unsigned long dwCallback; // Size=4 Offset=0
    struct HWND__ * hWnd; // Size=4 Offset=4
    unsigned int nCmdShow; // Size=4 Offset=8
    unsigned short * lpstrText; // Size=4 Offset=12
} *PtagMCI_ANIM_WINDOW_PARMSW;
typedef struct __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed // Size=20
{
    unsigned short * pPackageName; // Size=4 Offset=0
    struct _GUID PolicyId; // Size=16 Offset=4
} _MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed, *P_MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::__unnamed;
typedef struct _SHFILEINFOW // Size=692
{
    struct HICON__ * hIcon; // Size=4 Offset=0
    int iIcon; // Size=4 Offset=4
    unsigned long dwAttributes; // Size=4 Offset=8
    unsigned short szDisplayName[260]; // Size=520 Offset=12
    unsigned short szTypeName[80]; // Size=160 Offset=532
} SHFILEINFOW, *PSHFILEINFOW;
typedef struct tagEMREXTSELECTCLIPRGN // Size=20
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long cbRgnData; // Size=4 Offset=8
    unsigned long iMode; // Size=4 Offset=12
    unsigned char RgnData[1]; // Size=1 Offset=16
} *PtagEMREXTSELECTCLIPRGN;
typedef struct tagTITLEBARINFO // Size=44
{
    unsigned long cbSize; // Size=4 Offset=0
    struct tagRECT rcTitleBar; // Size=16 Offset=4
    unsigned long rgstate[6]; // Size=24 Offset=20
} *PtagTITLEBARINFO;
typedef struct _RPC_IF_ID // Size=20
{
    struct _GUID Uuid; // Size=16 Offset=0
    unsigned short VersMajor; // Size=2 Offset=16
    unsigned short VersMinor; // Size=2 Offset=18
} RPC_IF_ID, *PRPC_IF_ID;
typedef struct _COSERVERINFO // Size=16
{
    unsigned long dwReserved1; // Size=4 Offset=0
    unsigned short * pwszName; // Size=4 Offset=4
    struct _COAUTHINFO * pAuthInfo; // Size=4 Offset=8
    unsigned long dwReserved2; // Size=4 Offset=12
} COSERVERINFO, *PCOSERVERINFO;
typedef struct tagBIND_OPTS2 // Size=32
{
    unsigned long dwTrackFlags; // Size=4 Offset=16
    unsigned long dwClassContext; // Size=4 Offset=20
    unsigned long locale; // Size=4 Offset=24
    struct _COSERVERINFO * pServerInfo; // Size=4 Offset=28
} *PtagBIND_OPTS2;
typedef union _userHMETAFILE::__MIDL_IWinTypes_0004 // Size=8
{
    long hInproc; // Size=4 Offset=0
    struct _BYTE_BLOB * hRemote; // Size=4 Offset=0
    __int64 hInproc64; // Size=8 Offset=0
} userHMETAFILE::__MIDL_IWinTypes_0004, *PuserHMETAFILE::__MIDL_IWinTypes_0004;
typedef struct tagENUMLOGFONTA // Size=156
{
    struct tagLOGFONTA elfLogFont; // Size=60 Offset=0
    unsigned char elfFullName[64]; // Size=64 Offset=60
    unsigned char elfStyle[32]; // Size=32 Offset=124
} *PtagENUMLOGFONTA;
typedef struct _CRYPT_CONTENT_INFO // Size=12
{
    char * pszObjId; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Content; // Size=8 Offset=4
} CRYPT_CONTENT_INFO, *PCRYPT_CONTENT_INFO;
typedef struct _CERT_POLICY_QUALIFIER_INFO // Size=12
{
    char * pszPolicyQualifierId; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Qualifier; // Size=8 Offset=4
} CERT_POLICY_QUALIFIER_INFO, *PCERT_POLICY_QUALIFIER_INFO;
typedef struct tagEMRGLSRECORD // Size=16
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long cbData; // Size=4 Offset=8
    unsigned char Data[1]; // Size=1 Offset=12
} *PtagEMRGLSRECORD;
typedef struct _ACCESS_DENIED_CALLBACK_ACE // Size=12
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long SidStart; // Size=4 Offset=8
} ACCESS_DENIED_CALLBACK_ACE, *PACCESS_DENIED_CALLBACK_ACE;
typedef struct _TOKEN_GROUPS // Size=12
{
    unsigned long GroupCount; // Size=4 Offset=0
    struct _SID_AND_ATTRIBUTES Groups[1]; // Size=8 Offset=4
} TOKEN_GROUPS, *PTOKEN_GROUPS;
typedef struct _IMAGE_THUNK_DATA32 // Size=4
{
    union _IMAGE_THUNK_DATA32::___unnamed1281 u1; // Size=4 Offset=0
} IMAGE_THUNK_DATA32, *PIMAGE_THUNK_DATA32;
typedef struct _userSTGMEDIUM // Size=4
{
    struct IUnknown * pUnkForRelease; // Size=4 Offset=0
} userSTGMEDIUM, *PuserSTGMEDIUM;
typedef struct ANON_OBJECT_HEADER // Size=32
{
    unsigned short Sig1; // Size=2 Offset=0
    unsigned short Sig2; // Size=2 Offset=2
    unsigned short Version; // Size=2 Offset=4
    unsigned short Machine; // Size=2 Offset=6
    unsigned long TimeDateStamp; // Size=4 Offset=8
    struct _GUID ClassID; // Size=16 Offset=12
    unsigned long SizeOfData; // Size=4 Offset=28
} *PANON_OBJECT_HEADER;
typedef struct _LIST_ENTRY // Size=8
{
    struct _LIST_ENTRY * Flink; // Size=4 Offset=0
    struct _LIST_ENTRY * Blink; // Size=4 Offset=4
} LIST_ENTRY, *PLIST_ENTRY;
typedef struct tagEMREXTESCAPE // Size=20
{
    struct tagEMR emr; // Size=8 Offset=0
    int iEscape; // Size=4 Offset=8
    int cbEscData; // Size=4 Offset=12
    unsigned char EscData[1]; // Size=1 Offset=16
} *PtagEMREXTESCAPE;
typedef struct tagMCI_ANIM_RECT_PARMS // Size=20
{
    unsigned long dwCallback; // Size=4 Offset=0
    struct tagRECT rc; // Size=16 Offset=4
} *PtagMCI_ANIM_RECT_PARMS;
typedef struct tagMIDIINCAPS2A // Size=92
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    char szPname[32]; // Size=32 Offset=8
    unsigned long dwSupport; // Size=4 Offset=40
    struct _GUID ManufacturerGuid; // Size=16 Offset=44
    struct _GUID ProductGuid; // Size=16 Offset=60
    struct _GUID NameGuid; // Size=16 Offset=76
} *PtagMIDIINCAPS2A;
typedef struct tagCUSTDATA // Size=8
{
    unsigned long cCustData; // Size=4 Offset=0
    struct tagCUSTDATAITEM * prgCustData; // Size=4 Offset=4
} *PtagCUSTDATA;
typedef struct _RemotableHandle // Size=8
{
    long fContext; // Size=4 Offset=0
    union _RemotableHandle::__MIDL_IWinTypes_0009 u; // Size=4 Offset=4
} RemotableHandle, *PRemotableHandle;
typedef struct _CERT_POLICY_MAPPINGS_INFO // Size=8
{
    unsigned long cPolicyMapping; // Size=4 Offset=0
    struct _CERT_POLICY_MAPPING * rgPolicyMapping; // Size=4 Offset=4
} CERT_POLICY_MAPPINGS_INFO, *PCERT_POLICY_MAPPINGS_INFO;
typedef struct _WIN32_FILE_ATTRIBUTE_DATA // Size=36
{
    unsigned long dwFileAttributes; // Size=4 Offset=0
    struct _FILETIME ftCreationTime; // Size=8 Offset=4
    struct _FILETIME ftLastAccessTime; // Size=8 Offset=12
    struct _FILETIME ftLastWriteTime; // Size=8 Offset=20
    unsigned long nFileSizeHigh; // Size=4 Offset=28
    unsigned long nFileSizeLow; // Size=4 Offset=32
} WIN32_FILE_ATTRIBUTE_DATA, *PWIN32_FILE_ATTRIBUTE_DATA;
typedef struct _PRINTER_INFO_9A // Size=4
{
    struct _devicemodeA * pDevMode; // Size=4 Offset=0
} PRINTER_INFO_9A, *PPRINTER_INFO_9A;
typedef struct _JOB_INFO_1W // Size=64
{
    unsigned long JobId; // Size=4 Offset=0
    unsigned short * pPrinterName; // Size=4 Offset=4
    unsigned short * pMachineName; // Size=4 Offset=8
    unsigned short * pUserName; // Size=4 Offset=12
    unsigned short * pDocument; // Size=4 Offset=16
    unsigned short * pDatatype; // Size=4 Offset=20
    unsigned short * pStatus; // Size=4 Offset=24
    unsigned long Status; // Size=4 Offset=28
    unsigned long Priority; // Size=4 Offset=32
    unsigned long Position; // Size=4 Offset=36
    unsigned long TotalPages; // Size=4 Offset=40
    unsigned long PagesPrinted; // Size=4 Offset=44
    struct _SYSTEMTIME Submitted; // Size=16 Offset=48
} JOB_INFO_1W, *PJOB_INFO_1W;
typedef union _IMAGE_SYMBOL::__unnamed // Size=8
{
    unsigned char ShortName[8]; // Size=8 Offset=0
    struct _IMAGE_SYMBOL::___unnamed1349::___unnamed1349 Name; // Size=8 Offset=0
    unsigned long LongName[2]; // Size=8 Offset=0
} IMAGE_SYMBOL::__unnamed, *PIMAGE_SYMBOL::__unnamed;
typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB EncryptedKey; // Size=8 Offset=4
} CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
typedef struct _DRAGINFOA // Size=24
{
    unsigned int uSize; // Size=4 Offset=0
    struct tagPOINT pt; // Size=8 Offset=4
    int fNC; // Size=4 Offset=12
    char * lpFileList; // Size=4 Offset=16
    unsigned long grfKeyState; // Size=4 Offset=20
} DRAGINFOA, *PDRAGINFOA;
typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY // Size=12
{
    char * pszObjId; // Size=4 Offset=0
    unsigned long cValue; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB * rgValue; // Size=4 Offset=8
} CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
typedef struct _remoteMETAFILEPICT // Size=16
{
    long mm; // Size=4 Offset=0
    long xExt; // Size=4 Offset=4
    long yExt; // Size=4 Offset=8
    struct _userHMETAFILE * hMF; // Size=4 Offset=12
} remoteMETAFILEPICT, *PremoteMETAFILEPICT;
typedef struct tagEMRSCALEVIEWPORTEXTEX // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    long xNum; // Size=4 Offset=8
    long xDenom; // Size=4 Offset=12
    long yNum; // Size=4 Offset=16
    long yDenom; // Size=4 Offset=20
} *PtagEMRSCALEVIEWPORTEXTEX;
typedef struct tagJOYCAPS2W // Size=776
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned short szPname[32]; // Size=64 Offset=4
    unsigned int wXmin; // Size=4 Offset=68
    unsigned int wXmax; // Size=4 Offset=72
    unsigned int wYmin; // Size=4 Offset=76
    unsigned int wYmax; // Size=4 Offset=80
    unsigned int wZmin; // Size=4 Offset=84
    unsigned int wZmax; // Size=4 Offset=88
    unsigned int wNumButtons; // Size=4 Offset=92
    unsigned int wPeriodMin; // Size=4 Offset=96
    unsigned int wPeriodMax; // Size=4 Offset=100
    unsigned int wRmin; // Size=4 Offset=104
    unsigned int wRmax; // Size=4 Offset=108
    unsigned int wUmin; // Size=4 Offset=112
    unsigned int wUmax; // Size=4 Offset=116
    unsigned int wVmin; // Size=4 Offset=120
    unsigned int wVmax; // Size=4 Offset=124
    unsigned int wCaps; // Size=4 Offset=128
    unsigned int wMaxAxes; // Size=4 Offset=132
    unsigned int wNumAxes; // Size=4 Offset=136
    unsigned int wMaxButtons; // Size=4 Offset=140
    unsigned short szRegKey[32]; // Size=64 Offset=144
    unsigned short szOEMVxD[260]; // Size=520 Offset=208
    struct _GUID ManufacturerGuid; // Size=16 Offset=728
    struct _GUID ProductGuid; // Size=16 Offset=744
    struct _GUID NameGuid; // Size=16 Offset=760
} *PtagJOYCAPS2W;
typedef struct _ACCESS_ALLOWED_ACE // Size=12
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long SidStart; // Size=4 Offset=8
} ACCESS_ALLOWED_ACE, *PACCESS_ALLOWED_ACE;
typedef struct OPENCARD_SEARCH_CRITERIAW // Size=52
{
    unsigned long dwStructSize; // Size=4 Offset=0
    unsigned short * lpstrGroupNames; // Size=4 Offset=4
    unsigned long nMaxGroupNames; // Size=4 Offset=8
    struct _GUID * rgguidInterfaces; // Size=4 Offset=12
    unsigned long cguidInterfaces; // Size=4 Offset=16
    unsigned short * lpstrCardNames; // Size=4 Offset=20
    unsigned long nMaxCardNames; // Size=4 Offset=24
    int ( * lpfnCheck)(unsigned long,unsigned long,void *); // Size=4 Offset=28
    unsigned long ( * lpfnConnect)(unsigned long,unsigned short *,unsigned short *,void *); // Size=4 Offset=32
    void ( * lpfnDisconnect)(unsigned long,unsigned long,void *); // Size=4 Offset=36
    void * pvUserData; // Size=4 Offset=40
    unsigned long dwShareMode; // Size=4 Offset=44
    unsigned long dwPreferredProtocols; // Size=4 Offset=48
} *POPENCARD_SEARCH_CRITERIAW;
typedef struct _RPC_MESSAGE // Size=44
{
    void * Handle; // Size=4 Offset=0
    unsigned long DataRepresentation; // Size=4 Offset=4
    void * Buffer; // Size=4 Offset=8
    unsigned int BufferLength; // Size=4 Offset=12
    unsigned int ProcNum; // Size=4 Offset=16
    struct _RPC_SYNTAX_IDENTIFIER * TransferSyntax; // Size=4 Offset=20
    void * RpcInterfaceInformation; // Size=4 Offset=24
    void * ReservedForRuntime; // Size=4 Offset=28
    void * ManagerEpv; // Size=4 Offset=32
    void * ImportContext; // Size=4 Offset=36
    unsigned long RpcFlags; // Size=4 Offset=40
} RPC_MESSAGE, *PRPC_MESSAGE;
typedef struct _WSANAMESPACE_INFOW // Size=32
{
    struct _GUID NSProviderId; // Size=16 Offset=0
    unsigned long dwNameSpace; // Size=4 Offset=16
    int fActive; // Size=4 Offset=20
    unsigned long dwVersion; // Size=4 Offset=24
    unsigned short * lpszIdentifier; // Size=4 Offset=28
} WSANAMESPACE_INFOW, *PWSANAMESPACE_INFOW;
typedef struct tagMCI_OVLY_WINDOW_PARMSA // Size=16
{
    unsigned long dwCallback; // Size=4 Offset=0
    struct HWND__ * hWnd; // Size=4 Offset=4
    unsigned int nCmdShow; // Size=4 Offset=8
    char * lpstrText; // Size=4 Offset=12
} *PtagMCI_OVLY_WINDOW_PARMSA;
typedef struct tagCAH // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    union _LARGE_INTEGER * pElems; // Size=4 Offset=4
} *PtagCAH;
typedef struct _CERT_AUTHORITY_INFO_ACCESS // Size=8
{
    unsigned long cAccDescr; // Size=4 Offset=0
    struct _CERT_ACCESS_DESCRIPTION * rgAccDescr; // Size=4 Offset=4
} CERT_AUTHORITY_INFO_ACCESS, *PCERT_AUTHORITY_INFO_ACCESS;
typedef struct tagEMRSETICMPROFILE // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long dwFlags; // Size=4 Offset=8
    unsigned long cbName; // Size=4 Offset=12
    unsigned long cbData; // Size=4 Offset=16
    unsigned char Data[1]; // Size=1 Offset=20
} *PtagEMRSETICMPROFILE;
typedef struct tagMCI_OVLY_LOAD_PARMSA // Size=24
{
    unsigned long dwCallback; // Size=4 Offset=0
    char * lpfilename; // Size=4 Offset=4
    struct tagRECT rc; // Size=16 Offset=8
} *PtagMCI_OVLY_LOAD_PARMSA;
typedef struct _wireSAFEARR_BSTR // Size=8
{
    unsigned long Size; // Size=4 Offset=0
    struct _FLAGGED_WORD_BLOB * * aBstr; // Size=4 Offset=4
} wireSAFEARR_BSTR, *PwireSAFEARR_BSTR;
typedef struct _wireSAFEARR_UNKNOWN // Size=8
{
    unsigned long Size; // Size=4 Offset=0
    struct IUnknown * * apUnknown; // Size=4 Offset=4
} wireSAFEARR_UNKNOWN, *PwireSAFEARR_UNKNOWN;
typedef struct _wireSAFEARR_DISPATCH // Size=8
{
    unsigned long Size; // Size=4 Offset=0
    struct IDispatch * * apDispatch; // Size=4 Offset=4
} wireSAFEARR_DISPATCH, *PwireSAFEARR_DISPATCH;
typedef struct _wireSAFEARR_VARIANT // Size=8
{
    unsigned long Size; // Size=4 Offset=0
    struct _wireVARIANT * * aVariant; // Size=4 Offset=4
} wireSAFEARR_VARIANT, *PwireSAFEARR_VARIANT;
typedef class MSG_CG2Z_LOTTO_BET_INFO // Size=113
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    bool m_bIsAbleToPurchase; // Size=1 Offset=4
    struct _LOTTO_LOG_DATA_ m_stNowLottoStatus; // Size=108 Offset=5
} *PMSG_CG2Z_LOTTO_BET_INFO;
typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA // Size=16
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwSignerIndex; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB blob; // Size=8 Offset=8
} CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
typedef struct tagMCI_OVLY_OPEN_PARMSA // Size=28
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned int wDeviceID; // Size=4 Offset=4
    char * lpstrDeviceType; // Size=4 Offset=8
    char * lpstrElementName; // Size=4 Offset=12
    char * lpstrAlias; // Size=4 Offset=16
    unsigned long dwStyle; // Size=4 Offset=20
    struct HWND__ * hWndParent; // Size=4 Offset=24
} *PtagMCI_OVLY_OPEN_PARMSA;
typedef struct _CMC_TAGGED_CERT_REQUEST // Size=12
{
    unsigned long dwBodyPartID; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB SignedCertRequest; // Size=8 Offset=4
} CMC_TAGGED_CERT_REQUEST, *PCMC_TAGGED_CERT_REQUEST;
typedef struct _CMC_TAGGED_REQUEST // Size=8
{
    unsigned long dwTaggedRequestChoice; // Size=4 Offset=0
    struct _CMC_TAGGED_CERT_REQUEST * pTaggedCertRequest; // Size=4 Offset=4
} CMC_TAGGED_REQUEST, *PCMC_TAGGED_REQUEST;
typedef struct tagMENUGETOBJECTINFO // Size=20
{
    unsigned long dwFlags; // Size=4 Offset=0
    unsigned int uPos; // Size=4 Offset=4
    struct HMENU__ * hmenu; // Size=4 Offset=8
    void * riid; // Size=4 Offset=12
    void * pvObj; // Size=4 Offset=16
} *PtagMENUGETOBJECTINFO;
typedef struct _CTL_VERIFY_USAGE_PARA // Size=28
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB ListIdentifier; // Size=8 Offset=4
    unsigned long cCtlStore; // Size=4 Offset=12
    void * * rghCtlStore; // Size=4 Offset=16
    unsigned long cSignerStore; // Size=4 Offset=20
    void * * rghSignerStore; // Size=4 Offset=24
} CTL_VERIFY_USAGE_PARA, *PCTL_VERIFY_USAGE_PARA;
typedef struct OPENCARD_SEARCH_CRITERIAA // Size=52
{
    unsigned long dwStructSize; // Size=4 Offset=0
    char * lpstrGroupNames; // Size=4 Offset=4
    unsigned long nMaxGroupNames; // Size=4 Offset=8
    struct _GUID * rgguidInterfaces; // Size=4 Offset=12
    unsigned long cguidInterfaces; // Size=4 Offset=16
    char * lpstrCardNames; // Size=4 Offset=20
    unsigned long nMaxCardNames; // Size=4 Offset=24
    int ( * lpfnCheck)(unsigned long,unsigned long,void *); // Size=4 Offset=28
    unsigned long ( * lpfnConnect)(unsigned long,char *,char *,void *); // Size=4 Offset=32
    void ( * lpfnDisconnect)(unsigned long,unsigned long,void *); // Size=4 Offset=36
    void * pvUserData; // Size=4 Offset=40
    unsigned long dwShareMode; // Size=4 Offset=44
    unsigned long dwPreferredProtocols; // Size=4 Offset=48
} *POPENCARD_SEARCH_CRITERIAA;
typedef struct _CRYPT_RETRIEVE_AUX_INFO // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _FILETIME * pLastSyncTime; // Size=4 Offset=4
    unsigned long dwMaxUrlRetrievalByteCount; // Size=4 Offset=8
} CRYPT_RETRIEVE_AUX_INFO, *PCRYPT_RETRIEVE_AUX_INFO;
typedef struct _IMAGE_SECTION_HEADER // Size=40
{
    unsigned char Name[8]; // Size=8 Offset=0
    union ___unnamed1486 Misc; // Size=4 Offset=8
    unsigned long VirtualAddress; // Size=4 Offset=12
    unsigned long SizeOfRawData; // Size=4 Offset=16
    unsigned long PointerToRawData; // Size=4 Offset=20
    unsigned long PointerToRelocations; // Size=4 Offset=24
    unsigned long PointerToLinenumbers; // Size=4 Offset=28
    unsigned short NumberOfRelocations; // Size=2 Offset=32
    unsigned short NumberOfLinenumbers; // Size=2 Offset=34
    unsigned long Characteristics; // Size=4 Offset=36
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;
typedef struct tagPOLYTEXTW // Size=40
{
    int x; // Size=4 Offset=0
    int y; // Size=4 Offset=4
    unsigned int n; // Size=4 Offset=8
    unsigned short * lpstr; // Size=4 Offset=12
    unsigned int uiFlags; // Size=4 Offset=16
    struct tagRECT rcl; // Size=16 Offset=20
    int * pdx; // Size=4 Offset=36
} *PtagPOLYTEXTW;
typedef struct tagICONMETRICSA // Size=76
{
    unsigned int cbSize; // Size=4 Offset=0
    int iHorzSpacing; // Size=4 Offset=4
    int iVertSpacing; // Size=4 Offset=8
    int iTitleWrap; // Size=4 Offset=12
    struct tagLOGFONTA lfFont; // Size=60 Offset=16
} *PtagICONMETRICSA;
typedef struct wavehdr_tag // Size=32
{
    char * lpData; // Size=4 Offset=0
    unsigned long dwBufferLength; // Size=4 Offset=4
    unsigned long dwBytesRecorded; // Size=4 Offset=8
    unsigned long dwUser; // Size=4 Offset=12
    unsigned long dwFlags; // Size=4 Offset=16
    unsigned long dwLoops; // Size=4 Offset=20
    struct wavehdr_tag * lpNext; // Size=4 Offset=24
    unsigned long reserved; // Size=4 Offset=28
} *Pwavehdr_tag;
typedef struct tagMETAFILEPICT // Size=16
{
    long mm; // Size=4 Offset=0
    long xExt; // Size=4 Offset=4
    long yExt; // Size=4 Offset=8
    struct HMETAFILE__ * hMF; // Size=4 Offset=12
} *PtagMETAFILEPICT;
typedef struct _CMC_ADD_ATTRIBUTES_INFO // Size=20
{
    unsigned long dwCmcDataReference; // Size=4 Offset=0
    unsigned long cCertReference; // Size=4 Offset=4
    unsigned long * rgdwCertReference; // Size=4 Offset=8
    unsigned long cAttribute; // Size=4 Offset=12
    struct _CRYPT_ATTRIBUTE * rgAttribute; // Size=4 Offset=16
} CMC_ADD_ATTRIBUTES_INFO, *PCMC_ADD_ATTRIBUTES_INFO;
typedef struct tagLOGPALETTE // Size=8
{
    unsigned short palVersion; // Size=2 Offset=0
    unsigned short palNumEntries; // Size=2 Offset=2
    struct tagPALETTEENTRY palPalEntry[1]; // Size=4 Offset=4
} *PtagLOGPALETTE;
typedef struct tagNONCLIENTMETRICSA // Size=340
{
    unsigned int cbSize; // Size=4 Offset=0
    int iBorderWidth; // Size=4 Offset=4
    int iScrollWidth; // Size=4 Offset=8
    int iScrollHeight; // Size=4 Offset=12
    int iCaptionWidth; // Size=4 Offset=16
    int iCaptionHeight; // Size=4 Offset=20
    struct tagLOGFONTA lfCaptionFont; // Size=60 Offset=24
    int iSmCaptionWidth; // Size=4 Offset=84
    int iSmCaptionHeight; // Size=4 Offset=88
    struct tagLOGFONTA lfSmCaptionFont; // Size=60 Offset=92
    int iMenuWidth; // Size=4 Offset=152
    int iMenuHeight; // Size=4 Offset=156
    struct tagLOGFONTA lfMenuFont; // Size=60 Offset=160
    struct tagLOGFONTA lfStatusFont; // Size=60 Offset=220
    struct tagLOGFONTA lfMessageFont; // Size=60 Offset=280
} *PtagNONCLIENTMETRICSA;
typedef struct FLASHWINFO // Size=20
{
    unsigned int cbSize; // Size=4 Offset=0
    struct HWND__ * hwnd; // Size=4 Offset=4
    unsigned long dwFlags; // Size=4 Offset=8
    unsigned int uCount; // Size=4 Offset=12
    unsigned long dwTimeout; // Size=4 Offset=16
} *PFLASHWINFO;
typedef struct _CERT_AUTHORITY_KEY_ID_INFO // Size=24
{
    struct _CRYPTOAPI_BLOB KeyId; // Size=8 Offset=0
    struct _CRYPTOAPI_BLOB CertIssuer; // Size=8 Offset=8
    struct _CRYPTOAPI_BLOB CertSerialNumber; // Size=8 Offset=16
} CERT_AUTHORITY_KEY_ID_INFO, *PCERT_AUTHORITY_KEY_ID_INFO;
typedef struct _CERT_PAIR // Size=16
{
    struct _CRYPTOAPI_BLOB Forward; // Size=8 Offset=0
    struct _CRYPTOAPI_BLOB Reverse; // Size=8 Offset=8
} CERT_PAIR, *PCERT_PAIR;
typedef struct tagPARAMDESC // Size=8
{
    struct tagPARAMDESCEX * pparamdescex; // Size=4 Offset=0
    unsigned short wParamFlags; // Size=2 Offset=4
} *PtagPARAMDESC;
typedef struct _ENUM_SERVICE_STATUSW // Size=36
{
    unsigned short * lpServiceName; // Size=4 Offset=0
    unsigned short * lpDisplayName; // Size=4 Offset=4
    struct _SERVICE_STATUS ServiceStatus; // Size=28 Offset=8
} ENUM_SERVICE_STATUSW, *PENUM_SERVICE_STATUSW;
typedef struct tagCAFILETIME // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    struct _FILETIME * pElems; // Size=4 Offset=4
} *PtagCAFILETIME;
typedef struct _CROSS_CERT_DIST_POINTS_INFO // Size=12
{
    unsigned long dwSyncDeltaTime; // Size=4 Offset=0
    unsigned long cDistPoint; // Size=4 Offset=4
    struct _CERT_ALT_NAME_INFO * rgDistPoint; // Size=4 Offset=8
} CROSS_CERT_DIST_POINTS_INFO, *PCROSS_CERT_DIST_POINTS_INFO;
typedef struct _ENCRYPTION_CERTIFICATE_LIST // Size=8
{
    unsigned long nUsers; // Size=4 Offset=0
    struct _ENCRYPTION_CERTIFICATE * * pUsers; // Size=4 Offset=4
} ENCRYPTION_CERTIFICATE_LIST, *PENCRYPTION_CERTIFICATE_LIST;
typedef struct _s__RTTIBaseClassArray // Size=1
{
    //struct _s__RTTIBaseClassDescriptor * arrayOfBaseClassDescriptors[0]; // Size=0 Offset=0
} s__RTTIBaseClassArray, *Ps__RTTIBaseClassArray;
typedef struct _CRL_DIST_POINTS_INFO // Size=8
{
    unsigned long cDistPoint; // Size=4 Offset=0
    struct _CRL_DIST_POINT * rgDistPoint; // Size=4 Offset=4
} CRL_DIST_POINTS_INFO, *PCRL_DIST_POINTS_INFO;
typedef struct _UUID_VECTOR // Size=8
{
    unsigned long Count; // Size=4 Offset=0
    struct _GUID * Uuid[1]; // Size=4 Offset=4
} UUID_VECTOR, *PUUID_VECTOR;
typedef struct tagDISPPARAMS // Size=16
{
    struct tagVARIANT * rgvarg; // Size=4 Offset=0
    long * rgdispidNamedArgs; // Size=4 Offset=4
    unsigned int cArgs; // Size=4 Offset=8
    unsigned int cNamedArgs; // Size=4 Offset=12
} *PtagDISPPARAMS;
typedef struct tagMONHSZSTRUCTW // Size=24
{
    unsigned int cb; // Size=4 Offset=0
    int fsAction; // Size=4 Offset=4
    unsigned long dwTime; // Size=4 Offset=8
    struct HSZ__ * hsz; // Size=4 Offset=12
    void * hTask; // Size=4 Offset=16
    unsigned short str[1]; // Size=2 Offset=20
} *PtagMONHSZSTRUCTW;
typedef struct _SCONTEXT_QUEUE // Size=8
{
    unsigned long NumberOfObjects; // Size=4 Offset=0
    struct ___unnamed736 * * ArrayOfObjects; // Size=4 Offset=4
} SCONTEXT_QUEUE, *PSCONTEXT_QUEUE;
typedef struct _RPC_TRANSFER_SYNTAX // Size=20
{
    struct _GUID Uuid; // Size=16 Offset=0
    unsigned short VersMajor; // Size=2 Offset=16
    unsigned short VersMinor; // Size=2 Offset=18
} RPC_TRANSFER_SYNTAX, *PRPC_TRANSFER_SYNTAX;
typedef struct _SERVICE_FAILURE_ACTIONSA // Size=20
{
    unsigned long dwResetPeriod; // Size=4 Offset=0
    char * lpRebootMsg; // Size=4 Offset=4
    char * lpCommand; // Size=4 Offset=8
    unsigned long cActions; // Size=4 Offset=12
    struct _SC_ACTION * lpsaActions; // Size=4 Offset=16
} SERVICE_FAILURE_ACTIONSA, *PSERVICE_FAILURE_ACTIONSA;
typedef struct tagSAFEARRAY // Size=24
{
    unsigned short cDims; // Size=2 Offset=0
    unsigned short fFeatures; // Size=2 Offset=2
    unsigned long cbElements; // Size=4 Offset=4
    unsigned long cLocks; // Size=4 Offset=8
    void * pvData; // Size=4 Offset=12
    struct tagSAFEARRAYBOUND rgsabound[1]; // Size=8 Offset=16
} *PtagSAFEARRAY;
typedef struct tagMCI_OVLY_SAVE_PARMSA // Size=24
{
    unsigned long dwCallback; // Size=4 Offset=0
    char * lpfilename; // Size=4 Offset=4
    struct tagRECT rc; // Size=16 Offset=8
} *PtagMCI_OVLY_SAVE_PARMSA;
typedef union _ULARGE_INTEGER // Size=8
{
    struct
    {
        unsigned long LowPart; // Size=4 Offset=0
        unsigned long HighPart; // Size=4 Offset=4
    };
    struct _ULARGE_INTEGER::___unnamed1672 u; // Size=8 Offset=0
    unsigned __int64 QuadPart; // Size=8 Offset=0
} ULARGE_INTEGER, *PULARGE_INTEGER;
typedef struct tagCAUH // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    union _ULARGE_INTEGER * pElems; // Size=4 Offset=4
} *PtagCAUH;
typedef struct tagCACLIPDATA // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    struct tagCLIPDATA * pElems; // Size=4 Offset=4
} *PtagCACLIPDATA;
typedef struct tagCABSTRBLOB // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    struct tagBSTRBLOB * pElems; // Size=4 Offset=4
} *PtagCABSTRBLOB;
typedef struct tagCAPROPVARIANT // Size=8
{
    unsigned long cElems; // Size=4 Offset=0
    struct tagPROPVARIANT * pElems; // Size=4 Offset=4
} *PtagCAPROPVARIANT;
typedef struct _MOUSE_EVENT_RECORD // Size=16
{
    struct _COORD dwMousePosition; // Size=4 Offset=0
    unsigned long dwButtonState; // Size=4 Offset=4
    unsigned long dwControlKeyState; // Size=4 Offset=8
    unsigned long dwEventFlags; // Size=4 Offset=12
} MOUSE_EVENT_RECORD, *PMOUSE_EVENT_RECORD;
typedef struct tagMCI_OVLY_LOAD_PARMSW // Size=24
{
    unsigned long dwCallback; // Size=4 Offset=0
    unsigned short * lpfilename; // Size=4 Offset=4
    struct tagRECT rc; // Size=16 Offset=8
} *PtagMCI_OVLY_LOAD_PARMSW;
typedef struct tagMONHSZSTRUCTA // Size=24
{
    unsigned int cb; // Size=4 Offset=0
    int fsAction; // Size=4 Offset=4
    unsigned long dwTime; // Size=4 Offset=8
    struct HSZ__ * hsz; // Size=4 Offset=12
    void * hTask; // Size=4 Offset=16
    char str[1]; // Size=1 Offset=20
} *PtagMONHSZSTRUCTA;
typedef struct tagCOMPAREITEMSTRUCT // Size=32
{
    unsigned int CtlType; // Size=4 Offset=0
    unsigned int CtlID; // Size=4 Offset=4
    struct HWND__ * hwndItem; // Size=4 Offset=8
    unsigned int itemID1; // Size=4 Offset=12
    unsigned long itemData1; // Size=4 Offset=16
    unsigned int itemID2; // Size=4 Offset=20
    unsigned long itemData2; // Size=4 Offset=24
    unsigned long dwLocaleId; // Size=4 Offset=28
} *PtagCOMPAREITEMSTRUCT;
typedef struct mmtime_tag // Size=12
{
    unsigned int wType; // Size=4 Offset=0
    union mmtime_tag::___unnamed1720 u; // Size=8 Offset=4
} *Pmmtime_tag;
typedef struct tagCHOOSECOLORW // Size=36
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HWND__ * hInstance; // Size=4 Offset=8
    unsigned long rgbResult; // Size=4 Offset=12
    unsigned long * lpCustColors; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    long lCustData; // Size=4 Offset=24
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=28
    unsigned short * lpTemplateName; // Size=4 Offset=32
} *PtagCHOOSECOLORW;
typedef struct tagMCI_OVLY_WINDOW_PARMSW // Size=16
{
    unsigned long dwCallback; // Size=4 Offset=0
    struct HWND__ * hWnd; // Size=4 Offset=4
    unsigned int nCmdShow; // Size=4 Offset=8
    unsigned short * lpstrText; // Size=4 Offset=12
} *PtagMCI_OVLY_WINDOW_PARMSW;
typedef struct _CERT_USAGE_MATCH // Size=12
{
    unsigned long dwType; // Size=4 Offset=0
    struct _CTL_USAGE Usage; // Size=8 Offset=4
} CERT_USAGE_MATCH, *PCERT_USAGE_MATCH;
typedef struct _ENUM_SERVICE_STATUSA // Size=36
{
    char * lpServiceName; // Size=4 Offset=0
    char * lpDisplayName; // Size=4 Offset=4
    struct _SERVICE_STATUS ServiceStatus; // Size=28 Offset=8
} ENUM_SERVICE_STATUSA, *PENUM_SERVICE_STATUSA;
typedef struct tagEMRRESTOREDC // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    long iRelative; // Size=4 Offset=8
} *PtagEMRRESTOREDC;
typedef struct _CERT_OTHER_NAME // Size=12
{
    char * pszObjId; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Value; // Size=8 Offset=4
} CERT_OTHER_NAME, *PCERT_OTHER_NAME;
typedef struct _MESSAGE_RESOURCE_DATA // Size=16
{
    unsigned long NumberOfBlocks; // Size=4 Offset=0
    struct _MESSAGE_RESOURCE_BLOCK Blocks[1]; // Size=12 Offset=4
} MESSAGE_RESOURCE_DATA, *PMESSAGE_RESOURCE_DATA;
typedef struct _SID // Size=12
{
    unsigned char Revision; // Size=1 Offset=0
    unsigned char SubAuthorityCount; // Size=1 Offset=1
    struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority; // Size=6 Offset=2
    unsigned long SubAuthority[1]; // Size=4 Offset=8
} SID, *PSID;
typedef struct _DRIVER_INFO_6A // Size=80
{
    unsigned long cVersion; // Size=4 Offset=0
    char * pName; // Size=4 Offset=4
    char * pEnvironment; // Size=4 Offset=8
    char * pDriverPath; // Size=4 Offset=12
    char * pDataFile; // Size=4 Offset=16
    char * pConfigFile; // Size=4 Offset=20
    char * pHelpFile; // Size=4 Offset=24
    char * pDependentFiles; // Size=4 Offset=28
    char * pMonitorName; // Size=4 Offset=32
    char * pDefaultDataType; // Size=4 Offset=36
    char * pszzPreviousNames; // Size=4 Offset=40
    struct _FILETIME ftDriverDate; // Size=8 Offset=44
    unsigned __int64 dwlDriverVersion; // Size=8 Offset=56
    char * pszMfgName; // Size=4 Offset=64
    char * pszOEMUrl; // Size=4 Offset=68
    char * pszHardwareID; // Size=4 Offset=72
    char * pszProvider; // Size=4 Offset=76
} DRIVER_INFO_6A, *PDRIVER_INFO_6A;
typedef struct _WGLSWAP // Size=8
{
    struct HDC__ * hdc; // Size=4 Offset=0
    unsigned int uiFlags; // Size=4 Offset=4
} WGLSWAP, *PWGLSWAP;
typedef struct _CERT_NAME_CONSTRAINTS_INFO // Size=16
{
    unsigned long cPermittedSubtree; // Size=4 Offset=0
    struct _CERT_GENERAL_SUBTREE * rgPermittedSubtree; // Size=4 Offset=4
    unsigned long cExcludedSubtree; // Size=4 Offset=8
    struct _CERT_GENERAL_SUBTREE * rgExcludedSubtree; // Size=4 Offset=12
} CERT_NAME_CONSTRAINTS_INFO, *PCERT_NAME_CONSTRAINTS_INFO;
typedef struct tagCLEANLOCALSTORAGE // Size=12
{
    struct IUnknown * pInterface; // Size=4 Offset=0
    void * pStorage; // Size=4 Offset=4
    unsigned long flags; // Size=4 Offset=8
} *PtagCLEANLOCALSTORAGE;
typedef struct tagCHARSETINFO // Size=32
{
    unsigned int ciCharset; // Size=4 Offset=0
    unsigned int ciACP; // Size=4 Offset=4
    struct tagFONTSIGNATURE fs; // Size=24 Offset=8
} *PtagCHARSETINFO;
typedef struct tagHELPINFO // Size=28
{
    unsigned int cbSize; // Size=4 Offset=0
    int iContextType; // Size=4 Offset=4
    int iCtrlId; // Size=4 Offset=8
    void * hItemHandle; // Size=4 Offset=12
    unsigned long dwContextId; // Size=4 Offset=16
    struct tagPOINT MousePos; // Size=8 Offset=20
} *PtagHELPINFO;
typedef struct _CERT_DSS_PARAMETERS // Size=24
{
    struct _CRYPTOAPI_BLOB p; // Size=8 Offset=0
    struct _CRYPTOAPI_BLOB q; // Size=8 Offset=8
    struct _CRYPTOAPI_BLOB g; // Size=8 Offset=16
} CERT_DSS_PARAMETERS, *PCERT_DSS_PARAMETERS;
typedef struct _SC_ACTION // Size=8
{
    enum _SC_ACTION_TYPE Type; // Size=4 Offset=0
    unsigned long Delay; // Size=4 Offset=4
} SC_ACTION, *PSC_ACTION;
typedef struct IMAGE_COR20_HEADER // Size=72
{
    unsigned long cb; // Size=4 Offset=0
    unsigned short MajorRuntimeVersion; // Size=2 Offset=4
    unsigned short MinorRuntimeVersion; // Size=2 Offset=6
    struct _IMAGE_DATA_DIRECTORY MetaData; // Size=8 Offset=8
    unsigned long Flags; // Size=4 Offset=16
    unsigned long EntryPointToken; // Size=4 Offset=20
    struct _IMAGE_DATA_DIRECTORY Resources; // Size=8 Offset=24
    struct _IMAGE_DATA_DIRECTORY StrongNameSignature; // Size=8 Offset=32
    struct _IMAGE_DATA_DIRECTORY CodeManagerTable; // Size=8 Offset=40
    struct _IMAGE_DATA_DIRECTORY VTableFixups; // Size=8 Offset=48
    struct _IMAGE_DATA_DIRECTORY ExportAddressTableJumps; // Size=8 Offset=56
    struct _IMAGE_DATA_DIRECTORY ManagedNativeHeader; // Size=8 Offset=64
} *PIMAGE_COR20_HEADER;
typedef struct tagWINDOWPOS // Size=28
{
    struct HWND__ * hwnd; // Size=4 Offset=0
    struct HWND__ * hwndInsertAfter; // Size=4 Offset=4
    int x; // Size=4 Offset=8
    int y; // Size=4 Offset=12
    int cx; // Size=4 Offset=16
    int cy; // Size=4 Offset=20
    unsigned int flags; // Size=4 Offset=24
} *PtagWINDOWPOS;
typedef struct _SHFILEOPSTRUCTA // Size=30
{
    struct HWND__ * hwnd; // Size=4 Offset=0
    unsigned int wFunc; // Size=4 Offset=4
    char * pFrom; // Size=4 Offset=8
    char * pTo; // Size=4 Offset=12
    unsigned short fFlags; // Size=2 Offset=16
    int fAnyOperationsAborted; // Size=4 Offset=18
    void * hNameMappings; // Size=4 Offset=22
    char * lpszProgressTitle; // Size=4 Offset=26
} SHFILEOPSTRUCTA, *PSHFILEOPSTRUCTA;
typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST // Size=8
{
    unsigned long nCert_Hash; // Size=4 Offset=0
    struct _ENCRYPTION_CERTIFICATE_HASH * * pUsers; // Size=4 Offset=4
} ENCRYPTION_CERTIFICATE_HASH_LIST, *PENCRYPTION_CERTIFICATE_HASH_LIST;
typedef struct tagEMRCREATEMONOBRUSH // Size=32
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihBrush; // Size=4 Offset=8
    unsigned long iUsage; // Size=4 Offset=12
    unsigned long offBmi; // Size=4 Offset=16
    unsigned long cbBmi; // Size=4 Offset=20
    unsigned long offBits; // Size=4 Offset=24
    unsigned long cbBits; // Size=4 Offset=28
} *PtagEMRCREATEMONOBRUSH;
typedef union tagRPC_EE_INFO_PARAM::__unnamed // Size=8
{
    char * AnsiString; // Size=4 Offset=0
    unsigned short * UnicodeString; // Size=4 Offset=0
    long LVal; // Size=4 Offset=0
    short SVal; // Size=2 Offset=0
    unsigned __int64 PVal; // Size=8 Offset=0
    struct tagBinaryParam BVal; // Size=8 Offset=0
} *PtagRPC_EE_INFO_PARAM::__unnamed;
typedef struct tagENUMLOGFONTEXA // Size=188
{
    struct tagLOGFONTA elfLogFont; // Size=60 Offset=0
    unsigned char elfFullName[64]; // Size=64 Offset=60
    unsigned char elfStyle[32]; // Size=32 Offset=124
    unsigned char elfScript[32]; // Size=32 Offset=156
} *PtagENUMLOGFONTEXA;
typedef struct _GLYPHMETRICS // Size=20
{
    unsigned int gmBlackBoxX; // Size=4 Offset=0
    unsigned int gmBlackBoxY; // Size=4 Offset=4
    struct tagPOINT gmptGlyphOrigin; // Size=8 Offset=8
    short gmCellIncX; // Size=2 Offset=16
    short gmCellIncY; // Size=2 Offset=18
} GLYPHMETRICS, *PGLYPHMETRICS;
typedef struct _FORMAT_EX_PARAMETERS // Size=28
{
    enum _MEDIA_TYPE MediaType; // Size=4 Offset=0
    unsigned long StartCylinderNumber; // Size=4 Offset=4
    unsigned long EndCylinderNumber; // Size=4 Offset=8
    unsigned long StartHeadNumber; // Size=4 Offset=12
    unsigned long EndHeadNumber; // Size=4 Offset=16
    unsigned short FormatGapLength; // Size=2 Offset=20
    unsigned short SectorsPerTrack; // Size=2 Offset=22
    unsigned short SectorNumber[1]; // Size=2 Offset=24
} FORMAT_EX_PARAMETERS, *PFORMAT_EX_PARAMETERS;
typedef struct tagEMRSETMITERLIMIT // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    float eMiterLimit; // Size=4 Offset=8
} *PtagEMRSETMITERLIMIT;
typedef struct _CERT_DH_PARAMETERS // Size=16
{
    struct _CRYPTOAPI_BLOB p; // Size=8 Offset=0
    struct _CRYPTOAPI_BLOB g; // Size=8 Offset=8
} CERT_DH_PARAMETERS, *PCERT_DH_PARAMETERS;
typedef struct _DEBUG_EVENT // Size=96
{
    unsigned long dwDebugEventCode; // Size=4 Offset=0
    unsigned long dwProcessId; // Size=4 Offset=4
    unsigned long dwThreadId; // Size=4 Offset=8
    union _DEBUG_EVENT::___unnamed1859 u; // Size=84 Offset=12
} DEBUG_EVENT, *PDEBUG_EVENT;
typedef struct _SHFILEINFOA // Size=352
{
    struct HICON__ * hIcon; // Size=4 Offset=0
    int iIcon; // Size=4 Offset=4
    unsigned long dwAttributes; // Size=4 Offset=8
    char szDisplayName[260]; // Size=260 Offset=12
    char szTypeName[80]; // Size=80 Offset=272
} SHFILEINFOA, *PSHFILEINFOA;
typedef struct tagMIXERLINECONTROLSA // Size=24
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwLineID; // Size=4 Offset=4
    union
    {
        unsigned long dwControlID; // Size=4 Offset=8
        unsigned long dwControlType; // Size=4 Offset=8
    };
    unsigned long cControls; // Size=4 Offset=12
    unsigned long cbmxctrl; // Size=4 Offset=16
    struct tagMIXERCONTROLA * pamxctrl; // Size=4 Offset=20
} *PtagMIXERLINECONTROLSA;
typedef struct tagQUERYCONTEXT // Size=32
{
    unsigned long dwContext; // Size=4 Offset=0
    struct tagCSPLATFORM Platform; // Size=16 Offset=4
    unsigned long Locale; // Size=4 Offset=20
    unsigned long dwVersionHi; // Size=4 Offset=24
    unsigned long dwVersionLo; // Size=4 Offset=28
} *PtagQUERYCONTEXT;
typedef struct _tagHIT_LOGGING_INFO // Size=44
{
    unsigned long dwStructSize; // Size=4 Offset=0
    char * lpszLoggedUrlName; // Size=4 Offset=4
    struct _SYSTEMTIME StartTime; // Size=16 Offset=8
    struct _SYSTEMTIME EndTime; // Size=16 Offset=24
    char * lpszExtendedInfo; // Size=4 Offset=40
} tagHIT_LOGGING_INFO, *PtagHIT_LOGGING_INFO;
typedef struct tagCWPSTRUCT // Size=16
{
    long lParam; // Size=4 Offset=0
    unsigned int wParam; // Size=4 Offset=4
    unsigned int message; // Size=4 Offset=8
    struct HWND__ * hwnd; // Size=4 Offset=12
} *PtagCWPSTRUCT;
typedef struct tagALTTABINFO // Size=40
{
    unsigned long cbSize; // Size=4 Offset=0
    int cItems; // Size=4 Offset=4
    int cColumns; // Size=4 Offset=8
    int cRows; // Size=4 Offset=12
    int iColFocus; // Size=4 Offset=16
    int iRowFocus; // Size=4 Offset=20
    int cxItem; // Size=4 Offset=24
    int cyItem; // Size=4 Offset=28
    struct tagPOINT ptStart; // Size=8 Offset=32
} *PtagALTTABINFO;
typedef struct _QOS_SHAPING_RATE // Size=12
{
    struct QOS_OBJECT_HDR ObjectHdr; // Size=8 Offset=0
    unsigned long ShapingRate; // Size=4 Offset=8
} QOS_SHAPING_RATE, *PQOS_SHAPING_RATE;
typedef struct _DEVICE_MEDIA_INFO // Size=32
{
    union _DEVICE_MEDIA_INFO::___unnamed1923 DeviceSpecific; // Size=32 Offset=0
} DEVICE_MEDIA_INFO, *PDEVICE_MEDIA_INFO;
typedef struct _PRINTER_INFO_9W // Size=4
{
    struct _devicemodeW * pDevMode; // Size=4 Offset=0
} PRINTER_INFO_9W, *PPRINTER_INFO_9W;
typedef struct _ENUM_SERVICE_STATUS_PROCESSW // Size=44
{
    unsigned short * lpServiceName; // Size=4 Offset=0
    unsigned short * lpDisplayName; // Size=4 Offset=4
    struct _SERVICE_STATUS_PROCESS ServiceStatusProcess; // Size=36 Offset=8
} ENUM_SERVICE_STATUS_PROCESSW, *PENUM_SERVICE_STATUS_PROCESSW;
typedef struct _KEY_EVENT_RECORD // Size=16
{
    int bKeyDown; // Size=4 Offset=0
    unsigned short wRepeatCount; // Size=2 Offset=4
    unsigned short wVirtualKeyCode; // Size=2 Offset=6
    unsigned short wVirtualScanCode; // Size=2 Offset=8
    union _KEY_EVENT_RECORD::___unnamed1948 uChar; // Size=2 Offset=10
    unsigned long dwControlKeyState; // Size=4 Offset=12
} KEY_EVENT_RECORD, *PKEY_EVENT_RECORD;
typedef struct _OBJECTID // Size=20
{
    struct _GUID Lineage; // Size=16 Offset=0
    unsigned long Uniquifier; // Size=4 Offset=16
} OBJECTID, *POBJECTID;
typedef struct _SYSTEM_ALARM_ACE // Size=12
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long SidStart; // Size=4 Offset=8
} SYSTEM_ALARM_ACE, *PSYSTEM_ALARM_ACE;
typedef struct _CERT_NAME_VALUE // Size=12
{
    unsigned long dwValueType; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Value; // Size=8 Offset=4
} CERT_NAME_VALUE, *PCERT_NAME_VALUE;
typedef struct tagENUMLOGFONTEXW // Size=348
{
    struct tagLOGFONTW elfLogFont; // Size=92 Offset=0
    unsigned short elfFullName[64]; // Size=128 Offset=92
    unsigned short elfStyle[32]; // Size=64 Offset=220
    unsigned short elfScript[32]; // Size=64 Offset=284
} *PtagENUMLOGFONTEXW;
typedef struct _EVENTSFORLOGFILE // Size=520
{
    unsigned long ulSize; // Size=4 Offset=0
    unsigned short szLogicalLogFile[256]; // Size=512 Offset=4
    unsigned long ulNumRecords; // Size=4 Offset=516
} EVENTSFORLOGFILE, *PEVENTSFORLOGFILE;
typedef struct _COAUTHINFO // Size=28
{
    unsigned long dwAuthnSvc; // Size=4 Offset=0
    unsigned long dwAuthzSvc; // Size=4 Offset=4
    unsigned short * pwszServerPrincName; // Size=4 Offset=8
    unsigned long dwAuthnLevel; // Size=4 Offset=12
    unsigned long dwImpersonationLevel; // Size=4 Offset=16
    struct _COAUTHIDENTITY * pAuthIdentityData; // Size=4 Offset=20
    unsigned long dwCapabilities; // Size=4 Offset=24
} COAUTHINFO, *PCOAUTHINFO;
typedef struct _RPC_ASYNC_STATE::__unnamed::__unnamed // Size=8
{
    void ( * NotificationRoutine)(struct _RPC_ASYNC_STATE *,void *,enum _RPC_ASYNC_EVENT); // Size=4 Offset=0
    void * hThread; // Size=4 Offset=4
} RPC_ASYNC_STATE::__unnamed::__unnamed, *PRPC_ASYNC_STATE::__unnamed::__unnamed;
typedef struct _CRYPT_CSP_PROVIDER // Size=20
{
    unsigned long dwKeySpec; // Size=4 Offset=0
    unsigned short * pwszProviderName; // Size=4 Offset=4
    struct _CRYPT_BIT_BLOB Signature; // Size=12 Offset=8
} CRYPT_CSP_PROVIDER, *PCRYPT_CSP_PROVIDER;
typedef struct _PRIVKEYVER3 // Size=44
{
    unsigned long magic; // Size=4 Offset=0
    unsigned long bitlenP; // Size=4 Offset=4
    unsigned long bitlenQ; // Size=4 Offset=8
    unsigned long bitlenJ; // Size=4 Offset=12
    unsigned long bitlenX; // Size=4 Offset=16
    struct _DSSSEED DSSSeed; // Size=24 Offset=20
} PRIVKEYVER3, *PPRIVKEYVER3;
typedef union _userHGLOBAL::__MIDL_IWinTypes_0003 // Size=8
{
    long hInproc; // Size=4 Offset=0
    struct _FLAGGED_BYTE_BLOB * hRemote; // Size=4 Offset=0
    __int64 hInproc64; // Size=8 Offset=0
} userHGLOBAL::__MIDL_IWinTypes_0003, *PuserHGLOBAL::__MIDL_IWinTypes_0003;
typedef struct _FORMAT_PARAMETERS // Size=20
{
    enum _MEDIA_TYPE MediaType; // Size=4 Offset=0
    unsigned long StartCylinderNumber; // Size=4 Offset=4
    unsigned long EndCylinderNumber; // Size=4 Offset=8
    unsigned long StartHeadNumber; // Size=4 Offset=12
    unsigned long EndHeadNumber; // Size=4 Offset=16
} FORMAT_PARAMETERS, *PFORMAT_PARAMETERS;
typedef struct _DRAGINFOW // Size=24
{
    unsigned int uSize; // Size=4 Offset=0
    struct tagPOINT pt; // Size=8 Offset=4
    int fNC; // Size=4 Offset=12
    unsigned short * lpFileList; // Size=4 Offset=16
    unsigned long grfKeyState; // Size=4 Offset=20
} DRAGINFOW, *PDRAGINFOW;
typedef struct tagIMEMENUITEMINFOW // Size=192
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned int fType; // Size=4 Offset=4
    unsigned int fState; // Size=4 Offset=8
    unsigned int wID; // Size=4 Offset=12
    struct HBITMAP__ * hbmpChecked; // Size=4 Offset=16
    struct HBITMAP__ * hbmpUnchecked; // Size=4 Offset=20
    unsigned long dwItemData; // Size=4 Offset=24
    unsigned short szString[80]; // Size=160 Offset=28
    struct HBITMAP__ * hbmpItem; // Size=4 Offset=188
} *PtagIMEMENUITEMINFOW;
typedef struct _CERT_NAME_INFO // Size=8
{
    unsigned long cRDN; // Size=4 Offset=0
    struct _CERT_RDN * rgRDN; // Size=4 Offset=4
} CERT_NAME_INFO, *PCERT_NAME_INFO;
typedef struct tagNONCLIENTMETRICSW // Size=500
{
    unsigned int cbSize; // Size=4 Offset=0
    int iBorderWidth; // Size=4 Offset=4
    int iScrollWidth; // Size=4 Offset=8
    int iScrollHeight; // Size=4 Offset=12
    int iCaptionWidth; // Size=4 Offset=16
    int iCaptionHeight; // Size=4 Offset=20
    struct tagLOGFONTW lfCaptionFont; // Size=92 Offset=24
    int iSmCaptionWidth; // Size=4 Offset=116
    int iSmCaptionHeight; // Size=4 Offset=120
    struct tagLOGFONTW lfSmCaptionFont; // Size=92 Offset=124
    int iMenuWidth; // Size=4 Offset=216
    int iMenuHeight; // Size=4 Offset=220
    struct tagLOGFONTW lfMenuFont; // Size=92 Offset=224
    struct tagLOGFONTW lfStatusFont; // Size=92 Offset=316
    struct tagLOGFONTW lfMessageFont; // Size=92 Offset=408
} *PtagNONCLIENTMETRICSW;
typedef struct tagEMRSETTEXTCOLOR // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long crColor; // Size=4 Offset=8
} *PtagEMRSETTEXTCOLOR;
typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwRegPolicySettings; // Size=4 Offset=4
    struct _CMSG_SIGNER_INFO * pSignerInfo; // Size=4 Offset=8
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
typedef struct tagDELETEITEMSTRUCT // Size=20
{
    unsigned int CtlType; // Size=4 Offset=0
    unsigned int CtlID; // Size=4 Offset=4
    unsigned int itemID; // Size=4 Offset=8
    struct HWND__ * hwndItem; // Size=4 Offset=12
    unsigned long itemData; // Size=4 Offset=16
} *PtagDELETEITEMSTRUCT;
typedef struct tagHSZPAIR // Size=8
{
    struct HSZ__ * hszSvc; // Size=4 Offset=0
    struct HSZ__ * hszTopic; // Size=4 Offset=4
} *PtagHSZPAIR;
typedef struct _s__ThrowInfo // Size=16
{
    unsigned int attributes; // Size=4 Offset=0
    void ( * pmfnUnwind)(); // Size=4 Offset=4
    int ( * pForwardCompat)(<NoType>); // Size=4 Offset=8
    struct _s__CatchableTypeArray * pCatchableTypeArray; // Size=4 Offset=12
} s__ThrowInfo, *Ps__ThrowInfo;
typedef struct tagMONITORINFO // Size=40
{
    unsigned long cbSize; // Size=4 Offset=0
    struct tagRECT rcMonitor; // Size=16 Offset=4
    struct tagRECT rcWork; // Size=16 Offset=20
    unsigned long dwFlags; // Size=4 Offset=36
} *PtagMONITORINFO;
typedef struct _SYSTEM_AUDIT_ACE // Size=12
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long SidStart; // Size=4 Offset=8
} SYSTEM_AUDIT_ACE, *PSYSTEM_AUDIT_ACE;
typedef struct tagMCI_OVLY_RECT_PARMS // Size=20
{
    unsigned long dwCallback; // Size=4 Offset=0
    struct tagRECT rc; // Size=16 Offset=4
} *PtagMCI_OVLY_RECT_PARMS;
typedef struct tagMENUINFO // Size=28
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long fMask; // Size=4 Offset=4
    unsigned long dwStyle; // Size=4 Offset=8
    unsigned int cyMax; // Size=4 Offset=12
    struct HBRUSH__ * hbrBack; // Size=4 Offset=16
    unsigned long dwContextHelpID; // Size=4 Offset=20
    unsigned long dwMenuData; // Size=4 Offset=24
} *PtagMENUINFO;
typedef struct tagINTERFACEDATA // Size=8
{
    struct tagMETHODDATA * pmethdata; // Size=4 Offset=0
    unsigned int cMembers; // Size=4 Offset=4
} *PtagINTERFACEDATA;
typedef struct _ICONINFO // Size=20
{
    int fIcon; // Size=4 Offset=0
    unsigned long xHotspot; // Size=4 Offset=4
    unsigned long yHotspot; // Size=4 Offset=8
    struct HBITMAP__ * hbmMask; // Size=4 Offset=12
    struct HBITMAP__ * hbmColor; // Size=4 Offset=16
} ICONINFO, *PICONINFO;
typedef struct _CRYPTPROTECT_PROMPTSTRUCT // Size=16
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwPromptFlags; // Size=4 Offset=4
    struct HWND__ * hwndApp; // Size=4 Offset=8
    unsigned short * szPrompt; // Size=4 Offset=12
} CRYPTPROTECT_PROMPTSTRUCT, *PCRYPTPROTECT_PROMPTSTRUCT;
typedef class MSG_CG2Z_DERBY_ENTRY_INFO // Size=83
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    int iDerbyIndex; // Size=4 Offset=4
    struct _DERBY_MONSTER_INFO_EX_ dmiEntryList[5]; // Size=70 Offset=8
    unsigned char byRaceType; // Size=1 Offset=78
    int nVCurvePoint; // Size=4 Offset=79
} *PMSG_CG2Z_DERBY_ENTRY_INFO;
typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR // Size=40
{
    unsigned long Length; // Size=4 Offset=0
    struct _RTL_VERIFIER_DLL_DESCRIPTOR * ProviderDlls; // Size=4 Offset=4
    void ( * ProviderDllLoadCallback)(unsigned short *,void *,unsigned long,void *); // Size=4 Offset=8
    void ( * ProviderDllUnloadCallback)(unsigned short *,void *,unsigned long,void *); // Size=4 Offset=12
    unsigned short * VerifierImage; // Size=4 Offset=16
    unsigned long VerifierFlags; // Size=4 Offset=20
    unsigned long VerifierDebug; // Size=4 Offset=24
    void * RtlpGetStackTraceAddress; // Size=4 Offset=28
    void * RtlpDebugPageHeapCreate; // Size=4 Offset=32
    void * RtlpDebugPageHeapDestroy; // Size=4 Offset=36
} RTL_VERIFIER_PROVIDER_DESCRIPTOR, *PRTL_VERIFIER_PROVIDER_DESCRIPTOR;
typedef union _BIDI_DATA::__unnamed // Size=8
{
    int bData; // Size=4 Offset=0
    long iData; // Size=4 Offset=0
    unsigned short * sData; // Size=4 Offset=0
    float fData; // Size=4 Offset=0
    struct _BINARY_CONTAINER biData; // Size=8 Offset=0
} BIDI_DATA::__unnamed, *PBIDI_DATA::__unnamed;
typedef struct _CRYPT_SEQUENCE_OF_ANY // Size=8
{
    unsigned long cValue; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB * rgValue; // Size=4 Offset=4
} CRYPT_SEQUENCE_OF_ANY, *PCRYPT_SEQUENCE_OF_ANY;
typedef class MSG_CG2Z_DERBY_RACE_END // Size=24
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    int iDerbyIndex; // Size=4 Offset=4
    struct _DERBY_HISTORY_INFO_ dhiResult; // Size=16 Offset=8
} *PMSG_CG2Z_DERBY_RACE_END;
typedef struct tagEMRGDICOMMENT // Size=16
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long cbData; // Size=4 Offset=8
    unsigned char Data[1]; // Size=1 Offset=12
} *PtagEMRGDICOMMENT;
typedef struct provider_info // Size=24
{
    unsigned long ( * pi_R0_1val)(void *,struct val_context *,unsigned long,void *,unsigned long *,unsigned long); // Size=4 Offset=0
    unsigned long ( * pi_R0_allvals)(void *,struct val_context *,unsigned long,void *,unsigned long *,unsigned long); // Size=4 Offset=4
    unsigned long ( * pi_R3_1val)(void *,struct val_context *,unsigned long,void *,unsigned long *,unsigned long); // Size=4 Offset=8
    unsigned long ( * pi_R3_allvals)(void *,struct val_context *,unsigned long,void *,unsigned long *,unsigned long); // Size=4 Offset=12
    unsigned long pi_flags; // Size=4 Offset=16
    void * pi_key_context; // Size=4 Offset=20
} *Pprovider_info;
typedef union _userHBITMAP::__MIDL_IWinTypes_0007 // Size=8
{
    long hInproc; // Size=4 Offset=0
    struct _userBITMAP * hRemote; // Size=4 Offset=0
    __int64 hInproc64; // Size=8 Offset=0
} userHBITMAP::__MIDL_IWinTypes_0007, *PuserHBITMAP::__MIDL_IWinTypes_0007;
typedef struct tagEMRSETCOLORSPACE // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihCS; // Size=4 Offset=8
} *PtagEMRSETCOLORSPACE;
typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA // Size=8
{
    struct HKEY__ * hKeyBase; // Size=4 Offset=0
    unsigned short * pwszRegPath; // Size=4 Offset=4
} CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA;
typedef struct tagENUMLOGFONTW // Size=284
{
    struct tagLOGFONTW elfLogFont; // Size=92 Offset=0
    unsigned short elfFullName[64]; // Size=128 Offset=92
    unsigned short elfStyle[32]; // Size=64 Offset=220
} *PtagENUMLOGFONTW;
typedef struct _TOKEN_AUDIT_POLICY // Size=12
{
    unsigned long PolicyCount; // Size=4 Offset=0
    struct _TOKEN_AUDIT_POLICY_ELEMENT Policy[1]; // Size=8 Offset=4
} TOKEN_AUDIT_POLICY, *PTOKEN_AUDIT_POLICY;
typedef struct _CONSOLE_FONT_INFO // Size=8
{
    unsigned long nFont; // Size=4 Offset=0
    struct _COORD dwFontSize; // Size=4 Offset=4
} CONSOLE_FONT_INFO, *PCONSOLE_FONT_INFO;
typedef struct _DISCDLGSTRUCTW // Size=20
{
    unsigned long cbStructure; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    unsigned short * lpLocalName; // Size=4 Offset=8
    unsigned short * lpRemoteName; // Size=4 Offset=12
    unsigned long dwFlags; // Size=4 Offset=16
} DISCDLGSTRUCTW, *PDISCDLGSTRUCTW;
typedef struct _CERT_EXTENSIONS // Size=8
{
    unsigned long cExtension; // Size=4 Offset=0
    struct _CERT_EXTENSION * rgExtension; // Size=4 Offset=4
} CERT_EXTENSIONS, *PCERT_EXTENSIONS;
typedef struct _CMC_TAGGED_OTHER_MSG // Size=16
{
    unsigned long dwBodyPartID; // Size=4 Offset=0
    char * pszObjId; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB Value; // Size=8 Offset=8
} CMC_TAGGED_OTHER_MSG, *PCMC_TAGGED_OTHER_MSG;
typedef struct _RGNDATAHEADER // Size=32
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long iType; // Size=4 Offset=4
    unsigned long nCount; // Size=4 Offset=8
    unsigned long nRgnSize; // Size=4 Offset=12
    struct tagRECT rcBound; // Size=16 Offset=16
} RGNDATAHEADER, *PRGNDATAHEADER;
typedef struct tMIXERCONTROLDETAILS // Size=24
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwControlID; // Size=4 Offset=4
    unsigned long cChannels; // Size=4 Offset=8
    union
    {
        struct HWND__ * hwndOwner; // Size=4 Offset=12
        unsigned long cMultipleItems; // Size=4 Offset=12
    };
    unsigned long cbDetails; // Size=4 Offset=16
    void * paDetails; // Size=4 Offset=20
} *PtMIXERCONTROLDETAILS;
typedef struct _SE_IMPERSONATION_STATE // Size=12
{
    void * Token; // Size=4 Offset=0
    unsigned char CopyOnOpen; // Size=1 Offset=4
    unsigned char EffectiveOnly; // Size=1 Offset=5
    enum _SECURITY_IMPERSONATION_LEVEL Level; // Size=4 Offset=8
} SE_IMPERSONATION_STATE, *PSE_IMPERSONATION_STATE;
typedef struct _ACCESS_ALLOWED_CALLBACK_ACE // Size=12
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long SidStart; // Size=4 Offset=8
} ACCESS_ALLOWED_CALLBACK_ACE, *PACCESS_ALLOWED_CALLBACK_ACE;
typedef struct tagWAVEINCAPS2W // Size=128
{
    unsigned short wMid; // Size=2 Offset=0
    unsigned short wPid; // Size=2 Offset=2
    unsigned int vDriverVersion; // Size=4 Offset=4
    unsigned short szPname[32]; // Size=64 Offset=8
    unsigned long dwFormats; // Size=4 Offset=72
    unsigned short wChannels; // Size=2 Offset=76
    unsigned short wReserved1; // Size=2 Offset=78
    struct _GUID ManufacturerGuid; // Size=16 Offset=80
    struct _GUID ProductGuid; // Size=16 Offset=96
    struct _GUID NameGuid; // Size=16 Offset=112
} *PtagWAVEINCAPS2W;
typedef struct _SECURITY_DESCRIPTOR // Size=20
{
    unsigned char Revision; // Size=1 Offset=0
    unsigned char Sbz1; // Size=1 Offset=1
    unsigned short Control; // Size=2 Offset=2
    void * Owner; // Size=4 Offset=4
    void * Group; // Size=4 Offset=8
    struct _ACL * Sacl; // Size=4 Offset=12
    struct _ACL * Dacl; // Size=4 Offset=16
} SECURITY_DESCRIPTOR, *PSECURITY_DESCRIPTOR;
typedef struct _CHAR_INFO // Size=4
{
    union _CHAR_INFO::___unnamed2290 Char; // Size=2 Offset=0
    unsigned short Attributes; // Size=2 Offset=2
} CHAR_INFO, *PCHAR_INFO;
typedef class MSG_CG2Z_ANS_LOTTO_INFO // Size=1089
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    bool m_bIsAbleToPurchase; // Size=1 Offset=4
    int m_nLoadedHistoryNum; // Size=4 Offset=5
    struct _LOTTO_LOG_DATA_ m_stNowLottoStatus; // Size=108 Offset=9
    struct _LOTTO_LOG_DATA_ m_arrLottoHistory[9]; // Size=972 Offset=117
} *PMSG_CG2Z_ANS_LOTTO_INFO;
typedef union _DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed // Size=2
{
    struct _DEVICE_MEDIA_INFO::___unnamed2325::___unnamed2325::___unnamed2325::___unnamed2325 ScsiInformation; // Size=2 Offset=0
} DEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed, *PDEVICE_MEDIA_INFO::__unnamed::__unnamed::__unnamed;
typedef struct _PRINTER_INFO_2W // Size=84
{
    unsigned short * pServerName; // Size=4 Offset=0
    unsigned short * pPrinterName; // Size=4 Offset=4
    unsigned short * pShareName; // Size=4 Offset=8
    unsigned short * pPortName; // Size=4 Offset=12
    unsigned short * pDriverName; // Size=4 Offset=16
    unsigned short * pComment; // Size=4 Offset=20
    unsigned short * pLocation; // Size=4 Offset=24
    struct _devicemodeW * pDevMode; // Size=4 Offset=28
    unsigned short * pSepFile; // Size=4 Offset=32
    unsigned short * pPrintProcessor; // Size=4 Offset=36
    unsigned short * pDatatype; // Size=4 Offset=40
    unsigned short * pParameters; // Size=4 Offset=44
    void * pSecurityDescriptor; // Size=4 Offset=48
    unsigned long Attributes; // Size=4 Offset=52
    unsigned long Priority; // Size=4 Offset=56
    unsigned long DefaultPriority; // Size=4 Offset=60
    unsigned long StartTime; // Size=4 Offset=64
    unsigned long UntilTime; // Size=4 Offset=68
    unsigned long Status; // Size=4 Offset=72
    unsigned long cJobs; // Size=4 Offset=76
    unsigned long AveragePPM; // Size=4 Offset=80
} PRINTER_INFO_2W, *PPRINTER_INFO_2W;
typedef struct RPC_IF_ID_VECTOR // Size=8
{
    unsigned long Count; // Size=4 Offset=0
    struct _RPC_IF_ID * IfId[1]; // Size=4 Offset=4
} *PRPC_IF_ID_VECTOR;
typedef struct _CTL_USAGE_MATCH // Size=12
{
    unsigned long dwType; // Size=4 Offset=0
    struct _CTL_USAGE Usage; // Size=8 Offset=4
} CTL_USAGE_MATCH, *PCTL_USAGE_MATCH;
typedef struct RPC_IMPORT_CONTEXT_P // Size=12
{
    void * LookupContext; // Size=4 Offset=0
    void * ProposedHandle; // Size=4 Offset=4
    struct _RPC_BINDING_VECTOR * Bindings; // Size=4 Offset=8
} *PRPC_IMPORT_CONTEXT_P;
typedef struct _DRAWPATRECT // Size=20
{
    struct tagPOINT ptPosition; // Size=8 Offset=0
    struct tagPOINT ptSize; // Size=8 Offset=8
    unsigned short wStyle; // Size=2 Offset=16
    unsigned short wPattern; // Size=2 Offset=18
} DRAWPATRECT, *PDRAWPATRECT;
typedef struct _SERVICE_FAILURE_ACTIONSW // Size=20
{
    unsigned long dwResetPeriod; // Size=4 Offset=0
    unsigned short * lpRebootMsg; // Size=4 Offset=4
    unsigned short * lpCommand; // Size=4 Offset=8
    unsigned long cActions; // Size=4 Offset=12
    struct _SC_ACTION * lpsaActions; // Size=4 Offset=16
} SERVICE_FAILURE_ACTIONSW, *PSERVICE_FAILURE_ACTIONSW;
typedef struct tagEMRSETMAPPERFLAGS // Size=12
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long dwFlags; // Size=4 Offset=8
} *PtagEMRSETMAPPERFLAGS;
typedef struct UDATE // Size=18
{
    struct _SYSTEMTIME st; // Size=16 Offset=0
    unsigned short wDayOfYear; // Size=2 Offset=16
} *PUDATE;
typedef union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 // Size=8
{
    long hInproc; // Size=4 Offset=0
    struct _remoteMETAFILEPICT * hRemote; // Size=4 Offset=0
    __int64 hInproc64; // Size=8 Offset=0
} userHMETAFILEPICT::__MIDL_IWinTypes_0005, *PuserHMETAFILEPICT::__MIDL_IWinTypes_0005;
typedef struct tagEMRRESIZEPALETTE // Size=16
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihPal; // Size=4 Offset=8
    unsigned long cEntries; // Size=4 Offset=12
} *PtagEMRRESIZEPALETTE;
typedef struct _OBJECT_TYPE_LIST // Size=8
{
    unsigned short Level; // Size=2 Offset=0
    unsigned short Sbz; // Size=2 Offset=2
    struct _GUID * ObjectType; // Size=4 Offset=4
} OBJECT_TYPE_LIST, *POBJECT_TYPE_LIST;
typedef struct _TIME_ZONE_INFORMATION // Size=172
{
    long Bias; // Size=4 Offset=0
    unsigned short StandardName[32]; // Size=64 Offset=4
    struct _SYSTEMTIME StandardDate; // Size=16 Offset=68
    long StandardBias; // Size=4 Offset=84
    unsigned short DaylightName[32]; // Size=64 Offset=88
    struct _SYSTEMTIME DaylightDate; // Size=16 Offset=152
    long DaylightBias; // Size=4 Offset=168
} TIME_ZONE_INFORMATION, *PTIME_ZONE_INFORMATION;
typedef struct _CERT_POLICY95_QUALIFIER1 // Size=20
{
    unsigned short * pszPracticesReference; // Size=4 Offset=0
    char * pszNoticeIdentifier; // Size=4 Offset=4
    char * pszNSINoticeIdentifier; // Size=4 Offset=8
    unsigned long cCPSURLs; // Size=4 Offset=12
    struct _CPS_URLS * rgCPSURLs; // Size=4 Offset=16
} CERT_POLICY95_QUALIFIER1, *PCERT_POLICY95_QUALIFIER1;
typedef struct tagTPMPARAMS // Size=20
{
    unsigned int cbSize; // Size=4 Offset=0
    struct tagRECT rcExclude; // Size=16 Offset=4
} *PtagTPMPARAMS;
typedef struct _WINDOW_BUFFER_SIZE_RECORD // Size=4
{
    struct _COORD dwSize; // Size=4 Offset=0
} WINDOW_BUFFER_SIZE_RECORD, *PWINDOW_BUFFER_SIZE_RECORD;
typedef struct _INPUT_RECORD // Size=20
{
    unsigned short EventType; // Size=2 Offset=0
    union _INPUT_RECORD::___unnamed2411 Event; // Size=16 Offset=4
} INPUT_RECORD, *PINPUT_RECORD;
typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA // Size=8
{
    union
    {
        struct HKEY__ * hKeyBase; // Size=4 Offset=0
        void * pvBase; // Size=4 Offset=0
    };
    union
    {
        void * pvSystemStore; // Size=4 Offset=4
        char * pszSystemStore; // Size=4 Offset=4
        unsigned short * pwszSystemStore; // Size=4 Offset=4
    };
} CERT_SYSTEM_STORE_RELOCATE_PARA, *PCERT_SYSTEM_STORE_RELOCATE_PARA;
typedef struct _IMAGE_THUNK_DATA64 // Size=8
{
    union _IMAGE_THUNK_DATA64::___unnamed2441 u1; // Size=8 Offset=0
} IMAGE_THUNK_DATA64, *PIMAGE_THUNK_DATA64;
typedef struct _QOS_SD_MODE // Size=12
{
    struct QOS_OBJECT_HDR ObjectHdr; // Size=8 Offset=0
    unsigned long ShapeDiscardMode; // Size=4 Offset=8
} QOS_SD_MODE, *PQOS_SD_MODE;
typedef union _userHPALETTE::__MIDL_IWinTypes_0008 // Size=8
{
    long hInproc; // Size=4 Offset=0
    struct tagLOGPALETTE * hRemote; // Size=4 Offset=0
    __int64 hInproc64; // Size=8 Offset=0
} userHPALETTE::__MIDL_IWinTypes_0008, *PuserHPALETTE::__MIDL_IWinTypes_0008;
typedef struct tagHARDWAREHOOKSTRUCT // Size=16
{
    struct HWND__ * hwnd; // Size=4 Offset=0
    unsigned int message; // Size=4 Offset=4
    unsigned int wParam; // Size=4 Offset=8
    long lParam; // Size=4 Offset=12
} *PtagHARDWAREHOOKSTRUCT;
typedef class CLottoManager // Size=1092
{
    bool m_bIsAbleToPurchase; // Size=1 Offset=4
    int m_nLoadedHistoryNum; // Size=4 Offset=8
    struct _LOTTO_LOG_DATA_ m_stNowLottoStatus; // Size=108 Offset=12
    struct _LOTTO_LOG_DATA_ m_arrLottoHistory[9]; // Size=972 Offset=120
} *PCLottoManager;
typedef struct _WSACOMPLETION::__unnamed::__unnamed // Size=12
{
    struct HWND__ * hWnd; // Size=4 Offset=0
    unsigned int uMsg; // Size=4 Offset=4
    unsigned int context; // Size=4 Offset=8
} WSACOMPLETION::__unnamed::__unnamed, *PWSACOMPLETION::__unnamed::__unnamed;
typedef union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 // Size=4
{
    long hInproc; // Size=4 Offset=0
    struct _DWORD_BLOB * hRemote; // Size=4 Offset=0
} GDI_NONREMOTE::__MIDL_IWinTypes_0002, *PGDI_NONREMOTE::__MIDL_IWinTypes_0002;
typedef class std::ctype<char> // Size=24
{
    union
    {
        class std::locale::id id; // Size=4 Offset=0
        unsigned int table_size; // Size=4 Offset=0
    };
    struct _Ctypevec _Ctype; // Size=16 Offset=8
} *Pstd::ctype<char>;
typedef class std::codecvt<unsigned short,char,int> // Size=16
{
    class std::locale::id id; // Size=4 Offset=0
    struct _Cvtvec _Cvt; // Size=8 Offset=8
} *Pstd::codecvt<unsigned short,char,int>;
typedef struct std::ios_base::_Iosarray // Size=16
{
    struct std::ios_base::_Iosarray * _Next; // Size=4 Offset=0
    int _Index; // Size=4 Offset=4
    long _Lo; // Size=4 Offset=8
    void * _Vp; // Size=4 Offset=12
} *Pstd::ios_base::_Iosarray;
typedef struct _CRYPT_REGISTER_ACTIONID // Size=100
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _CRYPT_TRUST_REG_ENTRY sInitProvider; // Size=12 Offset=4
    struct _CRYPT_TRUST_REG_ENTRY sObjectProvider; // Size=12 Offset=16
    struct _CRYPT_TRUST_REG_ENTRY sSignatureProvider; // Size=12 Offset=28
    struct _CRYPT_TRUST_REG_ENTRY sCertificateProvider; // Size=12 Offset=40
    struct _CRYPT_TRUST_REG_ENTRY sCertificatePolicyProvider; // Size=12 Offset=52
    struct _CRYPT_TRUST_REG_ENTRY sFinalPolicyProvider; // Size=12 Offset=64
    struct _CRYPT_TRUST_REG_ENTRY sTestPolicyProvider; // Size=12 Offset=76
    struct _CRYPT_TRUST_REG_ENTRY sCleanupProvider; // Size=12 Offset=88
} CRYPT_REGISTER_ACTIONID, *PCRYPT_REGISTER_ACTIONID;
typedef struct _SYMBOL_INFO_PACKAGE // Size=2096
{
    struct _SYMBOL_INFO si; // Size=88 Offset=0
    char name[2001]; // Size=2001 Offset=88
} SYMBOL_INFO_PACKAGE, *PSYMBOL_INFO_PACKAGE;
typedef struct _tagADDRESS64 // Size=16
{
    unsigned __int64 Offset; // Size=8 Offset=0
    unsigned short Segment; // Size=2 Offset=8
    enum ADDRESS_MODE Mode; // Size=4 Offset=12
} tagADDRESS64, *PtagADDRESS64;
typedef struct _IMAGEHLP_MODULE64 // Size=584
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned __int64 BaseOfImage; // Size=8 Offset=8
    unsigned long ImageSize; // Size=4 Offset=16
    unsigned long TimeDateStamp; // Size=4 Offset=20
    unsigned long CheckSum; // Size=4 Offset=24
    unsigned long NumSyms; // Size=4 Offset=28
    enum SYM_TYPE SymType; // Size=4 Offset=32
    char ModuleName[32]; // Size=32 Offset=36
    char ImageName[256]; // Size=256 Offset=68
    char LoadedImageName[256]; // Size=256 Offset=324
} IMAGEHLP_MODULE64, *PIMAGEHLP_MODULE64;
typedef struct WINTRUST_SGNR_INFO_ // Size=20
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned short * pcwszDisplayName; // Size=4 Offset=4
    struct _CMSG_SIGNER_INFO * psSignerInfo; // Size=4 Offset=8
    unsigned long chStores; // Size=4 Offset=12
    void * * pahStores; // Size=4 Offset=16
} *PWINTRUST_SGNR_INFO_;
typedef struct _IMAGEHLP_MODULEW // Size=1116
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned long BaseOfImage; // Size=4 Offset=4
    unsigned long ImageSize; // Size=4 Offset=8
    unsigned long TimeDateStamp; // Size=4 Offset=12
    unsigned long CheckSum; // Size=4 Offset=16
    unsigned long NumSyms; // Size=4 Offset=20
    enum SYM_TYPE SymType; // Size=4 Offset=24
    unsigned short ModuleName[32]; // Size=64 Offset=28
    unsigned short ImageName[256]; // Size=512 Offset=92
    unsigned short LoadedImageName[256]; // Size=512 Offset=604
} IMAGEHLP_MODULEW, *PIMAGEHLP_MODULEW;
typedef struct WINTRUST_BLOB_INFO_ // Size=40
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _GUID gSubject; // Size=16 Offset=4
    unsigned short * pcwszDisplayName; // Size=4 Offset=20
    unsigned long cbMemObject; // Size=4 Offset=24
    unsigned char * pbMemObject; // Size=4 Offset=28
    unsigned long cbMemSignedMsg; // Size=4 Offset=32
    unsigned char * pbMemSignedMsg; // Size=4 Offset=36
} *PWINTRUST_BLOB_INFO_;
typedef struct _CRYPT_PROVIDER_DEFUSAGE // Size=28
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _GUID gActionID; // Size=16 Offset=4
    void * pDefPolicyCallbackData; // Size=4 Offset=20
    void * pDefSIPClientData; // Size=4 Offset=24
} CRYPT_PROVIDER_DEFUSAGE, *PCRYPT_PROVIDER_DEFUSAGE;
typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT // Size=12
{
    void * hClientToken; // Size=4 Offset=0
    struct _GUID * SubjectType; // Size=4 Offset=4
    void * Subject; // Size=4 Offset=8
} WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT, *PWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;
typedef struct _MINIDUMP_MEMORY_DESCRIPTOR // Size=16
{
    unsigned __int64 StartOfMemoryRange; // Size=8 Offset=0
    struct _MINIDUMP_LOCATION_DESCRIPTOR Memory; // Size=8 Offset=8
} MINIDUMP_MEMORY_DESCRIPTOR, *PMINIDUMP_MEMORY_DESCRIPTOR;
typedef struct _MINIDUMP_MEMORY64_LIST // Size=16
{
    unsigned __int64 NumberOfMemoryRanges; // Size=8 Offset=0
    unsigned __int64 BaseRva; // Size=8 Offset=8
} MINIDUMP_MEMORY64_LIST, *PMINIDUMP_MEMORY64_LIST;
typedef struct _CRYPT_PROVIDER_REGDEFUSAGE // Size=20
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _GUID * pgActionID; // Size=4 Offset=4
    unsigned short * pwszDllName; // Size=4 Offset=8
    char * pwszLoadCallbackDataFunctionName; // Size=4 Offset=12
    char * pwszFreeCallbackDataFunctionName; // Size=4 Offset=16
} CRYPT_PROVIDER_REGDEFUSAGE, *PCRYPT_PROVIDER_REGDEFUSAGE;
typedef struct _tagADDRESS // Size=12
{
    unsigned long Offset; // Size=4 Offset=0
    unsigned short Segment; // Size=2 Offset=4
    enum ADDRESS_MODE Mode; // Size=4 Offset=8
} tagADDRESS, *PtagADDRESS;
typedef struct _CRYPT_PROVIDER_PRIVDATA // Size=28
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _GUID gProviderID; // Size=16 Offset=4
    unsigned long cbProvData; // Size=4 Offset=20
    void * pvProvData; // Size=4 Offset=24
} CRYPT_PROVIDER_PRIVDATA, *PCRYPT_PROVIDER_PRIVDATA;
typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA // Size=8
{
    void * hClientToken; // Size=4 Offset=0
    struct _WIN_CERTIFICATE * lpCertificate; // Size=4 Offset=4
} WIN_SPUB_TRUSTED_PUBLISHER_DATA, *PWIN_SPUB_TRUSTED_PUBLISHER_DATA;
typedef struct SPC_SIGINFO_ // Size=40
{
    unsigned long dwSipVersion; // Size=4 Offset=0
    struct _GUID gSIPGuid; // Size=16 Offset=4
    unsigned long dwReserved1; // Size=4 Offset=20
    unsigned long dwReserved2; // Size=4 Offset=24
    unsigned long dwReserved3; // Size=4 Offset=28
    unsigned long dwReserved4; // Size=4 Offset=32
    unsigned long dwReserved5; // Size=4 Offset=36
} *PSPC_SIGINFO_;
typedef struct _IMAGEHLP_MODULE // Size=572
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned long BaseOfImage; // Size=4 Offset=4
    unsigned long ImageSize; // Size=4 Offset=8
    unsigned long TimeDateStamp; // Size=4 Offset=12
    unsigned long CheckSum; // Size=4 Offset=16
    unsigned long NumSyms; // Size=4 Offset=20
    enum SYM_TYPE SymType; // Size=4 Offset=24
    char ModuleName[32]; // Size=32 Offset=28
    char ImageName[256]; // Size=256 Offset=60
    char LoadedImageName[256]; // Size=256 Offset=316
} IMAGEHLP_MODULE, *PIMAGEHLP_MODULE;
typedef struct _IMAGEHLP_SYMBOL_PACKAGE // Size=2028
{
    struct _IMAGEHLP_SYMBOL sym; // Size=24 Offset=0
    char name[2001]; // Size=2001 Offset=24
} IMAGEHLP_SYMBOL_PACKAGE, *PIMAGEHLP_SYMBOL_PACKAGE;
typedef struct WINTRUST_FILE_INFO_ // Size=16
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned short * pcwszFilePath; // Size=4 Offset=4
    void * hFile; // Size=4 Offset=8
    struct _GUID * pgKnownSubject; // Size=4 Offset=12
} *PWINTRUST_FILE_INFO_;
typedef struct WINTRUST_CATALOG_INFO_ // Size=36
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwCatalogVersion; // Size=4 Offset=4
    unsigned short * pcwszCatalogFilePath; // Size=4 Offset=8
    unsigned short * pcwszMemberTag; // Size=4 Offset=12
    unsigned short * pcwszMemberFilePath; // Size=4 Offset=16
    void * hMemberFile; // Size=4 Offset=20
    unsigned char * pbCalculatedFileHash; // Size=4 Offset=24
    unsigned long cbCalculatedFileHash; // Size=4 Offset=28
    struct _CTL_CONTEXT * pcCatalogContext; // Size=4 Offset=32
} *PWINTRUST_CATALOG_INFO_;
typedef struct _MINIDUMP_EXCEPTION_INFORMATION // Size=12
{
    unsigned long ThreadId; // Size=4 Offset=0
    struct _EXCEPTION_POINTERS * ExceptionPointers; // Size=4 Offset=4
    int ClientPointers; // Size=4 Offset=8
} MINIDUMP_EXCEPTION_INFORMATION, *PMINIDUMP_EXCEPTION_INFORMATION;
typedef struct _MINIDUMP_CALLBACK_INFORMATION // Size=8
{
    int ( * CallbackRoutine)(void *,struct _MINIDUMP_CALLBACK_INPUT *,struct _MINIDUMP_CALLBACK_OUTPUT *); // Size=4 Offset=0
    void * CallbackParam; // Size=4 Offset=4
} MINIDUMP_CALLBACK_INFORMATION, *PMINIDUMP_CALLBACK_INFORMATION;
typedef struct _MINIDUMP_USER_STREAM_INFORMATION // Size=8
{
    unsigned long UserStreamCount; // Size=4 Offset=0
    struct _MINIDUMP_USER_STREAM * UserStreamArray; // Size=4 Offset=4
} MINIDUMP_USER_STREAM_INFORMATION, *PMINIDUMP_USER_STREAM_INFORMATION;
typedef struct _MINIDUMP_MODULE_CALLBACK // Size=92
{
    unsigned short * FullPath; // Size=4 Offset=0
    unsigned __int64 BaseOfImage; // Size=8 Offset=4
    unsigned long SizeOfImage; // Size=4 Offset=12
    unsigned long CheckSum; // Size=4 Offset=16
    unsigned long TimeDateStamp; // Size=4 Offset=20
    struct tagVS_FIXEDFILEINFO VersionInfo; // Size=52 Offset=24
    void * CvRecord; // Size=4 Offset=76
    unsigned long SizeOfCvRecord; // Size=4 Offset=80
    void * MiscRecord; // Size=4 Offset=84
    unsigned long SizeOfMiscRecord; // Size=4 Offset=88
} MINIDUMP_MODULE_CALLBACK, *PMINIDUMP_MODULE_CALLBACK;
typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY // Size=8
{
    struct _GUID * SubjectType; // Size=4 Offset=0
    void * Subject; // Size=4 Offset=4
} WIN_TRUST_ACTDATA_SUBJECT_ONLY, *PWIN_TRUST_ACTDATA_SUBJECT_ONLY;
typedef struct _MINIDUMP_USER_RECORD // Size=12
{
    unsigned int Type; // Size=4 Offset=0
    struct _MINIDUMP_LOCATION_DESCRIPTOR Memory; // Size=8 Offset=4
} MINIDUMP_USER_RECORD, *PMINIDUMP_USER_RECORD;
typedef struct _IMAGEHLP_DUPLICATE_SYMBOL64 // Size=16
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned long NumberOfDups; // Size=4 Offset=4
    struct _IMAGEHLP_SYMBOL64 * Symbol; // Size=4 Offset=8
    unsigned long SelectedSymbol; // Size=4 Offset=12
} IMAGEHLP_DUPLICATE_SYMBOL64, *PIMAGEHLP_DUPLICATE_SYMBOL64;
typedef struct _IMAGEHLP_DUPLICATE_SYMBOL // Size=16
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned long NumberOfDups; // Size=4 Offset=4
    struct _IMAGEHLP_SYMBOL * Symbol; // Size=4 Offset=8
    unsigned long SelectedSymbol; // Size=4 Offset=12
} IMAGEHLP_DUPLICATE_SYMBOL, *PIMAGEHLP_DUPLICATE_SYMBOL;
typedef struct _IMAGEHLP_MODULE64W // Size=1128
{
    unsigned long SizeOfStruct; // Size=4 Offset=0
    unsigned __int64 BaseOfImage; // Size=8 Offset=8
    unsigned long ImageSize; // Size=4 Offset=16
    unsigned long TimeDateStamp; // Size=4 Offset=20
    unsigned long CheckSum; // Size=4 Offset=24
    unsigned long NumSyms; // Size=4 Offset=28
    enum SYM_TYPE SymType; // Size=4 Offset=32
    unsigned short ModuleName[32]; // Size=64 Offset=36
    unsigned short ImageName[256]; // Size=512 Offset=100
    unsigned short LoadedImageName[256]; // Size=512 Offset=612
} IMAGEHLP_MODULE64W, *PIMAGEHLP_MODULE64W;
typedef struct _SPC_SP_OPUS_INFO // Size=12
{
    unsigned short * pwszProgramName; // Size=4 Offset=0
    struct SPC_LINK_ * pMoreInfo; // Size=4 Offset=4
    struct SPC_LINK_ * pPublisherInfo; // Size=4 Offset=8
} SPC_SP_OPUS_INFO, *PSPC_SP_OPUS_INFO;
typedef struct _MINIDUMP_DIRECTORY // Size=12
{
    unsigned int StreamType; // Size=4 Offset=0
    struct _MINIDUMP_LOCATION_DESCRIPTOR Location; // Size=8 Offset=4
} MINIDUMP_DIRECTORY, *PMINIDUMP_DIRECTORY;
typedef struct _SPC_SERIALIZED_OBJECT // Size=24
{
    unsigned char ClassId[16]; // Size=16 Offset=0
    struct _CRYPTOAPI_BLOB SerializedData; // Size=8 Offset=16
} SPC_SERIALIZED_OBJECT, *PSPC_SERIALIZED_OBJECT;
typedef struct _CAT_NAMEVALUE // Size=16
{
    unsigned short * pwszTag; // Size=4 Offset=0
    unsigned long fdwFlags; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB Value; // Size=8 Offset=8
} CAT_NAMEVALUE, *PCAT_NAMEVALUE;
typedef struct _IMAGEHLP_SYMBOL64_PACKAGE // Size=2040
{
    struct _IMAGEHLP_SYMBOL64 sym; // Size=32 Offset=0
    char name[2001]; // Size=2001 Offset=32
} IMAGEHLP_SYMBOL64_PACKAGE, *PIMAGEHLP_SYMBOL64_PACKAGE;
typedef union FT // Size=8
{
    unsigned __int64 ft_scalar; // Size=8 Offset=0
    struct _FILETIME ft_struct; // Size=8 Offset=0
} *PFT;
typedef struct _RTC_framedesc // Size=8
{
    int varCount; // Size=4 Offset=0
    struct _RTC_vardesc * variables; // Size=4 Offset=4
} RTC_framedesc, *PRTC_framedesc;
typedef struct tagMODULEENTRY32 // Size=548
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long th32ModuleID; // Size=4 Offset=4
    unsigned long th32ProcessID; // Size=4 Offset=8
    unsigned long GlblcntUsage; // Size=4 Offset=12
    unsigned long ProccntUsage; // Size=4 Offset=16
    unsigned char * modBaseAddr; // Size=4 Offset=20
    unsigned long modBaseSize; // Size=4 Offset=24
    struct HINSTANCE__ * hModule; // Size=4 Offset=28
    char szModule[256]; // Size=256 Offset=32
    char szExePath[260]; // Size=260 Offset=288
} *PtagMODULEENTRY32;
typedef struct _TIB // Size=48
{
    void * ExceptionList; // Size=4 Offset=0
    void * StackLimit; // Size=4 Offset=4
    void * StackBase; // Size=4 Offset=8
    void * SubSystemTib; // Size=4 Offset=12
    void * Something1; // Size=4 Offset=16
    void * ArbitraryUserPointer; // Size=4 Offset=20
    struct _TIB * Self; // Size=4 Offset=24
    unsigned short Flags; // Size=2 Offset=28
    unsigned short Win16MutextCount; // Size=2 Offset=30
    void * DebugContext; // Size=4 Offset=32
    unsigned long CurrentPriority; // Size=4 Offset=36
    unsigned long MessageQueueSelector; // Size=4 Offset=40
    void * * TlsSlots; // Size=4 Offset=44
} TIB, *PTIB;
typedef struct ReportHookNode // Size=16
{
    struct ReportHookNode * prev; // Size=4 Offset=0
    struct ReportHookNode * next; // Size=4 Offset=4
    unsigned int refcount; // Size=4 Offset=8
    int ( * pfnHookFunc)(int,char *,int *); // Size=4 Offset=12
} *PReportHookNode;
typedef struct _CrtMemBlockHeader // Size=32
{
    struct _CrtMemBlockHeader * pBlockHeaderNext; // Size=4 Offset=0
    struct _CrtMemBlockHeader * pBlockHeaderPrev; // Size=4 Offset=4
    char * szFileName; // Size=4 Offset=8
    int nLine; // Size=4 Offset=12
    unsigned int nDataSize; // Size=4 Offset=16
    int nBlockUse; // Size=4 Offset=20
    long lRequest; // Size=4 Offset=24
    unsigned char gap[4]; // Size=4 Offset=28
} CrtMemBlockHeader, *PCrtMemBlockHeader;
typedef struct tagEntry // Size=12
{
    int sizeFront; // Size=4 Offset=0
    struct tagEntry * pEntryNext; // Size=4 Offset=4
    struct tagEntry * pEntryPrev; // Size=4 Offset=8
} *PtagEntry;
typedef struct tagListHead // Size=8
{
    struct tagEntry * pEntryNext; // Size=4 Offset=0
    struct tagEntry * pEntryPrev; // Size=4 Offset=4
} *PtagListHead;
typedef struct tagHeader // Size=20
{
    unsigned int bitvEntryHi; // Size=4 Offset=0
    unsigned int bitvEntryLo; // Size=4 Offset=4
    unsigned int bitvCommit; // Size=4 Offset=8
    void * pHeapData; // Size=4 Offset=12
    struct tagRegion * pRegion; // Size=4 Offset=16
} *PtagHeader;
typedef struct _CrtMemState // Size=52
{
    struct _CrtMemBlockHeader * pBlockHeader; // Size=4 Offset=0
    unsigned int lCounts[5]; // Size=20 Offset=4
    unsigned int lSizes[5]; // Size=20 Offset=24
    unsigned int lHighWaterCount; // Size=4 Offset=44
    unsigned int lTotalCount; // Size=4 Offset=48
} CrtMemState, *PCrtMemState;
typedef union doubleint // Size=8
{
    __int64 bigint; // Size=8 Offset=0
    struct ___unnamed3106 twoints; // Size=8 Offset=0
} *Pdoubleint;
typedef struct _s_CatchableTypeArray // Size=4
{
    int nCatchableTypes; // Size=4 Offset=0
} s_CatchableTypeArray, *Ps_CatchableTypeArray;
typedef struct _s_HandlerType // Size=16
{
    unsigned int adjectives; // Size=4 Offset=0
    struct TypeDescriptor * pType; // Size=4 Offset=4
    int dispCatchObj; // Size=4 Offset=8
    void * addressOfHandler; // Size=4 Offset=12
} s_HandlerType, *Ps_HandlerType;
typedef struct _s_ESTypeList // Size=8
{
    int nCount; // Size=4 Offset=0
    struct _s_HandlerType * pTypeArray; // Size=4 Offset=4
} s_ESTypeList, *Ps_ESTypeList;
typedef struct _s_ThrowInfo // Size=16
{
    unsigned int attributes; // Size=4 Offset=0
    void ( * pmfnUnwind)(); // Size=4 Offset=4
    int ( * pForwardCompat)(<NoType>); // Size=4 Offset=8
    struct _s_CatchableTypeArray * pCatchableTypeArray; // Size=4 Offset=12
} s_ThrowInfo, *Ps_ThrowInfo;
typedef struct _s_TryBlockMapEntry // Size=20
{
    int tryLow; // Size=4 Offset=0
    int tryHigh; // Size=4 Offset=4
    int catchHigh; // Size=4 Offset=8
    int nCatches; // Size=4 Offset=12
    struct _s_HandlerType * pHandlerArray; // Size=4 Offset=16
} s_TryBlockMapEntry, *Ps_TryBlockMapEntry;
typedef struct EHExceptionRecord::EHParameters // Size=12
{
    unsigned long magicNumber; // Size=4 Offset=0
    void * pExceptionObject; // Size=4 Offset=4
    struct _s_ThrowInfo * pThrowInfo; // Size=4 Offset=8
} *PEHExceptionRecord::EHParameters;
typedef struct EHRegistrationNode // Size=12
{
    struct EHRegistrationNode * pNext; // Size=4 Offset=0
    void * frameHandler; // Size=4 Offset=4
    int state; // Size=4 Offset=8
} *PEHRegistrationNode;
typedef struct FrameInfo // Size=8
{
    void * pExceptionObject; // Size=4 Offset=0
    struct FrameInfo * pNext; // Size=4 Offset=4
} *PFrameInfo;
typedef struct _CSADDR_INFO // Size=24
{
    struct _SOCKET_ADDRESS LocalAddr; // Size=8 Offset=0
    struct _SOCKET_ADDRESS RemoteAddr; // Size=8 Offset=8
    int iSocketType; // Size=4 Offset=16
    int iProtocol; // Size=4 Offset=20
} CSADDR_INFO, *PCSADDR_INFO;
typedef struct _PROCESS_HEAP_ENTRY // Size=28
{
    void * lpData; // Size=4 Offset=0
    unsigned long cbData; // Size=4 Offset=4
    unsigned char cbOverhead; // Size=1 Offset=8
    unsigned char iRegionIndex; // Size=1 Offset=9
    unsigned short wFlags; // Size=2 Offset=10
    union
    {
        struct _PROCESS_HEAP_ENTRY::___unnamed58::___unnamed58 Block; // Size=16 Offset=12
        struct _PROCESS_HEAP_ENTRY::___unnamed60::___unnamed60 Region; // Size=16 Offset=12
    };
} PROCESS_HEAP_ENTRY, *PPROCESS_HEAP_ENTRY;
typedef struct tagMETHODDATA // Size=28
{
    unsigned short * szName; // Size=4 Offset=0
    struct tagPARAMDATA * ppdata; // Size=4 Offset=4
    long dispid; // Size=4 Offset=8
    unsigned int iMeth; // Size=4 Offset=12
    enum tagCALLCONV cc; // Size=4 Offset=16
    unsigned int cArgs; // Size=4 Offset=20
    unsigned short wFlags; // Size=2 Offset=24
    unsigned short vtReturn; // Size=2 Offset=26
} *PtagMETHODDATA;
typedef struct tagOFNA // Size=76
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    char * lpstrFilter; // Size=4 Offset=12
    char * lpstrCustomFilter; // Size=4 Offset=16
    unsigned long nMaxCustFilter; // Size=4 Offset=20
    unsigned long nFilterIndex; // Size=4 Offset=24
    char * lpstrFile; // Size=4 Offset=28
    unsigned long nMaxFile; // Size=4 Offset=32
    char * lpstrFileTitle; // Size=4 Offset=36
    unsigned long nMaxFileTitle; // Size=4 Offset=40
    char * lpstrInitialDir; // Size=4 Offset=44
    char * lpstrTitle; // Size=4 Offset=48
    unsigned long Flags; // Size=4 Offset=52
    unsigned short nFileOffset; // Size=2 Offset=56
    unsigned short nFileExtension; // Size=2 Offset=58
    char * lpstrDefExt; // Size=4 Offset=60
    long lCustData; // Size=4 Offset=64
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=68
    char * lpTemplateName; // Size=4 Offset=72
} *PtagOFNA;
typedef struct _userHGLOBAL // Size=16
{
    long fContext; // Size=4 Offset=0
    union _userHGLOBAL::__MIDL_IWinTypes_0003 u; // Size=8 Offset=8
} userHGLOBAL, *PuserHGLOBAL;
typedef struct tagOFNW // Size=76
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    unsigned short * lpstrFilter; // Size=4 Offset=12
    unsigned short * lpstrCustomFilter; // Size=4 Offset=16
    unsigned long nMaxCustFilter; // Size=4 Offset=20
    unsigned long nFilterIndex; // Size=4 Offset=24
    unsigned short * lpstrFile; // Size=4 Offset=28
    unsigned long nMaxFile; // Size=4 Offset=32
    unsigned short * lpstrFileTitle; // Size=4 Offset=36
    unsigned long nMaxFileTitle; // Size=4 Offset=40
    unsigned short * lpstrInitialDir; // Size=4 Offset=44
    unsigned short * lpstrTitle; // Size=4 Offset=48
    unsigned long Flags; // Size=4 Offset=52
    unsigned short nFileOffset; // Size=2 Offset=56
    unsigned short nFileExtension; // Size=2 Offset=58
    unsigned short * lpstrDefExt; // Size=4 Offset=60
    long lCustData; // Size=4 Offset=64
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=68
    unsigned short * lpTemplateName; // Size=4 Offset=72
} *PtagOFNW;
typedef struct _NOTIFYICONDATAA // Size=88
{
    unsigned long cbSize; // Size=4 Offset=0
    struct HWND__ * hWnd; // Size=4 Offset=4
    unsigned int uID; // Size=4 Offset=8
    unsigned int uFlags; // Size=4 Offset=12
    unsigned int uCallbackMessage; // Size=4 Offset=16
    struct HICON__ * hIcon; // Size=4 Offset=20
    char szTip[64]; // Size=64 Offset=24
} NOTIFYICONDATAA, *PNOTIFYICONDATAA;
typedef struct tagEXTLOGFONTW // Size=320
{
    struct tagLOGFONTW elfLogFont; // Size=92 Offset=0
    unsigned short elfFullName[64]; // Size=128 Offset=92
    unsigned short elfStyle[32]; // Size=64 Offset=220
    unsigned long elfVersion; // Size=4 Offset=284
    unsigned long elfStyleSize; // Size=4 Offset=288
    unsigned long elfMatch; // Size=4 Offset=292
    unsigned long elfReserved; // Size=4 Offset=296
    unsigned char elfVendorId[4]; // Size=4 Offset=300
    unsigned long elfCulture; // Size=4 Offset=304
    struct tagPANOSE elfPanose; // Size=10 Offset=308
} *PtagEXTLOGFONTW;
typedef struct tagEMROFFSETCLIPRGN // Size=16
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _POINTL ptlOffset; // Size=8 Offset=8
} *PtagEMROFFSETCLIPRGN;
typedef struct tagFINDREPLACEA // Size=40
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    unsigned long Flags; // Size=4 Offset=12
    char * lpstrFindWhat; // Size=4 Offset=16
    char * lpstrReplaceWith; // Size=4 Offset=20
    unsigned short wFindWhatLen; // Size=2 Offset=24
    unsigned short wReplaceWithLen; // Size=2 Offset=26
    long lCustData; // Size=4 Offset=28
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=32
    char * lpTemplateName; // Size=4 Offset=36
} *PtagFINDREPLACEA;
typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA // Size=32
{
    unsigned long cbSize; // Size=4 Offset=0
    char * pszUsageIdentifier; // Size=4 Offset=4
    unsigned long dwKeySpec; // Size=4 Offset=8
    unsigned long dwAcquirePrivateKeyFlags; // Size=4 Offset=12
    unsigned long cIssuer; // Size=4 Offset=16
    struct _CRYPTOAPI_BLOB * rgIssuer; // Size=4 Offset=20
    int ( * pfnFindCallback)(struct _CERT_CONTEXT *,void *); // Size=4 Offset=24
    void * pvFindArg; // Size=4 Offset=28
} CERT_CHAIN_FIND_BY_ISSUER_PARA, *PCERT_CHAIN_FIND_BY_ISSUER_PARA;
typedef struct _CONSOLE_SCREEN_BUFFER_INFO // Size=22
{
    struct _COORD dwSize; // Size=4 Offset=0
    struct _COORD dwCursorPosition; // Size=4 Offset=4
    unsigned short wAttributes; // Size=2 Offset=8
    struct _SMALL_RECT srWindow; // Size=8 Offset=10
    struct _COORD dwMaximumWindowSize; // Size=4 Offset=18
} CONSOLE_SCREEN_BUFFER_INFO, *PCONSOLE_SCREEN_BUFFER_INFO;
typedef struct _s__CatchableType // Size=28
{
    unsigned int properties; // Size=4 Offset=0
    struct _TypeDescriptor * pType; // Size=4 Offset=4
    struct _PMD thisDisplacement; // Size=12 Offset=8
    int sizeOrOffset; // Size=4 Offset=20
    void ( * copyFunction)(); // Size=4 Offset=24
} s__CatchableType, *Ps__CatchableType;
typedef struct _CTL_VERIFY_USAGE_STATUS // Size=28
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwError; // Size=4 Offset=4
    unsigned long dwFlags; // Size=4 Offset=8
    struct _CTL_CONTEXT * * ppCtl; // Size=4 Offset=12
    unsigned long dwCtlEntryIndex; // Size=4 Offset=16
    struct _CERT_CONTEXT * * ppSigner; // Size=4 Offset=20
    unsigned long dwSignerIndex; // Size=4 Offset=24
} CTL_VERIFY_USAGE_STATUS, *PCTL_VERIFY_USAGE_STATUS;
typedef struct tagEMRFILLRGN // Size=36
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long cbRgnData; // Size=4 Offset=24
    unsigned long ihBrush; // Size=4 Offset=28
    unsigned char RgnData[1]; // Size=1 Offset=32
} *PtagEMRFILLRGN;
typedef struct tagMIXERCONTROLW // Size=228
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwControlID; // Size=4 Offset=4
    unsigned long dwControlType; // Size=4 Offset=8
    unsigned long fdwControl; // Size=4 Offset=12
    unsigned long cMultipleItems; // Size=4 Offset=16
    unsigned short szShortName[16]; // Size=32 Offset=20
    unsigned short szName[64]; // Size=128 Offset=52
    union tagMIXERCONTROLW::___unnamed361 Bounds; // Size=24 Offset=180
    union tagMIXERCONTROLW::___unnamed362 Metrics; // Size=24 Offset=204
} *PtagMIXERCONTROLW;
typedef struct _TAPE_STATISTICS // Size=48
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    union _LARGE_INTEGER RecoveredWrites; // Size=8 Offset=8
    union _LARGE_INTEGER UnrecoveredWrites; // Size=8 Offset=16
    union _LARGE_INTEGER RecoveredReads; // Size=8 Offset=24
    union _LARGE_INTEGER UnrecoveredReads; // Size=8 Offset=32
    unsigned char CompressionRatioReads; // Size=1 Offset=40
    unsigned char CompressionRatioWrites; // Size=1 Offset=41
} TAPE_STATISTICS, *PTAPE_STATISTICS;
typedef struct tagEMREXCLUDECLIPRECT // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclClip; // Size=16 Offset=8
} *PtagEMREXCLUDECLIPRECT;
typedef struct _CHANGER_EXCHANGE_MEDIUM // Size=36
{
    struct _CHANGER_ELEMENT Transport; // Size=8 Offset=0
    struct _CHANGER_ELEMENT Source; // Size=8 Offset=8
    struct _CHANGER_ELEMENT Destination1; // Size=8 Offset=16
    struct _CHANGER_ELEMENT Destination2; // Size=8 Offset=24
    unsigned char Flip1; // Size=1 Offset=32
    unsigned char Flip2; // Size=1 Offset=33
} CHANGER_EXCHANGE_MEDIUM, *PCHANGER_EXCHANGE_MEDIUM;
typedef struct _CERT_ALT_NAME_ENTRY // Size=12
{
    unsigned long dwAltNameChoice; // Size=4 Offset=0
    union
    {
        struct _CERT_OTHER_NAME * pOtherName; // Size=4 Offset=4
        unsigned short * pwszRfc822Name; // Size=4 Offset=4
        unsigned short * pwszDNSName; // Size=4 Offset=4
        struct _CRYPTOAPI_BLOB DirectoryName; // Size=8 Offset=4
        unsigned short * pwszURL; // Size=4 Offset=4
        struct _CRYPTOAPI_BLOB IPAddress; // Size=8 Offset=4
        char * pszRegisteredID; // Size=4 Offset=4
    };
} CERT_ALT_NAME_ENTRY, *PCERT_ALT_NAME_ENTRY;
typedef struct _userHENHMETAFILE // Size=16
{
    long fContext; // Size=4 Offset=0
    union _userHENHMETAFILE::__MIDL_IWinTypes_0006 u; // Size=8 Offset=8
} userHENHMETAFILE, *PuserHENHMETAFILE;
typedef struct _CMC_TAGGED_ATTRIBUTE // Size=16
{
    unsigned long dwBodyPartID; // Size=4 Offset=0
    struct _CRYPT_ATTRIBUTE Attribute; // Size=12 Offset=4
} CMC_TAGGED_ATTRIBUTE, *PCMC_TAGGED_ATTRIBUTE;
typedef struct tagOFN_NT4W // Size=76
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    unsigned short * lpstrFilter; // Size=4 Offset=12
    unsigned short * lpstrCustomFilter; // Size=4 Offset=16
    unsigned long nMaxCustFilter; // Size=4 Offset=20
    unsigned long nFilterIndex; // Size=4 Offset=24
    unsigned short * lpstrFile; // Size=4 Offset=28
    unsigned long nMaxFile; // Size=4 Offset=32
    unsigned short * lpstrFileTitle; // Size=4 Offset=36
    unsigned long nMaxFileTitle; // Size=4 Offset=40
    unsigned short * lpstrInitialDir; // Size=4 Offset=44
    unsigned short * lpstrTitle; // Size=4 Offset=48
    unsigned long Flags; // Size=4 Offset=52
    unsigned short nFileOffset; // Size=2 Offset=56
    unsigned short nFileExtension; // Size=2 Offset=58
    unsigned short * lpstrDefExt; // Size=4 Offset=60
    long lCustData; // Size=4 Offset=64
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=68
    unsigned short * lpTemplateName; // Size=4 Offset=72
} *PtagOFN_NT4W;
typedef struct CM_Power_Data_s // Size=56
{
    unsigned long PD_Size; // Size=4 Offset=0
    enum _DEVICE_POWER_STATE PD_MostRecentPowerState; // Size=4 Offset=4
    unsigned long PD_Capabilities; // Size=4 Offset=8
    unsigned long PD_D1Latency; // Size=4 Offset=12
    unsigned long PD_D2Latency; // Size=4 Offset=16
    unsigned long PD_D3Latency; // Size=4 Offset=20
    enum _DEVICE_POWER_STATE PD_PowerStateMapping[7]; // Size=28 Offset=24
    enum _SYSTEM_POWER_STATE PD_DeepestSystemWake; // Size=4 Offset=52
} *PCM_Power_Data_s;
typedef struct BITMAPV5HEADER // Size=124
{
    unsigned long bV5Size; // Size=4 Offset=0
    long bV5Width; // Size=4 Offset=4
    long bV5Height; // Size=4 Offset=8
    unsigned short bV5Planes; // Size=2 Offset=12
    unsigned short bV5BitCount; // Size=2 Offset=14
    unsigned long bV5Compression; // Size=4 Offset=16
    unsigned long bV5SizeImage; // Size=4 Offset=20
    long bV5XPelsPerMeter; // Size=4 Offset=24
    long bV5YPelsPerMeter; // Size=4 Offset=28
    unsigned long bV5ClrUsed; // Size=4 Offset=32
    unsigned long bV5ClrImportant; // Size=4 Offset=36
    unsigned long bV5RedMask; // Size=4 Offset=40
    unsigned long bV5GreenMask; // Size=4 Offset=44
    unsigned long bV5BlueMask; // Size=4 Offset=48
    unsigned long bV5AlphaMask; // Size=4 Offset=52
    unsigned long bV5CSType; // Size=4 Offset=56
    struct tagICEXYZTRIPLE bV5Endpoints; // Size=36 Offset=60
    unsigned long bV5GammaRed; // Size=4 Offset=96
    unsigned long bV5GammaGreen; // Size=4 Offset=100
    unsigned long bV5GammaBlue; // Size=4 Offset=104
    unsigned long bV5Intent; // Size=4 Offset=108
    unsigned long bV5ProfileData; // Size=4 Offset=112
    unsigned long bV5ProfileSize; // Size=4 Offset=116
    unsigned long bV5Reserved; // Size=4 Offset=120
} *PBITMAPV5HEADER;
typedef struct tagBITMAPCOREINFO // Size=16
{
    struct tagBITMAPCOREHEADER bmciHeader; // Size=12 Offset=0
    struct tagRGBTRIPLE bmciColors[1]; // Size=3 Offset=12
} *PtagBITMAPCOREINFO;
typedef struct tagEMRFILLPATH // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
} *PtagEMRFILLPATH;
typedef struct _CHANGER_SET_ACCESS // Size=12
{
    struct _CHANGER_ELEMENT Element; // Size=8 Offset=0
    unsigned long Control; // Size=4 Offset=8
} CHANGER_SET_ACCESS, *PCHANGER_SET_ACCESS;
typedef struct _WSAPROTOCOL_INFOA // Size=372
{
    unsigned long dwServiceFlags1; // Size=4 Offset=0
    unsigned long dwServiceFlags2; // Size=4 Offset=4
    unsigned long dwServiceFlags3; // Size=4 Offset=8
    unsigned long dwServiceFlags4; // Size=4 Offset=12
    unsigned long dwProviderFlags; // Size=4 Offset=16
    struct _GUID ProviderId; // Size=16 Offset=20
    unsigned long dwCatalogEntryId; // Size=4 Offset=36
    struct _WSAPROTOCOLCHAIN ProtocolChain; // Size=32 Offset=40
    int iVersion; // Size=4 Offset=72
    int iAddressFamily; // Size=4 Offset=76
    int iMaxSockAddr; // Size=4 Offset=80
    int iMinSockAddr; // Size=4 Offset=84
    int iSocketType; // Size=4 Offset=88
    int iProtocol; // Size=4 Offset=92
    int iProtocolMaxOffset; // Size=4 Offset=96
    int iNetworkByteOrder; // Size=4 Offset=100
    int iSecurityScheme; // Size=4 Offset=104
    unsigned long dwMessageSize; // Size=4 Offset=108
    unsigned long dwProviderReserved; // Size=4 Offset=112
    char szProtocol[256]; // Size=256 Offset=116
} WSAPROTOCOL_INFOA, *PWSAPROTOCOL_INFOA;
typedef union _LDT_ENTRY::__unnamed // Size=4
{
    struct _LDT_ENTRY::___unnamed442::___unnamed442 Bytes; // Size=4 Offset=0
    struct _LDT_ENTRY::___unnamed443::___unnamed443 Bits; // Size=4 Offset=0
} LDT_ENTRY::__unnamed, *PLDT_ENTRY::__unnamed;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION // Size=48
{
    union _LARGE_INTEGER PerProcessUserTimeLimit; // Size=8 Offset=0
    union _LARGE_INTEGER PerJobUserTimeLimit; // Size=8 Offset=8
    unsigned long LimitFlags; // Size=4 Offset=16
    unsigned long MinimumWorkingSetSize; // Size=4 Offset=20
    unsigned long MaximumWorkingSetSize; // Size=4 Offset=24
    unsigned long ActiveProcessLimit; // Size=4 Offset=28
    unsigned long Affinity; // Size=4 Offset=32
    unsigned long PriorityClass; // Size=4 Offset=36
    unsigned long SchedulingClass; // Size=4 Offset=40
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct tagMSGBOXPARAMSA // Size=40
{
    unsigned int cbSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    char * lpszText; // Size=4 Offset=12
    char * lpszCaption; // Size=4 Offset=16
    unsigned long dwStyle; // Size=4 Offset=20
    char * lpszIcon; // Size=4 Offset=24
    unsigned long dwContextHelpId; // Size=4 Offset=28
    void ( * lpfnMsgBoxCallback)(struct tagHELPINFO *); // Size=4 Offset=32
    unsigned long dwLanguageId; // Size=4 Offset=36
} *PtagMSGBOXPARAMSA;
typedef struct _FORM_INFO_1W // Size=32
{
    unsigned long Flags; // Size=4 Offset=0
    unsigned short * pName; // Size=4 Offset=4
    struct tagSIZE Size; // Size=8 Offset=8
    struct _RECTL ImageableArea; // Size=16 Offset=16
} FORM_INFO_1W, *PFORM_INFO_1W;
typedef struct tagEMRSETVIEWPORTEXTEX // Size=16
{
    struct tagEMR emr; // Size=8 Offset=0
    struct tagSIZE szlExtent; // Size=8 Offset=8
} *PtagEMRSETVIEWPORTEXTEX;
typedef struct tagCOMBOBOXINFO // Size=52
{
    unsigned long cbSize; // Size=4 Offset=0
    struct tagRECT rcItem; // Size=16 Offset=4
    struct tagRECT rcButton; // Size=16 Offset=20
    unsigned long stateButton; // Size=4 Offset=36
    struct HWND__ * hwndCombo; // Size=4 Offset=40
    struct HWND__ * hwndItem; // Size=4 Offset=44
    struct HWND__ * hwndList; // Size=4 Offset=48
} *PtagCOMBOBOXINFO;
typedef struct _s__RTTICompleteObjectLocator // Size=20
{
    unsigned long signature; // Size=4 Offset=0
    unsigned long offset; // Size=4 Offset=4
    unsigned long cdOffset; // Size=4 Offset=8
    struct _TypeDescriptor * pTypeDescriptor; // Size=4 Offset=12
    struct _s__RTTIClassHierarchyDescriptor * pClassDescriptor; // Size=4 Offset=16
} s__RTTICompleteObjectLocator, *Ps__RTTICompleteObjectLocator;
typedef struct _IMAGE_AUX_SYMBOL::__unnamed // Size=18
{
    unsigned long TagIndex; // Size=4 Offset=0
    union _IMAGE_AUX_SYMBOL::___unnamed524::___unnamed524 Misc; // Size=4 Offset=4
    union _IMAGE_AUX_SYMBOL::___unnamed528::___unnamed528 FcnAry; // Size=8 Offset=8
    unsigned short TvIndex; // Size=2 Offset=16
} IMAGE_AUX_SYMBOL::__unnamed, *PIMAGE_AUX_SYMBOL::__unnamed;
typedef struct tagEMRMODIFYWORLDTRANSFORM // Size=36
{
    struct tagEMR emr; // Size=8 Offset=0
    struct tagXFORM xform; // Size=24 Offset=8
    unsigned long iMode; // Size=4 Offset=32
} *PtagEMRMODIFYWORLDTRANSFORM;
typedef struct tagEXTLOGFONTA // Size=192
{
    struct tagLOGFONTA elfLogFont; // Size=60 Offset=0
    unsigned char elfFullName[64]; // Size=64 Offset=60
    unsigned char elfStyle[32]; // Size=32 Offset=124
    unsigned long elfVersion; // Size=4 Offset=156
    unsigned long elfStyleSize; // Size=4 Offset=160
    unsigned long elfMatch; // Size=4 Offset=164
    unsigned long elfReserved; // Size=4 Offset=168
    unsigned char elfVendorId[4]; // Size=4 Offset=172
    unsigned long elfCulture; // Size=4 Offset=176
    struct tagPANOSE elfPanose; // Size=10 Offset=180
} *PtagEXTLOGFONTA;
typedef struct tagMENUITEMINFOA // Size=48
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned int fMask; // Size=4 Offset=4
    unsigned int fType; // Size=4 Offset=8
    unsigned int fState; // Size=4 Offset=12
    unsigned int wID; // Size=4 Offset=16
    struct HMENU__ * hSubMenu; // Size=4 Offset=20
    struct HBITMAP__ * hbmpChecked; // Size=4 Offset=24
    struct HBITMAP__ * hbmpUnchecked; // Size=4 Offset=28
    unsigned long dwItemData; // Size=4 Offset=32
    char * dwTypeData; // Size=4 Offset=36
    unsigned int cch; // Size=4 Offset=40
    struct HBITMAP__ * hbmpItem; // Size=4 Offset=44
} *PtagMENUITEMINFOA;
typedef struct tagLOGCOLORSPACEW // Size=588
{
    unsigned long lcsSignature; // Size=4 Offset=0
    unsigned long lcsVersion; // Size=4 Offset=4
    unsigned long lcsSize; // Size=4 Offset=8
    long lcsCSType; // Size=4 Offset=12
    long lcsIntent; // Size=4 Offset=16
    struct tagICEXYZTRIPLE lcsEndpoints; // Size=36 Offset=20
    unsigned long lcsGammaRed; // Size=4 Offset=56
    unsigned long lcsGammaGreen; // Size=4 Offset=60
    unsigned long lcsGammaBlue; // Size=4 Offset=64
    unsigned short lcsFilename[260]; // Size=520 Offset=68
} *PtagLOGCOLORSPACEW;
typedef struct tagEMRLINETO // Size=16
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _POINTL ptl; // Size=8 Offset=8
} *PtagEMRLINETO;
typedef struct _MMIOINFO // Size=72
{
    unsigned long dwFlags; // Size=4 Offset=0
    unsigned long fccIOProc; // Size=4 Offset=4
    long ( * pIOProc)(char *,unsigned int,long,long); // Size=4 Offset=8
    unsigned int wErrorRet; // Size=4 Offset=12
    struct HTASK__ * htask; // Size=4 Offset=16
    long cchBuffer; // Size=4 Offset=20
    char * pchBuffer; // Size=4 Offset=24
    char * pchNext; // Size=4 Offset=28
    char * pchEndRead; // Size=4 Offset=32
    char * pchEndWrite; // Size=4 Offset=36
    long lBufOffset; // Size=4 Offset=40
    long lDiskOffset; // Size=4 Offset=44
    unsigned long adwInfo[3]; // Size=12 Offset=48
    unsigned long dwReserved1; // Size=4 Offset=60
    unsigned long dwReserved2; // Size=4 Offset=64
    struct HMMIO__ * hmmio; // Size=4 Offset=68
} MMIOINFO, *PMMIOINFO;
typedef struct _JOB_INFO_2A // Size=104
{
    unsigned long JobId; // Size=4 Offset=0
    char * pPrinterName; // Size=4 Offset=4
    char * pMachineName; // Size=4 Offset=8
    char * pUserName; // Size=4 Offset=12
    char * pDocument; // Size=4 Offset=16
    char * pNotifyName; // Size=4 Offset=20
    char * pDatatype; // Size=4 Offset=24
    char * pPrintProcessor; // Size=4 Offset=28
    char * pParameters; // Size=4 Offset=32
    char * pDriverName; // Size=4 Offset=36
    struct _devicemodeA * pDevMode; // Size=4 Offset=40
    char * pStatus; // Size=4 Offset=44
    void * pSecurityDescriptor; // Size=4 Offset=48
    unsigned long Status; // Size=4 Offset=52
    unsigned long Priority; // Size=4 Offset=56
    unsigned long Position; // Size=4 Offset=60
    unsigned long StartTime; // Size=4 Offset=64
    unsigned long UntilTime; // Size=4 Offset=68
    unsigned long TotalPages; // Size=4 Offset=72
    unsigned long Size; // Size=4 Offset=76
    struct _SYSTEMTIME Submitted; // Size=16 Offset=80
    unsigned long Time; // Size=4 Offset=96
    unsigned long PagesPrinted; // Size=4 Offset=100
} JOB_INFO_2A, *PJOB_INFO_2A;
typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO // Size=20
{
    unsigned long cCertPolicyId; // Size=4 Offset=0
    struct _CERT_POLICY_ID * rgCertPolicyId; // Size=4 Offset=4
    struct _CRYPT_BIT_BLOB RestrictedKeyUsage; // Size=12 Offset=8
} CERT_KEY_USAGE_RESTRICTION_INFO, *PCERT_KEY_USAGE_RESTRICTION_INFO;
typedef struct _RPC_SYNTAX_IDENTIFIER // Size=20
{
    struct _GUID SyntaxGUID; // Size=16 Offset=0
    struct _RPC_VERSION SyntaxVersion; // Size=4 Offset=16
} RPC_SYNTAX_IDENTIFIER, *PRPC_SYNTAX_IDENTIFIER;
typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE // Size=48
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
    struct _GUID ObjectType; // Size=16 Offset=12
    struct _GUID InheritedObjectType; // Size=16 Offset=28
    unsigned long SidStart; // Size=4 Offset=44
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
typedef struct tagEMRSETDIBITSTODEVICE // Size=76
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    long xDest; // Size=4 Offset=24
    long yDest; // Size=4 Offset=28
    long xSrc; // Size=4 Offset=32
    long ySrc; // Size=4 Offset=36
    long cxSrc; // Size=4 Offset=40
    long cySrc; // Size=4 Offset=44
    unsigned long offBmiSrc; // Size=4 Offset=48
    unsigned long cbBmiSrc; // Size=4 Offset=52
    unsigned long offBitsSrc; // Size=4 Offset=56
    unsigned long cbBitsSrc; // Size=4 Offset=60
    unsigned long iUsageSrc; // Size=4 Offset=64
    unsigned long iStartScan; // Size=4 Offset=68
    unsigned long cScans; // Size=4 Offset=72
} *PtagEMRSETDIBITSTODEVICE;
typedef struct tagMONCONVSTRUCT // Size=32
{
    unsigned int cb; // Size=4 Offset=0
    int fConnect; // Size=4 Offset=4
    unsigned long dwTime; // Size=4 Offset=8
    void * hTask; // Size=4 Offset=12
    struct HSZ__ * hszSvc; // Size=4 Offset=16
    struct HSZ__ * hszTopic; // Size=4 Offset=20
    struct HCONV__ * hConvClient; // Size=4 Offset=24
    struct HCONV__ * hConvServer; // Size=4 Offset=28
} *PtagMONCONVSTRUCT;
typedef struct _ACCESS_ALLOWED_OBJECT_ACE // Size=48
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
    struct _GUID ObjectType; // Size=16 Offset=12
    struct _GUID InheritedObjectType; // Size=16 Offset=28
    unsigned long SidStart; // Size=4 Offset=44
} ACCESS_ALLOWED_OBJECT_ACE, *PACCESS_ALLOWED_OBJECT_ACE;
typedef class MSG_CG2Z_ANS_DERBY_INFO // Size=8119
{
    class MSG_S2S_HEADER MsgHeader; // Size=4 Offset=0
    int iDerbyIndex; // Size=4 Offset=4
    int iDerbyTickCount; // Size=4 Offset=8
    struct _DERBY_MONSTER_INFO_EX_ dmiEntryList[5]; // Size=70 Offset=12
    unsigned char byRaceType; // Size=1 Offset=82
    int nVCurvePoint; // Size=4 Offset=83
    float fVCurve[70]; // Size=280 Offset=87
    struct _DERBY_HISTORY_INFO_ dhiHistory[480]; // Size=7680 Offset=367
    int recentHistoryIndex; // Size=4 Offset=8047
    int recentLoggedDerbyIndex; // Size=4 Offset=8051
    unsigned int iBetTotal[15]; // Size=60 Offset=8055
    float fReturnRatio; // Size=4 Offset=8115
} *PMSG_CG2Z_ANS_DERBY_INFO;
typedef struct _QUOTA_LIMITS // Size=32
{
    unsigned long PagedPoolLimit; // Size=4 Offset=0
    unsigned long NonPagedPoolLimit; // Size=4 Offset=4
    unsigned long MinimumWorkingSetSize; // Size=4 Offset=8
    unsigned long MaximumWorkingSetSize; // Size=4 Offset=12
    unsigned long PagefileLimit; // Size=4 Offset=16
    union _LARGE_INTEGER TimeLimit; // Size=8 Offset=24
} QUOTA_LIMITS, *PQUOTA_LIMITS;
typedef struct _GET_MEDIA_TYPES // Size=40
{
    unsigned long DeviceType; // Size=4 Offset=0
    unsigned long MediaInfoCount; // Size=4 Offset=4
    struct _DEVICE_MEDIA_INFO MediaInfo[1]; // Size=32 Offset=8
} GET_MEDIA_TYPES, *PGET_MEDIA_TYPES;
typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION // Size=88
{
    unsigned long ulFlags; // Size=4 Offset=0
    unsigned long ulEncodedAssemblyIdentityLength; // Size=4 Offset=4
    unsigned long ulManifestPathType; // Size=4 Offset=8
    unsigned long ulManifestPathLength; // Size=4 Offset=12
    union _LARGE_INTEGER liManifestLastWriteTime; // Size=8 Offset=16
    unsigned long ulPolicyPathType; // Size=4 Offset=24
    unsigned long ulPolicyPathLength; // Size=4 Offset=28
    union _LARGE_INTEGER liPolicyLastWriteTime; // Size=8 Offset=32
    unsigned long ulMetadataSatelliteRosterIndex; // Size=4 Offset=40
    unsigned long ulManifestVersionMajor; // Size=4 Offset=44
    unsigned long ulManifestVersionMinor; // Size=4 Offset=48
    unsigned long ulPolicyVersionMajor; // Size=4 Offset=52
    unsigned long ulPolicyVersionMinor; // Size=4 Offset=56
    unsigned long ulAssemblyDirectoryNameLength; // Size=4 Offset=60
    unsigned short * lpAssemblyEncodedAssemblyIdentity; // Size=4 Offset=64
    unsigned short * lpAssemblyManifestPath; // Size=4 Offset=68
    unsigned short * lpAssemblyPolicyPath; // Size=4 Offset=72
    unsigned short * lpAssemblyDirectoryName; // Size=4 Offset=76
    unsigned long ulFileCount; // Size=4 Offset=80
} ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
typedef struct tagDROPSTRUCT // Size=28
{
    struct HWND__ * hwndSource; // Size=4 Offset=0
    struct HWND__ * hwndSink; // Size=4 Offset=4
    unsigned long wFmt; // Size=4 Offset=8
    unsigned long dwData; // Size=4 Offset=12
    struct tagPOINT ptDrop; // Size=8 Offset=16
    unsigned long dwControlData; // Size=4 Offset=24
} *PtagDROPSTRUCT;
typedef struct tagCONVCONTEXT // Size=36
{
    unsigned int cb; // Size=4 Offset=0
    unsigned int wFlags; // Size=4 Offset=4
    unsigned int wCountryID; // Size=4 Offset=8
    int iCodePage; // Size=4 Offset=12
    unsigned long dwLangID; // Size=4 Offset=16
    unsigned long dwSecurity; // Size=4 Offset=20
    struct _SECURITY_QUALITY_OF_SERVICE qos; // Size=12 Offset=24
} *PtagCONVCONTEXT;
typedef struct _ENCRYPTION_CERTIFICATE // Size=12
{
    unsigned long cbTotalLength; // Size=4 Offset=0
    struct _SID * pUserSid; // Size=4 Offset=4
    struct _CERTIFICATE_BLOB * pCertBlob; // Size=4 Offset=8
} ENCRYPTION_CERTIFICATE, *PENCRYPTION_CERTIFICATE;
typedef struct tagOFN_NT4A // Size=76
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    char * lpstrFilter; // Size=4 Offset=12
    char * lpstrCustomFilter; // Size=4 Offset=16
    unsigned long nMaxCustFilter; // Size=4 Offset=20
    unsigned long nFilterIndex; // Size=4 Offset=24
    char * lpstrFile; // Size=4 Offset=28
    unsigned long nMaxFile; // Size=4 Offset=32
    char * lpstrFileTitle; // Size=4 Offset=36
    unsigned long nMaxFileTitle; // Size=4 Offset=40
    char * lpstrInitialDir; // Size=4 Offset=44
    char * lpstrTitle; // Size=4 Offset=48
    unsigned long Flags; // Size=4 Offset=52
    unsigned short nFileOffset; // Size=2 Offset=56
    unsigned short nFileExtension; // Size=2 Offset=58
    char * lpstrDefExt; // Size=4 Offset=60
    long lCustData; // Size=4 Offset=64
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=68
    char * lpTemplateName; // Size=4 Offset=72
} *PtagOFN_NT4A;
typedef struct tagEMRTEXT // Size=40
{
    struct _POINTL ptlReference; // Size=8 Offset=0
    unsigned long nChars; // Size=4 Offset=8
    unsigned long offString; // Size=4 Offset=12
    unsigned long fOptions; // Size=4 Offset=16
    struct _RECTL rcl; // Size=16 Offset=20
    unsigned long offDx; // Size=4 Offset=36
} *PtagEMRTEXT;
typedef struct tagEMRSTRETCHDIBITS // Size=80
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    long xDest; // Size=4 Offset=24
    long yDest; // Size=4 Offset=28
    long xSrc; // Size=4 Offset=32
    long ySrc; // Size=4 Offset=36
    long cxSrc; // Size=4 Offset=40
    long cySrc; // Size=4 Offset=44
    unsigned long offBmiSrc; // Size=4 Offset=48
    unsigned long cbBmiSrc; // Size=4 Offset=52
    unsigned long offBitsSrc; // Size=4 Offset=56
    unsigned long cbBitsSrc; // Size=4 Offset=60
    unsigned long iUsageSrc; // Size=4 Offset=64
    unsigned long dwRop; // Size=4 Offset=68
    long cxDest; // Size=4 Offset=72
    long cyDest; // Size=4 Offset=76
} *PtagEMRSTRETCHDIBITS;
typedef struct tagSTATPROPSETSTG // Size=64
{
    struct _GUID fmtid; // Size=16 Offset=0
    struct _GUID clsid; // Size=16 Offset=16
    unsigned long grfFlags; // Size=4 Offset=32
    struct _FILETIME mtime; // Size=8 Offset=36
    struct _FILETIME ctime; // Size=8 Offset=44
    struct _FILETIME atime; // Size=8 Offset=52
    unsigned long dwOSVersion; // Size=4 Offset=60
} *PtagSTATPROPSETSTG;
typedef struct _CERT_CRL_CONTEXT_PAIR // Size=8
{
    struct _CERT_CONTEXT * pCertContext; // Size=4 Offset=0
    struct _CRL_CONTEXT * pCrlContext; // Size=4 Offset=4
} CERT_CRL_CONTEXT_PAIR, *PCERT_CRL_CONTEXT_PAIR;
typedef struct sockaddr_in // Size=16
{
    short sin_family; // Size=2 Offset=0
    unsigned short sin_port; // Size=2 Offset=2
    struct in_addr sin_addr; // Size=4 Offset=4
    char sin_zero[8]; // Size=8 Offset=8
} *Psockaddr_in;
typedef struct BITMAPV4HEADER // Size=108
{
    unsigned long bV4Size; // Size=4 Offset=0
    long bV4Width; // Size=4 Offset=4
    long bV4Height; // Size=4 Offset=8
    unsigned short bV4Planes; // Size=2 Offset=12
    unsigned short bV4BitCount; // Size=2 Offset=14
    unsigned long bV4V4Compression; // Size=4 Offset=16
    unsigned long bV4SizeImage; // Size=4 Offset=20
    long bV4XPelsPerMeter; // Size=4 Offset=24
    long bV4YPelsPerMeter; // Size=4 Offset=28
    unsigned long bV4ClrUsed; // Size=4 Offset=32
    unsigned long bV4ClrImportant; // Size=4 Offset=36
    unsigned long bV4RedMask; // Size=4 Offset=40
    unsigned long bV4GreenMask; // Size=4 Offset=44
    unsigned long bV4BlueMask; // Size=4 Offset=48
    unsigned long bV4AlphaMask; // Size=4 Offset=52
    unsigned long bV4CSType; // Size=4 Offset=56
    struct tagICEXYZTRIPLE bV4Endpoints; // Size=36 Offset=60
    unsigned long bV4GammaRed; // Size=4 Offset=96
    unsigned long bV4GammaGreen; // Size=4 Offset=100
    unsigned long bV4GammaBlue; // Size=4 Offset=104
} *PBITMAPV4HEADER;
typedef struct _CHANGER_ELEMENT_STATUS_EX // Size=156
{
    struct _CHANGER_ELEMENT Element; // Size=8 Offset=0
    struct _CHANGER_ELEMENT SrcElementAddress; // Size=8 Offset=8
    unsigned long Flags; // Size=4 Offset=16
    unsigned long ExceptionCode; // Size=4 Offset=20
    unsigned char TargetId; // Size=1 Offset=24
    unsigned char Lun; // Size=1 Offset=25
    unsigned short Reserved; // Size=2 Offset=26
    unsigned char PrimaryVolumeID[36]; // Size=36 Offset=28
    unsigned char AlternateVolumeID[36]; // Size=36 Offset=64
    unsigned char VendorIdentification[8]; // Size=8 Offset=100
    unsigned char ProductIdentification[16]; // Size=16 Offset=108
    unsigned char SerialNumber[32]; // Size=32 Offset=124
} CHANGER_ELEMENT_STATUS_EX, *PCHANGER_ELEMENT_STATUS_EX;
typedef struct _CERT_X942_DH_PARAMETERS // Size=36
{
    struct _CRYPTOAPI_BLOB p; // Size=8 Offset=0
    struct _CRYPTOAPI_BLOB g; // Size=8 Offset=8
    struct _CRYPTOAPI_BLOB q; // Size=8 Offset=16
    struct _CRYPTOAPI_BLOB j; // Size=8 Offset=24
    struct _CERT_X942_DH_VALIDATION_PARAMS * pValidationParams; // Size=4 Offset=32
} CERT_X942_DH_PARAMETERS, *PCERT_X942_DH_PARAMETERS;
typedef struct tagMSG // Size=28
{
    struct HWND__ * hwnd; // Size=4 Offset=0
    unsigned int message; // Size=4 Offset=4
    unsigned int wParam; // Size=4 Offset=8
    long lParam; // Size=4 Offset=12
    unsigned long time; // Size=4 Offset=16
    struct tagPOINT pt; // Size=8 Offset=20
} *PtagMSG;
typedef struct tagGUITHREADINFO // Size=48
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long flags; // Size=4 Offset=4
    struct HWND__ * hwndActive; // Size=4 Offset=8
    struct HWND__ * hwndFocus; // Size=4 Offset=12
    struct HWND__ * hwndCapture; // Size=4 Offset=16
    struct HWND__ * hwndMenuOwner; // Size=4 Offset=20
    struct HWND__ * hwndMoveSize; // Size=4 Offset=24
    struct HWND__ * hwndCaret; // Size=4 Offset=28
    struct tagRECT rcCaret; // Size=16 Offset=32
} *PtagGUITHREADINFO;
typedef struct tagPAINTSTRUCT // Size=64
{
    struct HDC__ * hdc; // Size=4 Offset=0
    int fErase; // Size=4 Offset=4
    struct tagRECT rcPaint; // Size=16 Offset=8
    int fRestore; // Size=4 Offset=24
    int fIncUpdate; // Size=4 Offset=28
    unsigned char rgbReserved[32]; // Size=32 Offset=32
} *PtagPAINTSTRUCT;
typedef struct _SYSTEM_ALARM_OBJECT_ACE // Size=48
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
    struct _GUID ObjectType; // Size=16 Offset=12
    struct _GUID InheritedObjectType; // Size=16 Offset=28
    unsigned long SidStart; // Size=4 Offset=44
} SYSTEM_ALARM_OBJECT_ACE, *PSYSTEM_ALARM_OBJECT_ACE;
typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE // Size=48
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
    struct _GUID ObjectType; // Size=16 Offset=12
    struct _GUID InheritedObjectType; // Size=16 Offset=28
    unsigned long SidStart; // Size=4 Offset=44
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
typedef struct _CMSG_ENCRYPTED_ENCODE_INFO // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm; // Size=12 Offset=4
    void * pvEncryptionAuxInfo; // Size=4 Offset=16
} CMSG_ENCRYPTED_ENCODE_INFO, *PCMSG_ENCRYPTED_ENCODE_INFO;
typedef struct _PARTITION_INFORMATION // Size=32
{
    union _LARGE_INTEGER StartingOffset; // Size=8 Offset=0
    union _LARGE_INTEGER PartitionLength; // Size=8 Offset=8
    unsigned long HiddenSectors; // Size=4 Offset=16
    unsigned long PartitionNumber; // Size=4 Offset=20
    unsigned char PartitionType; // Size=1 Offset=24
    unsigned char BootIndicator; // Size=1 Offset=25
    unsigned char RecognizedPartition; // Size=1 Offset=26
    unsigned char RewritePartition; // Size=1 Offset=27
} PARTITION_INFORMATION, *PPARTITION_INFORMATION;
typedef struct tagEMRINVERTRGN // Size=32
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long cbRgnData; // Size=4 Offset=24
    unsigned char RgnData[1]; // Size=1 Offset=28
} *PtagEMRINVERTRGN;
typedef struct tagBITMAPINFO // Size=44
{
    struct tagBITMAPINFOHEADER bmiHeader; // Size=40 Offset=0
    struct tagRGBQUAD bmiColors[1]; // Size=4 Offset=40
} *PtagBITMAPINFO;
typedef struct _BIDI_RESPONSE_DATA // Size=24
{
    unsigned long dwResult; // Size=4 Offset=0
    unsigned long dwReqNumber; // Size=4 Offset=4
    unsigned short * pSchema; // Size=4 Offset=8
    struct _BIDI_DATA data; // Size=12 Offset=12
} BIDI_RESPONSE_DATA, *PBIDI_RESPONSE_DATA;
typedef struct _CERT_REVOCATION_PARA // Size=24
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CERT_CONTEXT * pIssuerCert; // Size=4 Offset=4
    unsigned long cCertStore; // Size=4 Offset=8
    void * * rgCertStore; // Size=4 Offset=12
    void * hCrlStore; // Size=4 Offset=16
    struct _FILETIME * pftTimeToUse; // Size=4 Offset=20
} CERT_REVOCATION_PARA, *PCERT_REVOCATION_PARA;
typedef struct _DISK_RECORD // Size=40
{
    union _LARGE_INTEGER ByteOffset; // Size=8 Offset=0
    union _LARGE_INTEGER StartTime; // Size=8 Offset=8
    union _LARGE_INTEGER EndTime; // Size=8 Offset=16
    void * VirtualAddress; // Size=4 Offset=24
    unsigned long NumberOfBytes; // Size=4 Offset=28
    unsigned char DeviceNumber; // Size=1 Offset=32
    unsigned char ReadRequest; // Size=1 Offset=33
} DISK_RECORD, *PDISK_RECORD;
typedef struct _IMAGE_ROM_HEADERS // Size=76
{
    struct _IMAGE_FILE_HEADER FileHeader; // Size=20 Offset=0
    struct _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader; // Size=56 Offset=20
} IMAGE_ROM_HEADERS, *PIMAGE_ROM_HEADERS;
typedef struct _CHANGER_ELEMENT_LIST // Size=12
{
    struct _CHANGER_ELEMENT Element; // Size=8 Offset=0
    unsigned long NumberOfElements; // Size=4 Offset=8
} CHANGER_ELEMENT_LIST, *PCHANGER_ELEMENT_LIST;
typedef struct tagEMRANGLEARC // Size=28
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _POINTL ptlCenter; // Size=8 Offset=8
    unsigned long nRadius; // Size=4 Offset=16
    float eStartAngle; // Size=4 Offset=20
    float eSweepAngle; // Size=4 Offset=24
} *PtagEMRANGLEARC;
typedef struct tagCANDIDATEFORM // Size=32
{
    unsigned long dwIndex; // Size=4 Offset=0
    unsigned long dwStyle; // Size=4 Offset=4
    struct tagPOINT ptCurrentPos; // Size=8 Offset=8
    struct tagRECT rcArea; // Size=16 Offset=16
} *PtagCANDIDATEFORM;
typedef struct _TAPE_SET_POSITION // Size=24
{
    unsigned long Method; // Size=4 Offset=0
    unsigned long Partition; // Size=4 Offset=4
    union _LARGE_INTEGER Offset; // Size=8 Offset=8
    unsigned char Immediate; // Size=1 Offset=16
} TAPE_SET_POSITION, *PTAPE_SET_POSITION;
typedef struct _CONNECTDLGSTRUCTA // Size=20
{
    unsigned long cbStructure; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct _NETRESOURCEA * lpConnRes; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
    unsigned long dwDevNum; // Size=4 Offset=16
} CONNECTDLGSTRUCTA, *PCONNECTDLGSTRUCTA;
typedef struct _CTL_ENTRY // Size=16
{
    struct _CRYPTOAPI_BLOB SubjectIdentifier; // Size=8 Offset=0
    unsigned long cAttribute; // Size=4 Offset=8
    struct _CRYPT_ATTRIBUTE * rgAttribute; // Size=4 Offset=12
} CTL_ENTRY, *PCTL_ENTRY;
typedef struct _EXCEPTION_DEBUG_INFO // Size=84
{
    struct _EXCEPTION_RECORD ExceptionRecord; // Size=80 Offset=0
    unsigned long dwFirstChance; // Size=4 Offset=80
} EXCEPTION_DEBUG_INFO, *PEXCEPTION_DEBUG_INFO;
typedef struct tagNEWTEXTMETRICEXA // Size=96
{
    struct tagNEWTEXTMETRICA ntmTm; // Size=72 Offset=0
    struct tagFONTSIGNATURE ntmFontSig; // Size=24 Offset=72
} *PtagNEWTEXTMETRICEXA;
typedef struct tagTYPEDESC // Size=8
{
    union
    {
        struct tagTYPEDESC * lptdesc; // Size=4 Offset=0
        struct tagARRAYDESC * lpadesc; // Size=4 Offset=0
        unsigned long hreftype; // Size=4 Offset=0
    };
    unsigned short vt; // Size=2 Offset=4
} *PtagTYPEDESC;
typedef struct _SOCKET_ADDRESS_LIST // Size=12
{
    int iAddressCount; // Size=4 Offset=0
    struct _SOCKET_ADDRESS Address[1]; // Size=8 Offset=4
} SOCKET_ADDRESS_LIST, *PSOCKET_ADDRESS_LIST;
typedef struct _EXCEPTION_POINTERS // Size=8
{
    struct _EXCEPTION_RECORD * ExceptionRecord; // Size=4 Offset=0
    struct _CONTEXT * ContextRecord; // Size=4 Offset=4
} EXCEPTION_POINTERS, *PEXCEPTION_POINTERS;
typedef struct _FORM_INFO_1A // Size=32
{
    unsigned long Flags; // Size=4 Offset=0
    char * pName; // Size=4 Offset=4
    struct tagSIZE Size; // Size=8 Offset=8
    struct _RECTL ImageableArea; // Size=16 Offset=16
} FORM_INFO_1A, *PFORM_INFO_1A;
typedef struct _userHMETAFILE // Size=16
{
    long fContext; // Size=4 Offset=0
    union _userHMETAFILE::__MIDL_IWinTypes_0004 u; // Size=8 Offset=8
} userHMETAFILE, *PuserHMETAFILE;
typedef struct tagMOUSEHOOKSTRUCT // Size=20
{
    struct tagPOINT pt; // Size=8 Offset=0
    struct HWND__ * hwnd; // Size=4 Offset=8
    unsigned int wHitTestCode; // Size=4 Offset=12
    unsigned long dwExtraInfo; // Size=4 Offset=16
} *PtagMOUSEHOOKSTRUCT;
typedef struct tagMIXERCONTROLA // Size=148
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned long dwControlID; // Size=4 Offset=4
    unsigned long dwControlType; // Size=4 Offset=8
    unsigned long fdwControl; // Size=4 Offset=12
    unsigned long cMultipleItems; // Size=4 Offset=16
    char szShortName[16]; // Size=16 Offset=20
    char szName[64]; // Size=64 Offset=36
    union tagMIXERCONTROLA::___unnamed1257 Bounds; // Size=24 Offset=100
    union tagMIXERCONTROLA::___unnamed1258 Metrics; // Size=24 Offset=124
} *PtagMIXERCONTROLA;
typedef struct tagMONMSGSTRUCT // Size=72
{
    unsigned int cb; // Size=4 Offset=0
    struct HWND__ * hwndTo; // Size=4 Offset=4
    unsigned long dwTime; // Size=4 Offset=8
    void * hTask; // Size=4 Offset=12
    unsigned int wMsg; // Size=4 Offset=16
    unsigned int wParam; // Size=4 Offset=20
    long lParam; // Size=4 Offset=24
    struct tagDDEML_MSG_HOOK_DATA dmhd; // Size=44 Offset=28
} *PtagMONMSGSTRUCT;
typedef struct _PSHNOTIFY // Size=16
{
    struct tagNMHDR hdr; // Size=12 Offset=0
    long lParam; // Size=4 Offset=12
} PSHNOTIFY, *PPSHNOTIFY;
typedef struct _TOKEN_PRIVILEGES // Size=16
{
    unsigned long PrivilegeCount; // Size=4 Offset=0
    struct _LUID_AND_ATTRIBUTES Privileges[1]; // Size=12 Offset=4
} TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION // Size=20
{
    unsigned long SecurityLimitFlags; // Size=4 Offset=0
    void * JobToken; // Size=4 Offset=4
    struct _TOKEN_GROUPS * SidsToDisable; // Size=4 Offset=8
    struct _TOKEN_PRIVILEGES * PrivilegesToDelete; // Size=4 Offset=12
    struct _TOKEN_GROUPS * RestrictedSids; // Size=4 Offset=16
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION;
typedef struct _userHPALETTE // Size=16
{
    long fContext; // Size=4 Offset=0
    union _userHPALETTE::__MIDL_IWinTypes_0008 u; // Size=8 Offset=8
} userHPALETTE, *PuserHPALETTE;
typedef struct _DISK_EXTENT // Size=24
{
    unsigned long DiskNumber; // Size=4 Offset=0
    union _LARGE_INTEGER StartingOffset; // Size=8 Offset=8
    union _LARGE_INTEGER ExtentLength; // Size=8 Offset=16
} DISK_EXTENT, *PDISK_EXTENT;
typedef struct _wireSAFEARR_HAVEIID // Size=24
{
    unsigned long Size; // Size=4 Offset=0
    struct IUnknown * * apUnknown; // Size=4 Offset=4
    struct _GUID iid; // Size=16 Offset=8
} wireSAFEARR_HAVEIID, *PwireSAFEARR_HAVEIID;
typedef struct _WSAPROTOCOL_INFOW // Size=628
{
    unsigned long dwServiceFlags1; // Size=4 Offset=0
    unsigned long dwServiceFlags2; // Size=4 Offset=4
    unsigned long dwServiceFlags3; // Size=4 Offset=8
    unsigned long dwServiceFlags4; // Size=4 Offset=12
    unsigned long dwProviderFlags; // Size=4 Offset=16
    struct _GUID ProviderId; // Size=16 Offset=20
    unsigned long dwCatalogEntryId; // Size=4 Offset=36
    struct _WSAPROTOCOLCHAIN ProtocolChain; // Size=32 Offset=40
    int iVersion; // Size=4 Offset=72
    int iAddressFamily; // Size=4 Offset=76
    int iMaxSockAddr; // Size=4 Offset=80
    int iMinSockAddr; // Size=4 Offset=84
    int iSocketType; // Size=4 Offset=88
    int iProtocol; // Size=4 Offset=92
    int iProtocolMaxOffset; // Size=4 Offset=96
    int iNetworkByteOrder; // Size=4 Offset=100
    int iSecurityScheme; // Size=4 Offset=104
    unsigned long dwMessageSize; // Size=4 Offset=108
    unsigned long dwProviderReserved; // Size=4 Offset=112
    unsigned short szProtocol[256]; // Size=512 Offset=116
} WSAPROTOCOL_INFOW, *PWSAPROTOCOL_INFOW;
typedef struct tagEMRSETWORLDTRANSFORM // Size=32
{
    struct tagEMR emr; // Size=8 Offset=0
    struct tagXFORM xform; // Size=24 Offset=8
} *PtagEMRSETWORLDTRANSFORM;
typedef struct _CRL_DIST_POINT_NAME // Size=12
{
    unsigned long dwDistPointNameChoice; // Size=4 Offset=0
    struct _CERT_ALT_NAME_INFO FullName; // Size=8 Offset=4
} CRL_DIST_POINT_NAME, *PCRL_DIST_POINT_NAME;
typedef struct tagINTERFACEINFO // Size=24
{
    struct IUnknown * pUnk; // Size=4 Offset=0
    struct _GUID iid; // Size=16 Offset=4
    unsigned short wMethod; // Size=2 Offset=20
} *PtagINTERFACEINFO;
typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE // Size=48
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
    struct _GUID ObjectType; // Size=16 Offset=12
    struct _GUID InheritedObjectType; // Size=16 Offset=28
    unsigned long SidStart; // Size=4 Offset=44
} ACCESS_DENIED_CALLBACK_OBJECT_ACE, *PACCESS_DENIED_CALLBACK_OBJECT_ACE;
typedef struct tagEMRELLIPSE // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBox; // Size=16 Offset=8
} *PtagEMRELLIPSE;
typedef struct tagENHMETAHEADER // Size=108
{
    unsigned long iType; // Size=4 Offset=0
    unsigned long nSize; // Size=4 Offset=4
    struct _RECTL rclBounds; // Size=16 Offset=8
    struct _RECTL rclFrame; // Size=16 Offset=24
    unsigned long dSignature; // Size=4 Offset=40
    unsigned long nVersion; // Size=4 Offset=44
    unsigned long nBytes; // Size=4 Offset=48
    unsigned long nRecords; // Size=4 Offset=52
    unsigned short nHandles; // Size=2 Offset=56
    unsigned short sReserved; // Size=2 Offset=58
    unsigned long nDescription; // Size=4 Offset=60
    unsigned long offDescription; // Size=4 Offset=64
    unsigned long nPalEntries; // Size=4 Offset=68
    struct tagSIZE szlDevice; // Size=8 Offset=72
    struct tagSIZE szlMillimeters; // Size=8 Offset=80
    unsigned long cbPixelFormat; // Size=4 Offset=88
    unsigned long offPixelFormat; // Size=4 Offset=92
    unsigned long bOpenGL; // Size=4 Offset=96
    struct tagSIZE szlMicrometers; // Size=8 Offset=100
} *PtagENHMETAHEADER;
typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA // Size=36
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    unsigned long dwKeySpec; // Size=4 Offset=8
    struct _CMSG_KEY_AGREE_RECIPIENT_INFO * pKeyAgree; // Size=4 Offset=12
    unsigned long dwRecipientIndex; // Size=4 Offset=16
    unsigned long dwRecipientEncryptedKeyIndex; // Size=4 Offset=20
    struct _CRYPT_BIT_BLOB OriginatorPublicKey; // Size=12 Offset=24
} CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
typedef struct _PRINTER_NOTIFY_INFO // Size=32
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long Count; // Size=4 Offset=8
    struct _PRINTER_NOTIFY_INFO_DATA aData[1]; // Size=20 Offset=12
} PRINTER_NOTIFY_INFO, *PPRINTER_NOTIFY_INFO;
typedef struct _s__RTTIBaseClassDescriptor // Size=24
{
    struct _TypeDescriptor * pTypeDescriptor; // Size=4 Offset=0
    unsigned long numContainedBases; // Size=4 Offset=4
    struct _PMD where; // Size=12 Offset=8
    unsigned long attributes; // Size=4 Offset=20
} s__RTTIBaseClassDescriptor, *Ps__RTTIBaseClassDescriptor;
typedef struct _CERT_REVOCATION_CRL_INFO // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CRL_CONTEXT * pBaseCrlContext; // Size=4 Offset=4
    struct _CRL_CONTEXT * pDeltaCrlContext; // Size=4 Offset=8
    struct _CRL_ENTRY * pCrlEntry; // Size=4 Offset=12
    int fDeltaCrlEntry; // Size=4 Offset=16
} CERT_REVOCATION_CRL_INFO, *PCERT_REVOCATION_CRL_INFO;
typedef struct _userFLAG_STGMEDIUM // Size=12
{
    long ContextFlags; // Size=4 Offset=0
    long fPassOwnership; // Size=4 Offset=4
    struct _userSTGMEDIUM Stgmed; // Size=4 Offset=8
} userFLAG_STGMEDIUM, *PuserFLAG_STGMEDIUM;
typedef struct OPENCARDNAMEW // Size=92
{
    unsigned long dwStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    unsigned long hSCardContext; // Size=4 Offset=8
    unsigned short * lpstrGroupNames; // Size=4 Offset=12
    unsigned long nMaxGroupNames; // Size=4 Offset=16
    unsigned short * lpstrCardNames; // Size=4 Offset=20
    unsigned long nMaxCardNames; // Size=4 Offset=24
    struct _GUID * rgguidInterfaces; // Size=4 Offset=28
    unsigned long cguidInterfaces; // Size=4 Offset=32
    unsigned short * lpstrRdr; // Size=4 Offset=36
    unsigned long nMaxRdr; // Size=4 Offset=40
    unsigned short * lpstrCard; // Size=4 Offset=44
    unsigned long nMaxCard; // Size=4 Offset=48
    unsigned short * lpstrTitle; // Size=4 Offset=52
    unsigned long dwFlags; // Size=4 Offset=56
    void * pvUserData; // Size=4 Offset=60
    unsigned long dwShareMode; // Size=4 Offset=64
    unsigned long dwPreferredProtocols; // Size=4 Offset=68
    unsigned long dwActiveProtocol; // Size=4 Offset=72
    unsigned long ( * lpfnConnect)(unsigned long,unsigned short *,unsigned short *,void *); // Size=4 Offset=76
    int ( * lpfnCheck)(unsigned long,unsigned long,void *); // Size=4 Offset=80
    void ( * lpfnDisconnect)(unsigned long,unsigned long,void *); // Size=4 Offset=84
    unsigned long hCardHandle; // Size=4 Offset=88
} *POPENCARDNAMEW;
typedef struct _BIDI_REQUEST_DATA // Size=20
{
    unsigned long dwReqNumber; // Size=4 Offset=0
    unsigned short * pSchema; // Size=4 Offset=4
    struct _BIDI_DATA data; // Size=12 Offset=8
} BIDI_REQUEST_DATA, *PBIDI_REQUEST_DATA;
typedef struct tagFINDREPLACEW // Size=40
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    unsigned long Flags; // Size=4 Offset=12
    unsigned short * lpstrFindWhat; // Size=4 Offset=16
    unsigned short * lpstrReplaceWith; // Size=4 Offset=20
    unsigned short wFindWhatLen; // Size=2 Offset=24
    unsigned short wReplaceWithLen; // Size=2 Offset=26
    long lCustData; // Size=4 Offset=28
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=32
    unsigned short * lpTemplateName; // Size=4 Offset=36
} *PtagFINDREPLACEW;
typedef struct _QualityOfService // Size=72
{
    struct _flowspec SendingFlowspec; // Size=32 Offset=0
    struct _flowspec ReceivingFlowspec; // Size=32 Offset=32
    struct _WSABUF ProviderSpecific; // Size=8 Offset=64
} QualityOfService, *PQualityOfService;
typedef struct _CRYPT_HASH_MESSAGE_PARA // Size=28
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwMsgEncodingType; // Size=4 Offset=4
    unsigned long hCryptProv; // Size=4 Offset=8
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm; // Size=12 Offset=12
    void * pvHashAuxInfo; // Size=4 Offset=24
} CRYPT_HASH_MESSAGE_PARA, *PCRYPT_HASH_MESSAGE_PARA;
typedef struct _CERT_BASIC_CONSTRAINTS_INFO // Size=28
{
    struct _CRYPT_BIT_BLOB SubjectType; // Size=12 Offset=0
    int fPathLenConstraint; // Size=4 Offset=12
    unsigned long dwPathLenConstraint; // Size=4 Offset=16
    unsigned long cSubtreesConstraint; // Size=4 Offset=20
    struct _CRYPTOAPI_BLOB * rgSubtreesConstraint; // Size=4 Offset=24
} CERT_BASIC_CONSTRAINTS_INFO, *PCERT_BASIC_CONSTRAINTS_INFO;
typedef struct _WSAServiceClassInfoW // Size=16
{
    struct _GUID * lpServiceClassId; // Size=4 Offset=0
    unsigned short * lpszServiceClassName; // Size=4 Offset=4
    unsigned long dwCount; // Size=4 Offset=8
    struct _WSANSClassInfoW * lpClassInfos; // Size=4 Offset=12
} WSAServiceClassInfoW, *PWSAServiceClassInfoW;
typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE // Size=48
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
    struct _GUID ObjectType; // Size=16 Offset=12
    struct _GUID InheritedObjectType; // Size=16 Offset=28
    unsigned long SidStart; // Size=4 Offset=44
} SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;
typedef struct tagMSGBOXPARAMSW // Size=40
{
    unsigned int cbSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    unsigned short * lpszText; // Size=4 Offset=12
    unsigned short * lpszCaption; // Size=4 Offset=16
    unsigned long dwStyle; // Size=4 Offset=20
    unsigned short * lpszIcon; // Size=4 Offset=24
    unsigned long dwContextHelpId; // Size=4 Offset=28
    void ( * lpfnMsgBoxCallback)(struct tagHELPINFO *); // Size=4 Offset=32
    unsigned long dwLanguageId; // Size=4 Offset=36
} *PtagMSGBOXPARAMSW;
typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO // Size=24
{
    char * pszTimeStampAlgorithm; // Size=4 Offset=0
    char * pszContentType; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB Content; // Size=8 Offset=8
    unsigned long cAttribute; // Size=4 Offset=16
    struct _CRYPT_ATTRIBUTE * rgAttribute; // Size=4 Offset=20
} CRYPT_TIME_STAMP_REQUEST_INFO, *PCRYPT_TIME_STAMP_REQUEST_INFO;
typedef struct _WSAServiceClassInfoA // Size=16
{
    struct _GUID * lpServiceClassId; // Size=4 Offset=0
    char * lpszServiceClassName; // Size=4 Offset=4
    unsigned long dwCount; // Size=4 Offset=8
    struct _WSANSClassInfoA * lpClassInfos; // Size=4 Offset=12
} WSAServiceClassInfoA, *PWSAServiceClassInfoA;
typedef struct tagCBT_CREATEWNDW // Size=8
{
    struct tagCREATESTRUCTW * lpcs; // Size=4 Offset=0
    struct HWND__ * hwndInsertAfter; // Size=4 Offset=4
} *PtagCBT_CREATEWNDW;
typedef struct _NT_TIB // Size=28
{
    struct _EXCEPTION_REGISTRATION_RECORD * ExceptionList; // Size=4 Offset=0
    void * StackBase; // Size=4 Offset=4
    void * StackLimit; // Size=4 Offset=8
    void * SubSystemTib; // Size=4 Offset=12
    union
    {
        void * FiberData; // Size=4 Offset=16
        unsigned long Version; // Size=4 Offset=16
    };
    void * ArbitraryUserPointer; // Size=4 Offset=20
    struct _NT_TIB * Self; // Size=4 Offset=24
} NT_TIB, *PNT_TIB;
typedef struct tagWINDOWPLACEMENT // Size=44
{
    unsigned int length; // Size=4 Offset=0
    unsigned int flags; // Size=4 Offset=4
    unsigned int showCmd; // Size=4 Offset=8
    struct tagPOINT ptMinPosition; // Size=8 Offset=12
    struct tagPOINT ptMaxPosition; // Size=8 Offset=20
    struct tagRECT rcNormalPosition; // Size=16 Offset=28
} *PtagWINDOWPLACEMENT;
typedef struct _CHANGER_MOVE_MEDIUM // Size=28
{
    struct _CHANGER_ELEMENT Transport; // Size=8 Offset=0
    struct _CHANGER_ELEMENT Source; // Size=8 Offset=8
    struct _CHANGER_ELEMENT Destination; // Size=8 Offset=16
    unsigned char Flip; // Size=1 Offset=24
} CHANGER_MOVE_MEDIUM, *PCHANGER_MOVE_MEDIUM;
typedef struct tagMULTI_QI // Size=12
{
    struct _GUID * pIID; // Size=4 Offset=0
    struct IUnknown * pItf; // Size=4 Offset=4
    HRESULT hr; // Size=4 Offset=8
} *PtagMULTI_QI;
typedef struct tagMENUITEMINFOW // Size=48
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned int fMask; // Size=4 Offset=4
    unsigned int fType; // Size=4 Offset=8
    unsigned int fState; // Size=4 Offset=12
    unsigned int wID; // Size=4 Offset=16
    struct HMENU__ * hSubMenu; // Size=4 Offset=20
    struct HBITMAP__ * hbmpChecked; // Size=4 Offset=24
    struct HBITMAP__ * hbmpUnchecked; // Size=4 Offset=28
    unsigned long dwItemData; // Size=4 Offset=32
    unsigned short * dwTypeData; // Size=4 Offset=36
    unsigned int cch; // Size=4 Offset=40
    struct HBITMAP__ * hbmpItem; // Size=4 Offset=44
} *PtagMENUITEMINFOW;
typedef struct _BIN_RANGE // Size=16
{
    union _LARGE_INTEGER StartValue; // Size=8 Offset=0
    union _LARGE_INTEGER Length; // Size=8 Offset=8
} BIN_RANGE, *PBIN_RANGE;
typedef struct _CRYPT_VERIFY_MESSAGE_PARA // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwMsgAndCertEncodingType; // Size=4 Offset=4
    unsigned long hCryptProv; // Size=4 Offset=8
    struct _CERT_CONTEXT * ( * pfnGetSignerCertificate)(void *,unsigned long,struct _CERT_INFO *,void *); // Size=4 Offset=12
    void * pvGetArg; // Size=4 Offset=16
} CRYPT_VERIFY_MESSAGE_PARA, *PCRYPT_VERIFY_MESSAGE_PARA;
typedef struct _CMSG_SIGNED_ENCODE_INFO // Size=28
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long cSigners; // Size=4 Offset=4
    struct _CMSG_SIGNER_ENCODE_INFO * rgSigners; // Size=4 Offset=8
    unsigned long cCertEncoded; // Size=4 Offset=12
    struct _CRYPTOAPI_BLOB * rgCertEncoded; // Size=4 Offset=16
    unsigned long cCrlEncoded; // Size=4 Offset=20
    struct _CRYPTOAPI_BLOB * rgCrlEncoded; // Size=4 Offset=24
} CMSG_SIGNED_ENCODE_INFO, *PCMSG_SIGNED_ENCODE_INFO;
typedef struct tagEMREXTCREATEPEN // Size=56
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihPen; // Size=4 Offset=8
    unsigned long offBmi; // Size=4 Offset=12
    unsigned long cbBmi; // Size=4 Offset=16
    unsigned long offBits; // Size=4 Offset=20
    unsigned long cbBits; // Size=4 Offset=24
    struct tagEXTLOGPEN elp; // Size=28 Offset=28
} *PtagEMREXTCREATEPEN;
typedef struct tagVersionedStream // Size=20
{
    struct _GUID guidVersion; // Size=16 Offset=0
    struct IStream * pStream; // Size=4 Offset=16
} *PtagVersionedStream;
typedef struct _CONNECTDLGSTRUCTW // Size=20
{
    unsigned long cbStructure; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct _NETRESOURCEW * lpConnRes; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
    unsigned long dwDevNum; // Size=4 Offset=16
} CONNECTDLGSTRUCTW, *PCONNECTDLGSTRUCTW;
typedef struct tagNCCALCSIZE_PARAMS // Size=52
{
    struct tagRECT rgrc[3]; // Size=48 Offset=0
    struct tagWINDOWPOS * lppos; // Size=4 Offset=48
} *PtagNCCALCSIZE_PARAMS;
typedef struct _WSACOMPLETION // Size=16
{
    enum _WSACOMPLETIONTYPE Type; // Size=4 Offset=0
    union _WSACOMPLETION::___unnamed1716 Parameters; // Size=12 Offset=4
} WSACOMPLETION, *PWSACOMPLETION;
typedef struct _CERT_CHAIN_PARA // Size=16
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CERT_USAGE_MATCH RequestedUsage; // Size=12 Offset=4
} CERT_CHAIN_PARA, *PCERT_CHAIN_PARA;
typedef struct tagIMECHARPOSITION // Size=36
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwCharPos; // Size=4 Offset=4
    struct tagPOINT pt; // Size=8 Offset=8
    unsigned int cLineHeight; // Size=4 Offset=16
    struct tagRECT rcDocument; // Size=16 Offset=20
} *PtagIMECHARPOSITION;
typedef union _SLIST_HEADER // Size=8
{
    unsigned __int64 Alignment; // Size=8 Offset=0
    struct
    {
        struct _SINGLE_LIST_ENTRY Next; // Size=4 Offset=0
        unsigned short Depth; // Size=2 Offset=4
        unsigned short Sequence; // Size=2 Offset=6
    };
} SLIST_HEADER, *PSLIST_HEADER;
typedef struct tagCURSORINFO // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long flags; // Size=4 Offset=4
    struct HICON__ * hCursor; // Size=4 Offset=8
    struct tagPOINT ptScreenPos; // Size=8 Offset=12
} *PtagCURSORINFO;
typedef union mmtime_tag::__unnamed // Size=8
{
    unsigned long ms; // Size=4 Offset=0
    unsigned long sample; // Size=4 Offset=0
    unsigned long cb; // Size=4 Offset=0
    unsigned long ticks; // Size=4 Offset=0
    struct mmtime_tag::___unnamed1755::___unnamed1755 smpte; // Size=8 Offset=0
    struct mmtime_tag::___unnamed1756::___unnamed1756 midi; // Size=4 Offset=0
} *Pmmtime_tag::__unnamed;
typedef struct tagTTPOLYGONHEADER // Size=16
{
    unsigned long cb; // Size=4 Offset=0
    unsigned long dwType; // Size=4 Offset=4
    struct tagPOINTFX pfxStart; // Size=8 Offset=8
} *PtagTTPOLYGONHEADER;
typedef struct _userHBITMAP // Size=16
{
    long fContext; // Size=4 Offset=0
    union _userHBITMAP::__MIDL_IWinTypes_0007 u; // Size=8 Offset=8
} userHBITMAP, *PuserHBITMAP;
typedef struct _CHANGER_ELEMENT_STATUS // Size=100
{
    struct _CHANGER_ELEMENT Element; // Size=8 Offset=0
    struct _CHANGER_ELEMENT SrcElementAddress; // Size=8 Offset=8
    unsigned long Flags; // Size=4 Offset=16
    unsigned long ExceptionCode; // Size=4 Offset=20
    unsigned char TargetId; // Size=1 Offset=24
    unsigned char Lun; // Size=1 Offset=25
    unsigned short Reserved; // Size=2 Offset=26
    unsigned char PrimaryVolumeID[36]; // Size=36 Offset=28
    unsigned char AlternateVolumeID[36]; // Size=36 Offset=64
} CHANGER_ELEMENT_STATUS, *PCHANGER_ELEMENT_STATUS;
typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA // Size=44
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwMsgAndCertEncodingType; // Size=4 Offset=4
    unsigned long hCryptProv; // Size=4 Offset=8
    unsigned long dwKeySpec; // Size=4 Offset=12
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm; // Size=12 Offset=16
    void * pvHashAuxInfo; // Size=4 Offset=28
    struct _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm; // Size=12 Offset=32
} CRYPT_KEY_SIGN_MESSAGE_PARA, *PCRYPT_KEY_SIGN_MESSAGE_PARA;
typedef struct _CMSG_HASHED_ENCODE_INFO // Size=24
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm; // Size=12 Offset=8
    void * pvHashAuxInfo; // Size=4 Offset=20
} CMSG_HASHED_ENCODE_INFO, *PCMSG_HASHED_ENCODE_INFO;
typedef struct _ENCRYPTION_CERTIFICATE_HASH // Size=16
{
    unsigned long cbTotalLength; // Size=4 Offset=0
    struct _SID * pUserSid; // Size=4 Offset=4
    struct _EFS_HASH_BLOB * pHash; // Size=4 Offset=8
    unsigned short * lpDisplayInformation; // Size=4 Offset=12
} ENCRYPTION_CERTIFICATE_HASH, *PENCRYPTION_CERTIFICATE_HASH;
typedef struct tagRPC_EE_INFO_PARAM // Size=16
{
    enum tagExtendedErrorParamTypes ParameterType; // Size=4 Offset=0
    union tagRPC_EE_INFO_PARAM::___unnamed1828 u; // Size=8 Offset=8
} *PtagRPC_EE_INFO_PARAM;
typedef struct tagStorageLayout // Size=24
{
    unsigned long LayoutType; // Size=4 Offset=0
    unsigned short * pwcsElementName; // Size=4 Offset=4
    union _LARGE_INTEGER cOffset; // Size=8 Offset=8
    union _LARGE_INTEGER cBytes; // Size=8 Offset=16
} *PtagStorageLayout;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION // Size=48
{
    union _LARGE_INTEGER TotalUserTime; // Size=8 Offset=0
    union _LARGE_INTEGER TotalKernelTime; // Size=8 Offset=8
    union _LARGE_INTEGER ThisPeriodTotalUserTime; // Size=8 Offset=16
    union _LARGE_INTEGER ThisPeriodTotalKernelTime; // Size=8 Offset=24
    unsigned long TotalPageFaultCount; // Size=4 Offset=32
    unsigned long TotalProcesses; // Size=4 Offset=36
    unsigned long ActiveProcesses; // Size=4 Offset=40
    unsigned long TotalTerminatedProcesses; // Size=4 Offset=44
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef struct tagEMRCREATEBRUSHINDIRECT // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihBrush; // Size=4 Offset=8
    struct tagLOGBRUSH32 lb; // Size=12 Offset=12
} *PtagEMRCREATEBRUSHINDIRECT;
typedef union in_addr::__unnamed // Size=4
{
    struct in_addr::___unnamed1853::___unnamed1853 S_un_b; // Size=4 Offset=0
    struct in_addr::___unnamed1854::___unnamed1854 S_un_w; // Size=4 Offset=0
    unsigned long S_addr; // Size=4 Offset=0
} *Pin_addr::__unnamed;
typedef struct _PRIVILEGE_SET // Size=20
{
    unsigned long PrivilegeCount; // Size=4 Offset=0
    unsigned long Control; // Size=4 Offset=4
    struct _LUID_AND_ATTRIBUTES Privilege[1]; // Size=12 Offset=8
} PRIVILEGE_SET, *PPRIVILEGE_SET;
typedef struct _TAPE_GET_POSITION // Size=16
{
    unsigned long Type; // Size=4 Offset=0
    unsigned long Partition; // Size=4 Offset=4
    union _LARGE_INTEGER Offset; // Size=8 Offset=8
} TAPE_GET_POSITION, *PTAPE_GET_POSITION;
typedef struct _CRYPT_PKCS8_EXPORT_PARAMS // Size=20
{
    unsigned long hCryptProv; // Size=4 Offset=0
    unsigned long dwKeySpec; // Size=4 Offset=4
    char * pszPrivateKeyObjId; // Size=4 Offset=8
    int ( * pEncryptPrivateKeyFunc)(struct _CRYPT_ALGORITHM_IDENTIFIER *,struct _CRYPTOAPI_BLOB *,unsigned char *,unsigned long *,void *); // Size=4 Offset=12
    void * pVoidEncryptFunc; // Size=4 Offset=16
} CRYPT_PKCS8_EXPORT_PARAMS, *PCRYPT_PKCS8_EXPORT_PARAMS;
typedef struct _VERIFY_INFORMATION // Size=16
{
    union _LARGE_INTEGER StartingOffset; // Size=8 Offset=0
    unsigned long Length; // Size=4 Offset=8
} VERIFY_INFORMATION, *PVERIFY_INFORMATION;
typedef struct tagEMRSETPIXELV // Size=20
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _POINTL ptlPixel; // Size=8 Offset=8
    unsigned long crColor; // Size=4 Offset=16
} *PtagEMRSETPIXELV;
typedef struct tagLOGCOLORSPACEA // Size=328
{
    unsigned long lcsSignature; // Size=4 Offset=0
    unsigned long lcsVersion; // Size=4 Offset=4
    unsigned long lcsSize; // Size=4 Offset=8
    long lcsCSType; // Size=4 Offset=12
    long lcsIntent; // Size=4 Offset=16
    struct tagICEXYZTRIPLE lcsEndpoints; // Size=36 Offset=20
    unsigned long lcsGammaRed; // Size=4 Offset=56
    unsigned long lcsGammaGreen; // Size=4 Offset=60
    unsigned long lcsGammaBlue; // Size=4 Offset=64
    char lcsFilename[260]; // Size=260 Offset=68
} *PtagLOGCOLORSPACEA;
typedef struct _CPS_URLS // Size=12
{
    unsigned short * pszURL; // Size=4 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER * pAlgorithm; // Size=4 Offset=4
    struct _CRYPTOAPI_BLOB * pDigest; // Size=4 Offset=8
} CPS_URLS, *PCPS_URLS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS // Size=32
{
    union _LARGE_INTEGER Capacity; // Size=8 Offset=0
    union _LARGE_INTEGER Remaining; // Size=8 Offset=8
    unsigned long BlockSize; // Size=4 Offset=16
    unsigned long PartitionCount; // Size=4 Offset=20
    unsigned char WriteProtected; // Size=1 Offset=24
} TAPE_GET_MEDIA_PARAMETERS, *PTAPE_GET_MEDIA_PARAMETERS;
typedef struct _userHMETAFILEPICT // Size=16
{
    long fContext; // Size=4 Offset=0
    union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u; // Size=8 Offset=8
} userHMETAFILEPICT, *PuserHMETAFILEPICT;
typedef struct tagDIBSECTION // Size=84
{
    struct tagBITMAP dsBm; // Size=24 Offset=0
    struct tagBITMAPINFOHEADER dsBmih; // Size=40 Offset=24
    unsigned long dsBitfields[3]; // Size=12 Offset=64
    void * dshSection; // Size=4 Offset=76
    unsigned long dsOffset; // Size=4 Offset=80
} *PtagDIBSECTION;
typedef struct _WIN32_STREAM_ID // Size=24
{
    unsigned long dwStreamId; // Size=4 Offset=0
    unsigned long dwStreamAttributes; // Size=4 Offset=4
    union _LARGE_INTEGER Size; // Size=8 Offset=8
    unsigned long dwStreamNameSize; // Size=4 Offset=16
    unsigned short cStreamName[1]; // Size=2 Offset=20
} WIN32_STREAM_ID, *PWIN32_STREAM_ID;
typedef struct _CERT_TRUST_LIST_INFO // Size=12
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CTL_ENTRY * pCtlEntry; // Size=4 Offset=4
    struct _CTL_CONTEXT * pCtlContext; // Size=4 Offset=8
} CERT_TRUST_LIST_INFO, *PCERT_TRUST_LIST_INFO;
typedef struct _ACCESS_DENIED_OBJECT_ACE // Size=48
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
    struct _GUID ObjectType; // Size=16 Offset=12
    struct _GUID InheritedObjectType; // Size=16 Offset=28
    unsigned long SidStart; // Size=4 Offset=44
} ACCESS_DENIED_OBJECT_ACE, *PACCESS_DENIED_OBJECT_ACE;
typedef struct _NOTIFYICONDATAW // Size=152
{
    unsigned long cbSize; // Size=4 Offset=0
    struct HWND__ * hWnd; // Size=4 Offset=4
    unsigned int uID; // Size=4 Offset=8
    unsigned int uFlags; // Size=4 Offset=12
    unsigned int uCallbackMessage; // Size=4 Offset=16
    struct HICON__ * hIcon; // Size=4 Offset=20
    unsigned short szTip[64]; // Size=128 Offset=24
} NOTIFYICONDATAW, *PNOTIFYICONDATAW;
typedef struct tagEMRSETCOLORADJUSTMENT // Size=32
{
    struct tagEMR emr; // Size=8 Offset=0
    struct tagCOLORADJUSTMENT ColorAdjustment; // Size=24 Offset=8
} *PtagEMRSETCOLORADJUSTMENT;
typedef struct _NDR_USER_MARSHAL_INFO // Size=44
{
    unsigned long InformationLevel; // Size=4 Offset=0
    struct _NDR_USER_MARSHAL_INFO_LEVEL1 Level1; // Size=40 Offset=4
} NDR_USER_MARSHAL_INFO, *PNDR_USER_MARSHAL_INFO;
typedef struct tagEMRSETVIEWPORTORGEX // Size=16
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _POINTL ptlOrigin; // Size=8 Offset=8
} *PtagEMRSETVIEWPORTORGEX;
typedef struct _RGNDATA // Size=36
{
    struct _RGNDATAHEADER rdh; // Size=32 Offset=0
    char Buffer[1]; // Size=1 Offset=32
} RGNDATA, *PRGNDATA;
typedef struct _CMC_PEND_INFO // Size=16
{
    struct _CRYPTOAPI_BLOB PendToken; // Size=8 Offset=0
    struct _FILETIME PendTime; // Size=8 Offset=8
} CMC_PEND_INFO, *PCMC_PEND_INFO;
typedef union tagRPC_EXTENDED_ERROR_INFO::__unnamed // Size=16
{
    struct _SYSTEMTIME SystemTime; // Size=16 Offset=0
    struct _FILETIME FileTime; // Size=8 Offset=0
} *PtagRPC_EXTENDED_ERROR_INFO::__unnamed;
typedef struct tagEMRPIXELFORMAT // Size=48
{
    struct tagEMR emr; // Size=8 Offset=0
    struct tagPIXELFORMATDESCRIPTOR pfd; // Size=40 Offset=8
} *PtagEMRPIXELFORMAT;
typedef struct tagTLIBATTR // Size=32
{
    struct _GUID guid; // Size=16 Offset=0
    unsigned long lcid; // Size=4 Offset=16
    enum tagSYSKIND syskind; // Size=4 Offset=20
    unsigned short wMajorVerNum; // Size=2 Offset=24
    unsigned short wMinorVerNum; // Size=2 Offset=26
    unsigned short wLibFlags; // Size=2 Offset=28
} *PtagTLIBATTR;
typedef struct SHELLHOOKINFO // Size=20
{
    struct HWND__ * hwnd; // Size=4 Offset=0
    struct tagRECT rc; // Size=16 Offset=4
} *PSHELLHOOKINFO;
typedef struct _SYSTEM_AUDIT_OBJECT_ACE // Size=48
{
    struct _ACE_HEADER Header; // Size=4 Offset=0
    unsigned long Mask; // Size=4 Offset=4
    unsigned long Flags; // Size=4 Offset=8
    struct _GUID ObjectType; // Size=16 Offset=12
    struct _GUID InheritedObjectType; // Size=16 Offset=28
    unsigned long SidStart; // Size=4 Offset=44
} SYSTEM_AUDIT_OBJECT_ACE, *PSYSTEM_AUDIT_OBJECT_ACE;
typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA // Size=36
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwMsgEncodingType; // Size=4 Offset=4
    unsigned long hCryptProv; // Size=4 Offset=8
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm; // Size=12 Offset=12
    void * pvEncryptionAuxInfo; // Size=4 Offset=24
    unsigned long dwFlags; // Size=4 Offset=28
    unsigned long dwInnerContentType; // Size=4 Offset=32
} CRYPT_ENCRYPT_MESSAGE_PARA, *PCRYPT_ENCRYPT_MESSAGE_PARA;
typedef struct _JOB_INFO_2W // Size=104
{
    unsigned long JobId; // Size=4 Offset=0
    unsigned short * pPrinterName; // Size=4 Offset=4
    unsigned short * pMachineName; // Size=4 Offset=8
    unsigned short * pUserName; // Size=4 Offset=12
    unsigned short * pDocument; // Size=4 Offset=16
    unsigned short * pNotifyName; // Size=4 Offset=20
    unsigned short * pDatatype; // Size=4 Offset=24
    unsigned short * pPrintProcessor; // Size=4 Offset=28
    unsigned short * pParameters; // Size=4 Offset=32
    unsigned short * pDriverName; // Size=4 Offset=36
    struct _devicemodeW * pDevMode; // Size=4 Offset=40
    unsigned short * pStatus; // Size=4 Offset=44
    void * pSecurityDescriptor; // Size=4 Offset=48
    unsigned long Status; // Size=4 Offset=52
    unsigned long Priority; // Size=4 Offset=56
    unsigned long Position; // Size=4 Offset=60
    unsigned long StartTime; // Size=4 Offset=64
    unsigned long UntilTime; // Size=4 Offset=68
    unsigned long TotalPages; // Size=4 Offset=72
    unsigned long Size; // Size=4 Offset=76
    struct _SYSTEMTIME Submitted; // Size=16 Offset=80
    unsigned long Time; // Size=4 Offset=96
    unsigned long PagesPrinted; // Size=4 Offset=100
} JOB_INFO_2W, *PJOB_INFO_2W;
typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION // Size=52
{
    struct _CHANGER_ELEMENT StartingElement; // Size=8 Offset=0
    unsigned long ActionCode; // Size=4 Offset=8
    unsigned char VolumeIDTemplate[40]; // Size=40 Offset=12
} CHANGER_SEND_VOLUME_TAG_INFORMATION, *PCHANGER_SEND_VOLUME_TAG_INFORMATION;
typedef struct _PERF_OBJECT_TYPE // Size=64
{
    unsigned long TotalByteLength; // Size=4 Offset=0
    unsigned long DefinitionLength; // Size=4 Offset=4
    unsigned long HeaderLength; // Size=4 Offset=8
    unsigned long ObjectNameTitleIndex; // Size=4 Offset=12
    unsigned short * ObjectNameTitle; // Size=4 Offset=16
    unsigned long ObjectHelpTitleIndex; // Size=4 Offset=20
    unsigned short * ObjectHelpTitle; // Size=4 Offset=24
    unsigned long DetailLevel; // Size=4 Offset=28
    unsigned long NumCounters; // Size=4 Offset=32
    long DefaultCounter; // Size=4 Offset=36
    long NumInstances; // Size=4 Offset=40
    unsigned long CodePage; // Size=4 Offset=44
    union _LARGE_INTEGER PerfTime; // Size=8 Offset=48
    union _LARGE_INTEGER PerfFreq; // Size=8 Offset=56
} PERF_OBJECT_TYPE, *PPERF_OBJECT_TYPE;
typedef struct tagCOMPOSITIONFORM // Size=28
{
    unsigned long dwStyle; // Size=4 Offset=0
    struct tagPOINT ptCurrentPos; // Size=8 Offset=4
    struct tagRECT rcArea; // Size=16 Offset=12
} *PtagCOMPOSITIONFORM;
typedef struct tagOIFI // Size=20
{
    unsigned int cb; // Size=4 Offset=0
    int fMDIApp; // Size=4 Offset=4
    struct HWND__ * hwndFrame; // Size=4 Offset=8
    struct HACCEL__ * haccel; // Size=4 Offset=12
    unsigned int cAccelEntries; // Size=4 Offset=16
} *PtagOIFI;
typedef struct tagEMREXTFLOODFILL // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _POINTL ptlStart; // Size=8 Offset=8
    unsigned long crColor; // Size=4 Offset=16
    unsigned long iMode; // Size=4 Offset=20
} *PtagEMREXTFLOODFILL;
typedef struct tagCBT_CREATEWNDA // Size=8
{
    struct tagCREATESTRUCTA * lpcs; // Size=4 Offset=0
    struct HWND__ * hwndInsertAfter; // Size=4 Offset=4
} *PtagCBT_CREATEWNDA;
typedef struct _REPARSE_GUID_DATA_BUFFER // Size=28
{
    unsigned long ReparseTag; // Size=4 Offset=0
    unsigned short ReparseDataLength; // Size=2 Offset=4
    unsigned short Reserved; // Size=2 Offset=6
    struct _GUID ReparseGuid; // Size=16 Offset=8
    struct _REPARSE_GUID_DATA_BUFFER::___unnamed2277 GenericReparseBuffer; // Size=1 Offset=24
} REPARSE_GUID_DATA_BUFFER, *PREPARSE_GUID_DATA_BUFFER;
typedef struct _USER_MARSHAL_CB // Size=28
{
    unsigned long Flags; // Size=4 Offset=0
    struct _MIDL_STUB_MESSAGE * pStubMsg; // Size=4 Offset=4
    unsigned char * pReserve; // Size=4 Offset=8
    unsigned long Signature; // Size=4 Offset=12
    enum _USER_MARSHAL_CB_TYPE CBType; // Size=4 Offset=16
    unsigned char * pFormat; // Size=4 Offset=20
    unsigned char * pTypeFormat; // Size=4 Offset=24
} USER_MARSHAL_CB, *PUSER_MARSHAL_CB;
typedef struct tagTTPOLYCURVE // Size=12
{
    unsigned short wType; // Size=2 Offset=0
    unsigned short cpfx; // Size=2 Offset=2
    struct tagPOINTFX apfx[1]; // Size=8 Offset=4
} *PtagTTPOLYCURVE;
typedef struct OPENCARDNAMEA // Size=92
{
    unsigned long dwStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    unsigned long hSCardContext; // Size=4 Offset=8
    char * lpstrGroupNames; // Size=4 Offset=12
    unsigned long nMaxGroupNames; // Size=4 Offset=16
    char * lpstrCardNames; // Size=4 Offset=20
    unsigned long nMaxCardNames; // Size=4 Offset=24
    struct _GUID * rgguidInterfaces; // Size=4 Offset=28
    unsigned long cguidInterfaces; // Size=4 Offset=32
    char * lpstrRdr; // Size=4 Offset=36
    unsigned long nMaxRdr; // Size=4 Offset=40
    char * lpstrCard; // Size=4 Offset=44
    unsigned long nMaxCard; // Size=4 Offset=48
    char * lpstrTitle; // Size=4 Offset=52
    unsigned long dwFlags; // Size=4 Offset=56
    void * pvUserData; // Size=4 Offset=60
    unsigned long dwShareMode; // Size=4 Offset=64
    unsigned long dwPreferredProtocols; // Size=4 Offset=68
    unsigned long dwActiveProtocol; // Size=4 Offset=72
    unsigned long ( * lpfnConnect)(unsigned long,char *,char *,void *); // Size=4 Offset=76
    int ( * lpfnCheck)(unsigned long,unsigned long,void *); // Size=4 Offset=80
    void ( * lpfnDisconnect)(unsigned long,unsigned long,void *); // Size=4 Offset=84
    unsigned long hCardHandle; // Size=4 Offset=88
} *POPENCARDNAMEA;
typedef struct SCARD_T0_REQUEST // Size=16
{
    struct _SCARD_IO_REQUEST ioRequest; // Size=8 Offset=0
    unsigned char bSw1; // Size=1 Offset=8
    unsigned char bSw2; // Size=1 Offset=9
    union
    {
        struct SCARD_T0_COMMAND CmdBytes; // Size=5 Offset=10
        unsigned char rgbHeader[5]; // Size=5 Offset=10
    };
} *PSCARD_T0_REQUEST;
typedef struct _CHANGER_SET_POSITION // Size=20
{
    struct _CHANGER_ELEMENT Transport; // Size=8 Offset=0
    struct _CHANGER_ELEMENT Destination; // Size=8 Offset=8
    unsigned char Flip; // Size=1 Offset=16
} CHANGER_SET_POSITION, *PCHANGER_SET_POSITION;
typedef union _DEVICE_MEDIA_INFO::__unnamed // Size=32
{
    struct _DEVICE_MEDIA_INFO::___unnamed2323::___unnamed2323 DiskInfo; // Size=32 Offset=0
    struct _DEVICE_MEDIA_INFO::___unnamed2323::___unnamed2323 RemovableDiskInfo; // Size=32 Offset=0
    struct _DEVICE_MEDIA_INFO::___unnamed2327::___unnamed2327 TapeInfo; // Size=20 Offset=0
} DEVICE_MEDIA_INFO::__unnamed, *PDEVICE_MEDIA_INFO::__unnamed;
typedef struct tagMONLINKSTRUCT // Size=48
{
    unsigned int cb; // Size=4 Offset=0
    unsigned long dwTime; // Size=4 Offset=4
    void * hTask; // Size=4 Offset=8
    int fEstablished; // Size=4 Offset=12
    int fNoData; // Size=4 Offset=16
    struct HSZ__ * hszSvc; // Size=4 Offset=20
    struct HSZ__ * hszTopic; // Size=4 Offset=24
    struct HSZ__ * hszItem; // Size=4 Offset=28
    unsigned int wFmt; // Size=4 Offset=32
    int fServer; // Size=4 Offset=36
    struct HCONV__ * hConvServer; // Size=4 Offset=40
    struct HCONV__ * hConvClient; // Size=4 Offset=44
} *PtagMONLINKSTRUCT;
typedef struct _AppBarData // Size=36
{
    unsigned long cbSize; // Size=4 Offset=0
    struct HWND__ * hWnd; // Size=4 Offset=4
    unsigned int uCallbackMessage; // Size=4 Offset=8
    unsigned int uEdge; // Size=4 Offset=12
    struct tagRECT rc; // Size=16 Offset=16
    long lParam; // Size=4 Offset=32
} AppBarData, *PAppBarData;
typedef struct SYSTEM_POWER_CAPABILITIES // Size=76
{
    unsigned char PowerButtonPresent; // Size=1 Offset=0
    unsigned char SleepButtonPresent; // Size=1 Offset=1
    unsigned char LidPresent; // Size=1 Offset=2
    unsigned char SystemS1; // Size=1 Offset=3
    unsigned char SystemS2; // Size=1 Offset=4
    unsigned char SystemS3; // Size=1 Offset=5
    unsigned char SystemS4; // Size=1 Offset=6
    unsigned char SystemS5; // Size=1 Offset=7
    unsigned char HiberFilePresent; // Size=1 Offset=8
    unsigned char FullWake; // Size=1 Offset=9
    unsigned char VideoDimPresent; // Size=1 Offset=10
    unsigned char ApmPresent; // Size=1 Offset=11
    unsigned char UpsPresent; // Size=1 Offset=12
    unsigned char ThermalControl; // Size=1 Offset=13
    unsigned char ProcessorThrottle; // Size=1 Offset=14
    unsigned char ProcessorMinThrottle; // Size=1 Offset=15
    unsigned char ProcessorMaxThrottle; // Size=1 Offset=16
    unsigned char spare2[4]; // Size=4 Offset=17
    unsigned char DiskSpinDown; // Size=1 Offset=21
    unsigned char spare3[8]; // Size=8 Offset=22
    unsigned char SystemBatteriesPresent; // Size=1 Offset=30
    unsigned char BatteriesAreShortTerm; // Size=1 Offset=31
    struct BATTERY_REPORTING_SCALE BatteryScale[3]; // Size=24 Offset=32
    enum _SYSTEM_POWER_STATE AcOnLineWake; // Size=4 Offset=56
    enum _SYSTEM_POWER_STATE SoftLidWake; // Size=4 Offset=60
    enum _SYSTEM_POWER_STATE RtcWake; // Size=4 Offset=64
    enum _SYSTEM_POWER_STATE MinDeviceWakeState; // Size=4 Offset=68
    enum _SYSTEM_POWER_STATE DefaultLowLatencyWake; // Size=4 Offset=72
} *PSYSTEM_POWER_CAPABILITIES;
typedef struct tagContextProperty // Size=24
{
    struct _GUID policyId; // Size=16 Offset=0
    unsigned long flags; // Size=4 Offset=16
    struct IUnknown * pUnk; // Size=4 Offset=20
} *PtagContextProperty;
typedef struct tagEMRGLSBOUNDEDRECORD // Size=32
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long cbData; // Size=4 Offset=24
    unsigned char Data[1]; // Size=1 Offset=28
} *PtagEMRGLSBOUNDEDRECORD;
typedef struct tagMDINEXTMENU // Size=12
{
    struct HMENU__ * hmenuIn; // Size=4 Offset=0
    struct HMENU__ * hmenuNext; // Size=4 Offset=4
    struct HWND__ * hwndNext; // Size=4 Offset=8
} *PtagMDINEXTMENU;
typedef struct tagEMRSETPALETTEENTRIES // Size=24
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihPal; // Size=4 Offset=8
    unsigned long iStart; // Size=4 Offset=12
    unsigned long cEntries; // Size=4 Offset=16
    struct tagPALETTEENTRY aPalEntries[1]; // Size=4 Offset=20
} *PtagEMRSETPALETTEENTRIES;
typedef struct CONFIRMSAFETY // Size=24
{
    struct _GUID clsid; // Size=16 Offset=0
    struct IUnknown * pUnk; // Size=4 Offset=16
    unsigned long dwFlags; // Size=4 Offset=20
} *PCONFIRMSAFETY;
typedef struct _DISK_PERFORMANCE // Size=88
{
    union _LARGE_INTEGER BytesRead; // Size=8 Offset=0
    union _LARGE_INTEGER BytesWritten; // Size=8 Offset=8
    union _LARGE_INTEGER ReadTime; // Size=8 Offset=16
    union _LARGE_INTEGER WriteTime; // Size=8 Offset=24
    union _LARGE_INTEGER IdleTime; // Size=8 Offset=32
    unsigned long ReadCount; // Size=4 Offset=40
    unsigned long WriteCount; // Size=4 Offset=44
    unsigned long QueueDepth; // Size=4 Offset=48
    unsigned long SplitCount; // Size=4 Offset=52
    union _LARGE_INTEGER QueryTime; // Size=8 Offset=56
    unsigned long StorageDeviceNumber; // Size=4 Offset=64
    unsigned short StorageManagerName[8]; // Size=16 Offset=68
} DISK_PERFORMANCE, *PDISK_PERFORMANCE;
typedef struct tagNEWTEXTMETRICEXW // Size=100
{
    struct tagNEWTEXTMETRICW ntmTm; // Size=76 Offset=0
    struct tagFONTSIGNATURE ntmFontSig; // Size=24 Offset=76
} *PtagNEWTEXTMETRICEXW;
typedef struct _QUOTA_LIMITS_EX // Size=56
{
    unsigned long PagedPoolLimit; // Size=4 Offset=0
    unsigned long NonPagedPoolLimit; // Size=4 Offset=4
    unsigned long MinimumWorkingSetSize; // Size=4 Offset=8
    unsigned long MaximumWorkingSetSize; // Size=4 Offset=12
    unsigned long PagefileLimit; // Size=4 Offset=16
    union _LARGE_INTEGER TimeLimit; // Size=8 Offset=24
    unsigned long Reserved1; // Size=4 Offset=32
    unsigned long Reserved2; // Size=4 Offset=36
    unsigned long Reserved3; // Size=4 Offset=40
    unsigned long Reserved4; // Size=4 Offset=44
    unsigned long Flags; // Size=4 Offset=48
    unsigned long Reserved5; // Size=4 Offset=52
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX;
typedef struct tagMCI_ANIM_UPDATE_PARMS // Size=24
{
    unsigned long dwCallback; // Size=4 Offset=0
    struct tagRECT rc; // Size=16 Offset=4
    struct HDC__ * hDC; // Size=4 Offset=20
} *PtagMCI_ANIM_UPDATE_PARMS;
typedef struct _GDI_NONREMOTE // Size=8
{
    long fContext; // Size=4 Offset=0
    union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u; // Size=4 Offset=4
} GDI_NONREMOTE, *PGDI_NONREMOTE;
typedef class std::ctype<unsigned short> // Size=32
{
    class std::locale::id id; // Size=4 Offset=0
    struct _Ctypevec _Ctype; // Size=16 Offset=8
    struct _Cvtvec _Cvt; // Size=8 Offset=24
} *Pstd::ctype<unsigned short>;
typedef class std::ios_base // Size=40
{
    union
    {
        int _Index; // Size=4 Offset=0
        bool _Sync; // Size=1 Offset=0
    };
    unsigned int _Stdstr; // Size=4 Offset=4
    int _Mystate; // Size=4 Offset=8
    int _Except; // Size=4 Offset=12
    int _Fmtfl; // Size=4 Offset=16
    int _Prec; // Size=4 Offset=20
    int _Wide; // Size=4 Offset=24
    struct std::ios_base::_Iosarray * _Arr; // Size=4 Offset=28
    struct std::ios_base::_Fnarray * _Calls; // Size=4 Offset=32
    class std::locale * _Ploc; // Size=4 Offset=36
} *Pstd::ios_base;
typedef struct std::ios_base::_Fnarray // Size=12
{
    struct std::ios_base::_Fnarray * _Next; // Size=4 Offset=0
    int _Index; // Size=4 Offset=4
    void ( * _Pfn)(enum std::ios_base::event,class std::ios_base *,int); // Size=4 Offset=8
} *Pstd::ios_base::_Fnarray;
typedef struct MINIDUMP_EXCEPTION_STREAM // Size=168
{
    unsigned int ThreadId; // Size=4 Offset=0
    unsigned int __alignment; // Size=4 Offset=4
    struct _MINIDUMP_EXCEPTION ExceptionRecord; // Size=152 Offset=8
    struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext; // Size=8 Offset=160
} *PMINIDUMP_EXCEPTION_STREAM;
typedef struct _CRYPT_PROVUI_FUNCS // Size=24
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _CRYPT_PROVUI_DATA * psUIData; // Size=4 Offset=4
    int ( * pfnOnMoreInfoClick)(struct HWND__ *,struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=8
    int ( * pfnOnMoreInfoClickDefault)(struct HWND__ *,struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=12
    int ( * pfnOnAdvancedClick)(struct HWND__ *,struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=16
    int ( * pfnOnAdvancedClickDefault)(struct HWND__ *,struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=20
} CRYPT_PROVUI_FUNCS, *PCRYPT_PROVUI_FUNCS;
typedef struct _CRYPT_PROVIDER_FUNCTIONS // Size=64
{
    unsigned long cbStruct; // Size=4 Offset=0
    void * ( * pfnAlloc)(unsigned long); // Size=4 Offset=4
    void ( * pfnFree)(void *); // Size=4 Offset=8
    int ( * pfnAddStore2Chain)(struct _CRYPT_PROVIDER_DATA *,void *); // Size=4 Offset=12
    int ( * pfnAddSgnr2Chain)(struct _CRYPT_PROVIDER_DATA *,int,unsigned long,struct _CRYPT_PROVIDER_SGNR *); // Size=4 Offset=16
    int ( * pfnAddCert2Chain)(struct _CRYPT_PROVIDER_DATA *,unsigned long,int,unsigned long,struct _CERT_CONTEXT *); // Size=4 Offset=20
    int ( * pfnAddPrivData2Chain)(struct _CRYPT_PROVIDER_DATA *,struct _CRYPT_PROVIDER_PRIVDATA *); // Size=4 Offset=24
    HRESULT ( * pfnInitialize)(struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=28
    HRESULT ( * pfnObjectTrust)(struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=32
    HRESULT ( * pfnSignatureTrust)(struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=36
    HRESULT ( * pfnCertificateTrust)(struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=40
    HRESULT ( * pfnFinalPolicy)(struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=44
    int ( * pfnCertCheckPolicy)(struct _CRYPT_PROVIDER_DATA *,unsigned long,int,unsigned long); // Size=4 Offset=48
    HRESULT ( * pfnTestFinalPolicy)(struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=52
    struct _CRYPT_PROVUI_FUNCS * psUIpfns; // Size=4 Offset=56
    HRESULT ( * pfnCleanupPolicy)(struct _CRYPT_PROVIDER_DATA *); // Size=4 Offset=60
} CRYPT_PROVIDER_FUNCTIONS, *PCRYPT_PROVIDER_FUNCTIONS;
typedef struct _SPC_SP_AGENCY_INFO // Size=16
{
    struct SPC_LINK_ * pPolicyInformation; // Size=4 Offset=0
    unsigned short * pwszPolicyDisplayText; // Size=4 Offset=4
    struct _SPC_IMAGE * pLogoImage; // Size=4 Offset=8
    struct SPC_LINK_ * pLogoLink; // Size=4 Offset=12
} SPC_SP_AGENCY_INFO, *PSPC_SP_AGENCY_INFO;
typedef struct WINTRUST_CERT_INFO_ // Size=28
{
    unsigned long cbStruct; // Size=4 Offset=0
    unsigned short * pcwszDisplayName; // Size=4 Offset=4
    struct _CERT_CONTEXT * psCertContext; // Size=4 Offset=8
    unsigned long chStores; // Size=4 Offset=12
    void * * pahStores; // Size=4 Offset=16
    unsigned long dwFlags; // Size=4 Offset=20
    struct _FILETIME * psftVerifyAsOf; // Size=4 Offset=24
} *PWINTRUST_CERT_INFO_;
typedef struct _MINIDUMP_MODULE // Size=108
{
    unsigned __int64 BaseOfImage; // Size=8 Offset=0
    unsigned int SizeOfImage; // Size=4 Offset=8
    unsigned int CheckSum; // Size=4 Offset=12
    unsigned int TimeDateStamp; // Size=4 Offset=16
    unsigned long ModuleNameRva; // Size=4 Offset=20
    struct tagVS_FIXEDFILEINFO VersionInfo; // Size=52 Offset=24
    struct _MINIDUMP_LOCATION_DESCRIPTOR CvRecord; // Size=8 Offset=76
    struct _MINIDUMP_LOCATION_DESCRIPTOR MiscRecord; // Size=8 Offset=84
    unsigned __int64 Reserved0; // Size=8 Offset=92
    unsigned __int64 Reserved1; // Size=8 Offset=100
} MINIDUMP_MODULE, *PMINIDUMP_MODULE;
typedef struct _MINIDUMP_THREAD_CALLBACK // Size=744
{
    unsigned long ThreadId; // Size=4 Offset=0
    void * ThreadHandle; // Size=4 Offset=4
    struct _CONTEXT Context; // Size=716 Offset=8
    unsigned long SizeOfContext; // Size=4 Offset=724
    unsigned __int64 StackBase; // Size=8 Offset=728
    unsigned __int64 StackEnd; // Size=8 Offset=736
} MINIDUMP_THREAD_CALLBACK, *PMINIDUMP_THREAD_CALLBACK;
typedef struct _MINIDUMP_THREAD_EX_CALLBACK // Size=760
{
    unsigned long ThreadId; // Size=4 Offset=0
    void * ThreadHandle; // Size=4 Offset=4
    struct _CONTEXT Context; // Size=716 Offset=8
    unsigned long SizeOfContext; // Size=4 Offset=724
    unsigned __int64 StackBase; // Size=8 Offset=728
    unsigned __int64 StackEnd; // Size=8 Offset=736
    unsigned __int64 BackingStoreBase; // Size=8 Offset=744
    unsigned __int64 BackingStoreEnd; // Size=8 Offset=752
} MINIDUMP_THREAD_EX_CALLBACK, *PMINIDUMP_THREAD_EX_CALLBACK;
typedef struct _MINIDUMP_MEMORY_LIST // Size=4
{
    unsigned int NumberOfMemoryRanges; // Size=4 Offset=0
} MINIDUMP_MEMORY_LIST, *PMINIDUMP_MEMORY_LIST;
typedef struct SPC_LINK_ // Size=28
{
    unsigned long dwLinkChoice; // Size=4 Offset=0
    union
    {
        unsigned short * pwszUrl; // Size=4 Offset=4
        struct _SPC_SERIALIZED_OBJECT Moniker; // Size=24 Offset=4
        unsigned short * pwszFile; // Size=4 Offset=4
    };
} *PSPC_LINK_;
typedef struct _SPC_PE_IMAGE_DATA // Size=16
{
    struct _CRYPT_BIT_BLOB Flags; // Size=12 Offset=0
    struct SPC_LINK_ * pFile; // Size=4 Offset=12
} SPC_PE_IMAGE_DATA, *PSPC_PE_IMAGE_DATA;
typedef union _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION // Size=24
{
    struct _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION::___unnamed2989 X86CpuInfo; // Size=24 Offset=0
    struct _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION::___unnamed2990 OtherCpuInfo; // Size=16 Offset=0
} MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION, *PMINIDUMP_SYSTEM_INFO::_CPU_INFORMATION;
typedef struct _SPC_IMAGE // Size=36
{
    struct SPC_LINK_ * pImageLink; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Bitmap; // Size=8 Offset=4
    struct _CRYPTOAPI_BLOB Metafile; // Size=8 Offset=12
    struct _CRYPTOAPI_BLOB EnhancedMetafile; // Size=8 Offset=20
    struct _CRYPTOAPI_BLOB GifFile; // Size=8 Offset=28
} SPC_IMAGE, *PSPC_IMAGE;
typedef struct ip_mreq // Size=8
{
    struct in_addr imr_multiaddr; // Size=4 Offset=0
    struct in_addr imr_interface; // Size=4 Offset=4
} *Pip_mreq;
typedef struct threadlocaleinfostruct // Size=84
{
    int refcount; // Size=4 Offset=0
    unsigned int lc_codepage; // Size=4 Offset=4
    unsigned int lc_collate_cp; // Size=4 Offset=8
    unsigned long lc_handle[6]; // Size=24 Offset=12
    int lc_clike; // Size=4 Offset=36
    int mb_cur_max; // Size=4 Offset=40
    int * lconv_intl_refcount; // Size=4 Offset=44
    int * lconv_num_refcount; // Size=4 Offset=48
    int * lconv_mon_refcount; // Size=4 Offset=52
    struct lconv * lconv; // Size=4 Offset=56
    struct lconv * lconv_intl; // Size=4 Offset=60
    int * ctype1_refcount; // Size=4 Offset=64
    unsigned short * ctype1; // Size=4 Offset=68
    unsigned short * pctype; // Size=4 Offset=72
    struct __lc_time_data * lc_time_curr; // Size=4 Offset=76
    struct __lc_time_data * lc_time_intl; // Size=4 Offset=80
} *Pthreadlocaleinfostruct;
typedef struct _tiddata // Size=140
{
    unsigned long _tid; // Size=4 Offset=0
    unsigned int _thandle; // Size=4 Offset=4
    int _terrno; // Size=4 Offset=8
    unsigned long _tdoserrno; // Size=4 Offset=12
    unsigned int _fpds; // Size=4 Offset=16
    unsigned long _holdrand; // Size=4 Offset=20
    char * _token; // Size=4 Offset=24
    unsigned short * _wtoken; // Size=4 Offset=28
    unsigned char * _mtoken; // Size=4 Offset=32
    char * _errmsg; // Size=4 Offset=36
    unsigned short * _werrmsg; // Size=4 Offset=40
    char * _namebuf0; // Size=4 Offset=44
    unsigned short * _wnamebuf0; // Size=4 Offset=48
    char * _namebuf1; // Size=4 Offset=52
    unsigned short * _wnamebuf1; // Size=4 Offset=56
    char * _asctimebuf; // Size=4 Offset=60
    unsigned short * _wasctimebuf; // Size=4 Offset=64
    void * _gmtimebuf; // Size=4 Offset=68
    char * _cvtbuf; // Size=4 Offset=72
    void * _initaddr; // Size=4 Offset=76
    void * _initarg; // Size=4 Offset=80
    void * _pxcptacttab; // Size=4 Offset=84
    void * _tpxcptinfoptrs; // Size=4 Offset=88
    int _tfpecode; // Size=4 Offset=92
    struct threadmbcinfostruct * ptmbcinfo; // Size=4 Offset=96
    struct threadlocaleinfostruct * ptlocinfo; // Size=4 Offset=100
    unsigned long _NLG_dwCode; // Size=4 Offset=104
    void * _terminate; // Size=4 Offset=108
    void * _unexpected; // Size=4 Offset=112
    void * _translator; // Size=4 Offset=116
    void * _purecall; // Size=4 Offset=120
    void * _curexception; // Size=4 Offset=124
    void * _curcontext; // Size=4 Offset=128
    int _ProcessingThrow; // Size=4 Offset=132
    void * _pFrameInfoChain; // Size=4 Offset=136
} tiddata, *Ptiddata;
typedef struct ioinfo // Size=36
{
    int osfhnd; // Size=4 Offset=0
    char osfile; // Size=1 Offset=4
    char pipech; // Size=1 Offset=5
    int lockinitflag; // Size=4 Offset=8
    struct _RTL_CRITICAL_SECTION lock; // Size=24 Offset=12
} *Pioinfo;
typedef struct ___unnamed3040 // Size=8
{
    struct _RTL_CRITICAL_SECTION * lock; // Size=4 Offset=0
    enum ___unnamed3041 kind; // Size=4 Offset=4
} __unnamed3040, *P__unnamed3040;
typedef struct tagGroup // Size=516
{
    int cntEntries; // Size=4 Offset=0
    struct tagListHead listHead[64]; // Size=512 Offset=4
} *PtagGroup;
typedef struct _EH3_EXCEPTION_REGISTRATION // Size=16
{
    struct _EH3_EXCEPTION_REGISTRATION * Next; // Size=4 Offset=0
    void * ExceptionHandler; // Size=4 Offset=4
    struct _SCOPETABLE_ENTRY * ScopeTable; // Size=4 Offset=8
    unsigned long TryLevel; // Size=4 Offset=12
} EH3_EXCEPTION_REGISTRATION, *PEH3_EXCEPTION_REGISTRATION;
typedef struct _s_CatchableType // Size=28
{
    unsigned int properties; // Size=4 Offset=0
    struct TypeDescriptor * pType; // Size=4 Offset=4
    struct PMD thisDisplacement; // Size=12 Offset=8
    int sizeOrOffset; // Size=4 Offset=20
    void ( * copyFunction)(); // Size=4 Offset=24
} s_CatchableType, *Ps_CatchableType;
typedef struct CatchGuardRN // Size=24
{
    struct EHRegistrationNode * pNext; // Size=4 Offset=0
    void * pFrameHandler; // Size=4 Offset=4
    unsigned long RandomCookie; // Size=4 Offset=8
    struct _s_FuncInfo * pFuncInfo; // Size=4 Offset=12
    struct EHRegistrationNode * pRN; // Size=4 Offset=16
    int CatchDepth; // Size=4 Offset=20
} *PCatchGuardRN;
typedef struct TranslatorGuardRN // Size=40
{
    struct EHRegistrationNode * pNext; // Size=4 Offset=0
    void * pFrameHandler; // Size=4 Offset=4
    unsigned long RandomCookie; // Size=4 Offset=8
    struct _s_FuncInfo * pFuncInfo; // Size=4 Offset=12
    struct EHRegistrationNode * pRN; // Size=4 Offset=16
    int CatchDepth; // Size=4 Offset=20
    struct EHRegistrationNode * pMarkerRN; // Size=4 Offset=24
    void * ESP; // Size=4 Offset=28
    void * EBP; // Size=4 Offset=32
    int DidUnwind; // Size=4 Offset=36
} *PTranslatorGuardRN;
typedef struct tagEMRPOLYLINE // Size=36
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long cptl; // Size=4 Offset=24
    struct _POINTL aptl[1]; // Size=8 Offset=28
} *PtagEMRPOLYLINE;
typedef struct tagEMRTRANSPARENTBLT // Size=108
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    long xDest; // Size=4 Offset=24
    long yDest; // Size=4 Offset=28
    long cxDest; // Size=4 Offset=32
    long cyDest; // Size=4 Offset=36
    unsigned long dwRop; // Size=4 Offset=40
    long xSrc; // Size=4 Offset=44
    long ySrc; // Size=4 Offset=48
    struct tagXFORM xformSrc; // Size=24 Offset=52
    unsigned long crBkColorSrc; // Size=4 Offset=76
    unsigned long iUsageSrc; // Size=4 Offset=80
    unsigned long offBmiSrc; // Size=4 Offset=84
    unsigned long cbBmiSrc; // Size=4 Offset=88
    unsigned long offBitsSrc; // Size=4 Offset=92
    unsigned long cbBitsSrc; // Size=4 Offset=96
    long cxSrc; // Size=4 Offset=100
    long cySrc; // Size=4 Offset=104
} *PtagEMRTRANSPARENTBLT;
typedef struct _CMSG_ENVELOPED_ENCODE_INFO // Size=32
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm; // Size=12 Offset=8
    void * pvEncryptionAuxInfo; // Size=4 Offset=20
    unsigned long cRecipients; // Size=4 Offset=24
    struct _CERT_INFO * * rgpRecipients; // Size=4 Offset=28
} CMSG_ENVELOPED_ENCODE_INFO, *PCMSG_ENVELOPED_ENCODE_INFO;
typedef struct _CERT_ID // Size=20
{
    unsigned long dwIdChoice; // Size=4 Offset=0
    union
    {
        struct _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber; // Size=16 Offset=4
        struct _CRYPTOAPI_BLOB KeyId; // Size=8 Offset=4
        struct _CRYPTOAPI_BLOB HashId; // Size=8 Offset=4
    };
} CERT_ID, *PCERT_ID;
typedef struct _FULL_PTR_XLAT_TABLES // Size=32
{
    struct _FULL_PTR_XLAT_TABLES::___unnamed99 RefIdToPointer; // Size=12 Offset=0
    struct _FULL_PTR_XLAT_TABLES::___unnamed103 PointerToRefId; // Size=12 Offset=12
    unsigned long NextRefId; // Size=4 Offset=24
    enum XLAT_SIDE XlatSide; // Size=4 Offset=28
} FULL_PTR_XLAT_TABLES, *PFULL_PTR_XLAT_TABLES;
typedef struct _OFNOTIFYEXA // Size=24
{
    struct tagNMHDR hdr; // Size=12 Offset=0
    struct tagOFNA * lpOFN; // Size=4 Offset=12
    void * psf; // Size=4 Offset=16
    void * pidl; // Size=4 Offset=20
} OFNOTIFYEXA, *POFNOTIFYEXA;
typedef struct _RPC_ASYNC_STATE // Size=68
{
    unsigned int Size; // Size=4 Offset=0
    unsigned long Signature; // Size=4 Offset=4
    long Lock; // Size=4 Offset=8
    unsigned long Flags; // Size=4 Offset=12
    void * StubInfo; // Size=4 Offset=16
    void * UserInfo; // Size=4 Offset=20
    void * RuntimeInfo; // Size=4 Offset=24
    enum _RPC_ASYNC_EVENT Event; // Size=4 Offset=28
    enum _RPC_NOTIFICATION_TYPES NotificationType; // Size=4 Offset=32
    union _RPC_ASYNC_STATE::___unnamed133 u; // Size=16 Offset=36
    long Reserved[4]; // Size=16 Offset=52
} RPC_ASYNC_STATE, *PRPC_ASYNC_STATE;
typedef struct tagEMRARC // Size=40
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBox; // Size=16 Offset=8
    struct _POINTL ptlStart; // Size=8 Offset=24
    struct _POINTL ptlEnd; // Size=8 Offset=32
} *PtagEMRARC;
typedef struct tagEMRPOLYDRAW // Size=40
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long cptl; // Size=4 Offset=24
    struct _POINTL aptl[1]; // Size=8 Offset=28
    unsigned char abTypes[1]; // Size=1 Offset=36
} *PtagEMRPOLYDRAW;
typedef struct _DISK_GEOMETRY // Size=24
{
    union _LARGE_INTEGER Cylinders; // Size=8 Offset=0
    enum _MEDIA_TYPE MediaType; // Size=4 Offset=8
    unsigned long TracksPerCylinder; // Size=4 Offset=12
    unsigned long SectorsPerTrack; // Size=4 Offset=16
    unsigned long BytesPerSector; // Size=4 Offset=20
} DISK_GEOMETRY, *PDISK_GEOMETRY;
typedef struct _CMSG_CMS_RECIPIENT_INFO // Size=8
{
    unsigned long dwRecipientChoice; // Size=4 Offset=0
    union
    {
        struct _CMSG_KEY_TRANS_RECIPIENT_INFO * pKeyTrans; // Size=4 Offset=4
        struct _CMSG_KEY_AGREE_RECIPIENT_INFO * pKeyAgree; // Size=4 Offset=4
        struct _CMSG_MAIL_LIST_RECIPIENT_INFO * pMailList; // Size=4 Offset=4
    };
} CMSG_CMS_RECIPIENT_INFO, *PCMSG_CMS_RECIPIENT_INFO;
typedef struct _TOKEN_CONTROL // Size=40
{
    struct _LUID TokenId; // Size=8 Offset=0
    struct _LUID AuthenticationId; // Size=8 Offset=8
    struct _LUID ModifiedId; // Size=8 Offset=16
    struct _TOKEN_SOURCE TokenSource; // Size=16 Offset=24
} TOKEN_CONTROL, *PTOKEN_CONTROL;
typedef struct tagCREATESTRUCTA // Size=48
{
    void * lpCreateParams; // Size=4 Offset=0
    struct HINSTANCE__ * hInstance; // Size=4 Offset=4
    struct HMENU__ * hMenu; // Size=4 Offset=8
    struct HWND__ * hwndParent; // Size=4 Offset=12
    int cy; // Size=4 Offset=16
    int cx; // Size=4 Offset=20
    int y; // Size=4 Offset=24
    int x; // Size=4 Offset=28
    long style; // Size=4 Offset=32
    char * lpszName; // Size=4 Offset=36
    char * lpszClass; // Size=4 Offset=40
    unsigned long dwExStyle; // Size=4 Offset=44
} *PtagCREATESTRUCTA;
typedef struct _CERT_SIMPLE_CHAIN // Size=32
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CERT_TRUST_STATUS TrustStatus; // Size=8 Offset=4
    unsigned long cElement; // Size=4 Offset=12
    struct _CERT_CHAIN_ELEMENT * * rgpElement; // Size=4 Offset=16
    struct _CERT_TRUST_LIST_INFO * pTrustListInfo; // Size=4 Offset=20
    int fHasRevocationFreshnessTime; // Size=4 Offset=24
    unsigned long dwRevocationFreshnessTime; // Size=4 Offset=28
} CERT_SIMPLE_CHAIN, *PCERT_SIMPLE_CHAIN;
typedef struct _CERT_CHAIN_CONTEXT // Size=36
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CERT_TRUST_STATUS TrustStatus; // Size=8 Offset=4
    unsigned long cChain; // Size=4 Offset=12
    struct _CERT_SIMPLE_CHAIN * * rgpChain; // Size=4 Offset=16
    unsigned long cLowerQualityChainContext; // Size=4 Offset=20
    struct _CERT_CHAIN_CONTEXT * * rgpLowerQualityChainContext; // Size=4 Offset=24
    int fHasRevocationFreshnessTime; // Size=4 Offset=28
    unsigned long dwRevocationFreshnessTime; // Size=4 Offset=32
} CERT_CHAIN_CONTEXT, *PCERT_CHAIN_CONTEXT;
typedef struct tagEMRFRAMERGN // Size=44
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long cbRgnData; // Size=4 Offset=24
    unsigned long ihBrush; // Size=4 Offset=28
    struct tagSIZE szlStroke; // Size=8 Offset=32
    unsigned char RgnData[1]; // Size=1 Offset=40
} *PtagEMRFRAMERGN;
typedef struct tagEMRPOLYPOLYLINE // Size=44
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long nPolys; // Size=4 Offset=24
    unsigned long cptl; // Size=4 Offset=28
    unsigned long aPolyCounts[1]; // Size=4 Offset=32
    struct _POINTL aptl[1]; // Size=8 Offset=36
} *PtagEMRPOLYPOLYLINE;
typedef struct tagPDA // Size=66
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    void * hDevMode; // Size=4 Offset=8
    void * hDevNames; // Size=4 Offset=12
    struct HDC__ * hDC; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    unsigned short nFromPage; // Size=2 Offset=24
    unsigned short nToPage; // Size=2 Offset=26
    unsigned short nMinPage; // Size=2 Offset=28
    unsigned short nMaxPage; // Size=2 Offset=30
    unsigned short nCopies; // Size=2 Offset=32
    struct HINSTANCE__ * hInstance; // Size=4 Offset=34
    long lCustData; // Size=4 Offset=38
    unsigned int ( * lpfnPrintHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=42
    unsigned int ( * lpfnSetupHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=46
    char * lpPrintTemplateName; // Size=4 Offset=50
    char * lpSetupTemplateName; // Size=4 Offset=54
    void * hPrintTemplate; // Size=4 Offset=58
    void * hSetupTemplate; // Size=4 Offset=62
} *PtagPDA;
typedef struct _CRYPT_HASH_INFO // Size=20
{
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm; // Size=12 Offset=0
    struct _CRYPTOAPI_BLOB Hash; // Size=8 Offset=12
} CRYPT_HASH_INFO, *PCRYPT_HASH_INFO;
typedef struct _CERT_ACCESS_DESCRIPTION // Size=16
{
    char * pszAccessMethod; // Size=4 Offset=0
    struct _CERT_ALT_NAME_ENTRY AccessLocation; // Size=12 Offset=4
} CERT_ACCESS_DESCRIPTION, *PCERT_ACCESS_DESCRIPTION;
typedef struct _CRL_ENTRY // Size=24
{
    struct _CRYPTOAPI_BLOB SerialNumber; // Size=8 Offset=0
    struct _FILETIME RevocationDate; // Size=8 Offset=8
    unsigned long cExtension; // Size=4 Offset=16
    struct _CERT_EXTENSION * rgExtension; // Size=4 Offset=20
} CRL_ENTRY, *PCRL_ENTRY;
typedef struct _CTL_FIND_USAGE_PARA // Size=24
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CTL_USAGE SubjectUsage; // Size=8 Offset=4
    struct _CRYPTOAPI_BLOB ListIdentifier; // Size=8 Offset=12
    struct _CERT_INFO * pSigner; // Size=4 Offset=20
} CTL_FIND_USAGE_PARA, *PCTL_FIND_USAGE_PARA;
typedef struct _CMC_RESPONSE_INFO // Size=24
{
    unsigned long cTaggedAttribute; // Size=4 Offset=0
    struct _CMC_TAGGED_ATTRIBUTE * rgTaggedAttribute; // Size=4 Offset=4
    unsigned long cTaggedContentInfo; // Size=4 Offset=8
    struct _CMC_TAGGED_CONTENT_INFO * rgTaggedContentInfo; // Size=4 Offset=12
    unsigned long cTaggedOtherMsg; // Size=4 Offset=16
    struct _CMC_TAGGED_OTHER_MSG * rgTaggedOtherMsg; // Size=4 Offset=20
} CMC_RESPONSE_INFO, *PCMC_RESPONSE_INFO;
typedef struct OPENCARDNAME_EXA // Size=72
{
    unsigned long dwStructSize; // Size=4 Offset=0
    unsigned long hSCardContext; // Size=4 Offset=4
    struct HWND__ * hwndOwner; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
    char * lpstrTitle; // Size=4 Offset=16
    char * lpstrSearchDesc; // Size=4 Offset=20
    struct HICON__ * hIcon; // Size=4 Offset=24
    struct OPENCARD_SEARCH_CRITERIAA * pOpenCardSearchCriteria; // Size=4 Offset=28
    unsigned long ( * lpfnConnect)(unsigned long,char *,char *,void *); // Size=4 Offset=32
    void * pvUserData; // Size=4 Offset=36
    unsigned long dwShareMode; // Size=4 Offset=40
    unsigned long dwPreferredProtocols; // Size=4 Offset=44
    char * lpstrRdr; // Size=4 Offset=48
    unsigned long nMaxRdr; // Size=4 Offset=52
    char * lpstrCard; // Size=4 Offset=56
    unsigned long nMaxCard; // Size=4 Offset=60
    unsigned long dwActiveProtocol; // Size=4 Offset=64
    unsigned long hCardHandle; // Size=4 Offset=68
} *POPENCARDNAME_EXA;
typedef union _IMAGE_AUX_SYMBOL // Size=18
{
    struct _IMAGE_AUX_SYMBOL::___unnamed529 Sym; // Size=18 Offset=0
    struct _IMAGE_AUX_SYMBOL::___unnamed530 File; // Size=18 Offset=0
    struct _IMAGE_AUX_SYMBOL::___unnamed532 Section; // Size=16 Offset=0
} IMAGE_AUX_SYMBOL, *PIMAGE_AUX_SYMBOL;
typedef struct _BIN_COUNT // Size=24
{
    struct _BIN_RANGE BinRange; // Size=16 Offset=0
    unsigned long BinCount; // Size=4 Offset=16
} BIN_COUNT, *PBIN_COUNT;
typedef struct tagEMRROUNDRECT // Size=32
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBox; // Size=16 Offset=8
    struct tagSIZE szlCorner; // Size=8 Offset=24
} *PtagEMRROUNDRECT;
typedef struct _IMAGE_NT_HEADERS // Size=248
{
    unsigned long Signature; // Size=4 Offset=0
    struct _IMAGE_FILE_HEADER FileHeader; // Size=20 Offset=4
    struct _IMAGE_OPTIONAL_HEADER OptionalHeader; // Size=224 Offset=24
} IMAGE_NT_HEADERS, *PIMAGE_NT_HEADERS;
typedef union _GDI_OBJECT::__MIDL_IAdviseSink_0002 // Size=4
{
    struct _userHBITMAP * hBitmap; // Size=4 Offset=0
    struct _userHPALETTE * hPalette; // Size=4 Offset=0
    struct _userHGLOBAL * hGeneric; // Size=4 Offset=0
} GDI_OBJECT::__MIDL_IAdviseSink_0002, *PGDI_OBJECT::__MIDL_IAdviseSink_0002;
typedef struct SYSTEM_POWER_LEVEL // Size=24
{
    unsigned char Enable; // Size=1 Offset=0
    unsigned char Spare[3]; // Size=3 Offset=1
    unsigned long BatteryLevel; // Size=4 Offset=4
    struct POWER_ACTION_POLICY PowerPolicy; // Size=12 Offset=8
    enum _SYSTEM_POWER_STATE MinSystemState; // Size=4 Offset=20
} *PSYSTEM_POWER_LEVEL;
typedef struct tagOBJECTDESCRIPTOR // Size=52
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _GUID clsid; // Size=16 Offset=4
    unsigned long dwDrawAspect; // Size=4 Offset=20
    struct tagSIZE sizel; // Size=8 Offset=24
    struct _POINTL pointl; // Size=8 Offset=32
    unsigned long dwStatus; // Size=4 Offset=40
    unsigned long dwFullUserTypeName; // Size=4 Offset=44
    unsigned long dwSrcOfCopy; // Size=4 Offset=48
} *PtagOBJECTDESCRIPTOR;
typedef struct _OFNOTIFYW // Size=20
{
    struct tagNMHDR hdr; // Size=12 Offset=0
    struct tagOFNW * lpOFN; // Size=4 Offset=12
    unsigned short * pszFile; // Size=4 Offset=16
} OFNOTIFYW, *POFNOTIFYW;
typedef class CDerbyManager // Size=12200
{
    int iDerbyIndex; // Size=4 Offset=0
    int iDerbyTickCount; // Size=4 Offset=4
    struct _DERBY_MONSTER_INFO_EX_ dmiMonster[32]; // Size=448 Offset=8
    struct _DERBY_HISTORY_INFO_ dhiHistory[480]; // Size=7680 Offset=456
    struct _DERBY_MONSTER_INFO_EX_ dmiEntryList[5]; // Size=70 Offset=8136
    int iRaceType; // Size=4 Offset=8208
    float fVCurve[70]; // Size=280 Offset=8212
    int nVCurvePoint; // Size=4 Offset=8492
    float fRandomDev; // Size=4 Offset=8496
    float fWeight[5]; // Size=280 Offset=8500
    int iStaminaDecreaseMin; // Size=4 Offset=8780
    int iStaminaDecreaseMax; // Size=4 Offset=8784
    int iStaminaIncrease; // Size=4 Offset=8788
    int iElementalOfWeek; // Size=4 Offset=8792
    struct _RACE_SCHEDULE_ arrRaceSchedule[100]; // Size=3200 Offset=8796
    int recentBackupFileID; // Size=4 Offset=11996
    int recentBackupStamp; // Size=4 Offset=12000
    int recentHistoryIndex; // Size=4 Offset=12004
    int recentLoggedDerbyIndex; // Size=4 Offset=12008
    unsigned int iBetTotal[15]; // Size=60 Offset=12012
    float fReturnRatio; // Size=4 Offset=12072
    float fRatioTable[15]; // Size=60 Offset=12076
    bool bIsRatioValid; // Size=1 Offset=12136
    unsigned int iInitialBet[15]; // Size=60 Offset=12140
} *PCDerbyManager;
typedef struct _TOKEN_GROUPS_AND_PRIVILEGES // Size=44
{
    unsigned long SidCount; // Size=4 Offset=0
    unsigned long SidLength; // Size=4 Offset=4
    struct _SID_AND_ATTRIBUTES * Sids; // Size=4 Offset=8
    unsigned long RestrictedSidCount; // Size=4 Offset=12
    unsigned long RestrictedSidLength; // Size=4 Offset=16
    struct _SID_AND_ATTRIBUTES * RestrictedSids; // Size=4 Offset=20
    unsigned long PrivilegeCount; // Size=4 Offset=24
    unsigned long PrivilegeLength; // Size=4 Offset=28
    struct _LUID_AND_ATTRIBUTES * Privileges; // Size=4 Offset=32
    struct _LUID AuthenticationId; // Size=8 Offset=36
} TOKEN_GROUPS_AND_PRIVILEGES, *PTOKEN_GROUPS_AND_PRIVILEGES;
typedef struct _OFNOTIFYA // Size=20
{
    struct tagNMHDR hdr; // Size=12 Offset=0
    struct tagOFNA * lpOFN; // Size=4 Offset=12
    char * pszFile; // Size=4 Offset=16
} OFNOTIFYA, *POFNOTIFYA;
typedef struct _BIDI_RESPONSE_CONTAINER // Size=36
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long Count; // Size=4 Offset=8
    struct _BIDI_RESPONSE_DATA aData[1]; // Size=24 Offset=12
} BIDI_RESPONSE_CONTAINER, *PBIDI_RESPONSE_CONTAINER;
typedef struct tagPDW // Size=66
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    void * hDevMode; // Size=4 Offset=8
    void * hDevNames; // Size=4 Offset=12
    struct HDC__ * hDC; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    unsigned short nFromPage; // Size=2 Offset=24
    unsigned short nToPage; // Size=2 Offset=26
    unsigned short nMinPage; // Size=2 Offset=28
    unsigned short nMaxPage; // Size=2 Offset=30
    unsigned short nCopies; // Size=2 Offset=32
    struct HINSTANCE__ * hInstance; // Size=4 Offset=34
    long lCustData; // Size=4 Offset=38
    unsigned int ( * lpfnPrintHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=42
    unsigned int ( * lpfnSetupHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=46
    unsigned short * lpPrintTemplateName; // Size=4 Offset=50
    unsigned short * lpSetupTemplateName; // Size=4 Offset=54
    void * hPrintTemplate; // Size=4 Offset=58
    void * hSetupTemplate; // Size=4 Offset=62
} *PtagPDW;
typedef struct _CHANGER_READ_ELEMENT_STATUS // Size=16
{
    struct _CHANGER_ELEMENT_LIST ElementList; // Size=12 Offset=0
    unsigned char VolumeTagInfo; // Size=1 Offset=12
} CHANGER_READ_ELEMENT_STATUS, *PCHANGER_READ_ELEMENT_STATUS;
typedef struct _CMSG_RECIPIENT_ENCODE_INFO // Size=8
{
    unsigned long dwRecipientChoice; // Size=4 Offset=0
    union
    {
        struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO * pKeyTrans; // Size=4 Offset=4
        struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO * pKeyAgree; // Size=4 Offset=4
        struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO * pMailList; // Size=4 Offset=4
    };
} CMSG_RECIPIENT_ENCODE_INFO, *PCMSG_RECIPIENT_ENCODE_INFO;
typedef struct _CMSG_CONTENT_ENCRYPT_INFO // Size=52
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long hCryptProv; // Size=4 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm; // Size=12 Offset=8
    void * pvEncryptionAuxInfo; // Size=4 Offset=20
    unsigned long cRecipients; // Size=4 Offset=24
    struct _CMSG_RECIPIENT_ENCODE_INFO * rgCmsRecipients; // Size=4 Offset=28
    void * ( * pfnAlloc)(unsigned int); // Size=4 Offset=32
    void ( * pfnFree)(void *); // Size=4 Offset=36
    unsigned long dwEncryptFlags; // Size=4 Offset=40
    unsigned long hContentEncryptKey; // Size=4 Offset=44
    unsigned long dwFlags; // Size=4 Offset=48
} CMSG_CONTENT_ENCRYPT_INFO, *PCMSG_CONTENT_ENCRYPT_INFO;
typedef class CBaseServer // Size=8388728
{
    int m_bConnect; // Size=4 Offset=16
    unsigned int m_sSocket; // Size=4 Offset=20
    void * m_wsaEvent; // Size=4 Offset=24
    struct _WSANETWORKEVENTS m_netEvent; // Size=44 Offset=28
########################################
    int m_nRecvEndPos; // Size=4 Offset=4194380
########################################
    int m_nSendEndPos; // Size=4 Offset=8388692
    int m_iSentCount; // Size=4 Offset=8388696
    int m_iSentSize; // Size=4 Offset=8388700
    struct _RTL_CRITICAL_SECTION m_csSend; // Size=24 Offset=8388704
} *PCBaseServer;
typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS // Size=16
{
    struct _CHANGER_ELEMENT_LIST ElementList; // Size=12 Offset=0
    unsigned char BarCodeScan; // Size=1 Offset=12
} CHANGER_INITIALIZE_ELEMENT_STATUS, *PCHANGER_INITIALIZE_ELEMENT_STATUS;
typedef struct _CERT_PUBLIC_KEY_INFO // Size=24
{
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm; // Size=12 Offset=0
    struct _CRYPT_BIT_BLOB PublicKey; // Size=12 Offset=12
} CERT_PUBLIC_KEY_INFO, *PCERT_PUBLIC_KEY_INFO;
typedef struct _OFNOTIFYEXW // Size=24
{
    struct tagNMHDR hdr; // Size=12 Offset=0
    struct tagOFNW * lpOFN; // Size=4 Offset=12
    void * psf; // Size=4 Offset=16
    void * pidl; // Size=4 Offset=20
} OFNOTIFYEXW, *POFNOTIFYEXW;
typedef union __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005 // Size=32
{
    struct _GUID clsid; // Size=16 Offset=0
    unsigned short * pFileExt; // Size=4 Offset=0
    unsigned short * pMimeType; // Size=4 Offset=0
    unsigned short * pProgId; // Size=4 Offset=0
    unsigned short * pFileName; // Size=4 Offset=0
    struct __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::___unnamed1205 ByName; // Size=20 Offset=0
    struct __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005::___unnamed1206 ByObjectId; // Size=32 Offset=0
} _MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005, *P_MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005;
typedef struct _CERT_KEY_ATTRIBUTES_INFO // Size=24
{
    struct _CRYPTOAPI_BLOB KeyId; // Size=8 Offset=0
    struct _CRYPT_BIT_BLOB IntendedKeyUsage; // Size=12 Offset=8
    struct _CERT_PRIVATE_KEY_VALIDITY * pPrivateKeyUsagePeriod; // Size=4 Offset=20
} CERT_KEY_ATTRIBUTES_INFO, *PCERT_KEY_ATTRIBUTES_INFO;
typedef struct tagEMRALPHABLEND // Size=108
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    long xDest; // Size=4 Offset=24
    long yDest; // Size=4 Offset=28
    long cxDest; // Size=4 Offset=32
    long cyDest; // Size=4 Offset=36
    unsigned long dwRop; // Size=4 Offset=40
    long xSrc; // Size=4 Offset=44
    long ySrc; // Size=4 Offset=48
    struct tagXFORM xformSrc; // Size=24 Offset=52
    unsigned long crBkColorSrc; // Size=4 Offset=76
    unsigned long iUsageSrc; // Size=4 Offset=80
    unsigned long offBmiSrc; // Size=4 Offset=84
    unsigned long cbBmiSrc; // Size=4 Offset=88
    unsigned long offBitsSrc; // Size=4 Offset=92
    unsigned long cbBitsSrc; // Size=4 Offset=96
    long cxSrc; // Size=4 Offset=100
    long cySrc; // Size=4 Offset=104
} *PtagEMRALPHABLEND;
typedef struct tagEMRSTRETCHBLT // Size=108
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    long xDest; // Size=4 Offset=24
    long yDest; // Size=4 Offset=28
    long cxDest; // Size=4 Offset=32
    long cyDest; // Size=4 Offset=36
    unsigned long dwRop; // Size=4 Offset=40
    long xSrc; // Size=4 Offset=44
    long ySrc; // Size=4 Offset=48
    struct tagXFORM xformSrc; // Size=24 Offset=52
    unsigned long crBkColorSrc; // Size=4 Offset=76
    unsigned long iUsageSrc; // Size=4 Offset=80
    unsigned long offBmiSrc; // Size=4 Offset=84
    unsigned long cbBmiSrc; // Size=4 Offset=88
    unsigned long offBitsSrc; // Size=4 Offset=92
    unsigned long cbBitsSrc; // Size=4 Offset=96
    long cxSrc; // Size=4 Offset=100
    long cySrc; // Size=4 Offset=104
} *PtagEMRSTRETCHBLT;
typedef struct _VOLUME_DISK_EXTENTS // Size=32
{
    unsigned long NumberOfDiskExtents; // Size=4 Offset=0
    struct _DISK_EXTENT Extents[1]; // Size=24 Offset=8
} VOLUME_DISK_EXTENTS, *PVOLUME_DISK_EXTENTS;
typedef struct _RTL_CRITICAL_SECTION_DEBUG // Size=32
{
    unsigned short Type; // Size=2 Offset=0
    unsigned short CreatorBackTraceIndex; // Size=2 Offset=2
    struct _RTL_CRITICAL_SECTION * CriticalSection; // Size=4 Offset=4
    struct _LIST_ENTRY ProcessLocksList; // Size=8 Offset=8
    unsigned long EntryCount; // Size=4 Offset=16
    unsigned long ContentionCount; // Size=4 Offset=20
    unsigned long Spare[2]; // Size=8 Offset=24
} RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG;
typedef struct _DISK_HISTOGRAM // Size=72
{
    union _LARGE_INTEGER DiskSize; // Size=8 Offset=0
    union _LARGE_INTEGER Start; // Size=8 Offset=8
    union _LARGE_INTEGER End; // Size=8 Offset=16
    union _LARGE_INTEGER Average; // Size=8 Offset=24
    union _LARGE_INTEGER AverageRead; // Size=8 Offset=32
    union _LARGE_INTEGER AverageWrite; // Size=8 Offset=40
    unsigned long Granularity; // Size=4 Offset=48
    unsigned long Size; // Size=4 Offset=52
    unsigned long ReadCount; // Size=4 Offset=56
    unsigned long WriteCount; // Size=4 Offset=60
    struct _HISTOGRAM_BUCKET * Histogram; // Size=4 Offset=64
} DISK_HISTOGRAM, *PDISK_HISTOGRAM;
typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO // Size=32
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwRecipientIndex; // Size=4 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=8
    struct _CRYPTOAPI_BLOB EncryptedKey; // Size=8 Offset=20
    unsigned long dwFlags; // Size=4 Offset=28
} CMSG_MAIL_LIST_ENCRYPT_INFO, *PCMSG_MAIL_LIST_ENCRYPT_INFO;
typedef struct tagEMRPOLYLINE16 // Size=32
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long cpts; // Size=4 Offset=24
    struct tagPOINTS apts[1]; // Size=4 Offset=28
} *PtagEMRPOLYLINE16;
typedef struct tagMENUBARINFO // Size=32
{
    unsigned long cbSize; // Size=4 Offset=0
    struct tagRECT rcBar; // Size=16 Offset=4
    struct HMENU__ * hMenu; // Size=4 Offset=20
    struct HWND__ * hwndMenu; // Size=4 Offset=24
    struct
    {
        int fBarFocused: 1; // Size=4 Offset=28 BitOffset=0 BitCount=1
        int fFocused: 1; // Size=4 Offset=28 BitOffset=1 BitCount=1
    };
} *PtagMENUBARINFO;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION // Size=24
{
    unsigned long ProcessorMask; // Size=4 Offset=0
    enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship; // Size=4 Offset=4
    union
    {
        struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::___unnamed1376::___unnamed1376 ProcessorCore; // Size=1 Offset=8
        struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::___unnamed1377::___unnamed1377 NumaNode; // Size=4 Offset=8
        unsigned __int64 Reserved[2]; // Size=16 Offset=8
    };
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;
typedef struct _CERT_GENERAL_SUBTREE // Size=24
{
    struct _CERT_ALT_NAME_ENTRY Base; // Size=12 Offset=0
    unsigned long dwMinimum; // Size=4 Offset=12
    int fMaximum; // Size=4 Offset=16
    unsigned long dwMaximum; // Size=4 Offset=20
} CERT_GENERAL_SUBTREE, *PCERT_GENERAL_SUBTREE;
typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO // Size=32
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwRecipientIndex; // Size=4 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=8
    struct _CRYPTOAPI_BLOB EncryptedKey; // Size=8 Offset=20
    unsigned long dwFlags; // Size=4 Offset=28
} CMSG_KEY_TRANS_ENCRYPT_INFO, *PCMSG_KEY_TRANS_ENCRYPT_INFO;
typedef struct _CRL_REVOCATION_INFO // Size=12
{
    struct _CRL_ENTRY * pCrlEntry; // Size=4 Offset=0
    struct _CRL_CONTEXT * pCrlContext; // Size=4 Offset=4
    struct _CERT_CHAIN_CONTEXT * pCrlIssuerChain; // Size=4 Offset=8
} CRL_REVOCATION_INFO, *PCRL_REVOCATION_INFO;
typedef struct _BIDI_REQUEST_CONTAINER // Size=32
{
    unsigned long Version; // Size=4 Offset=0
    unsigned long Flags; // Size=4 Offset=4
    unsigned long Count; // Size=4 Offset=8
    struct _BIDI_REQUEST_DATA aData[1]; // Size=20 Offset=12
} BIDI_REQUEST_CONTAINER, *PBIDI_REQUEST_CONTAINER;
typedef union tagBINDPTR // Size=4
{
    struct tagFUNCDESC * lpfuncdesc; // Size=4 Offset=0
    struct tagVARDESC * lpvardesc; // Size=4 Offset=0
    struct ITypeComp * lptcomp; // Size=4 Offset=0
} *PtagBINDPTR;
typedef struct _SHELLEXECUTEINFOA // Size=60
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long fMask; // Size=4 Offset=4
    struct HWND__ * hwnd; // Size=4 Offset=8
    char * lpVerb; // Size=4 Offset=12
    char * lpFile; // Size=4 Offset=16
    char * lpParameters; // Size=4 Offset=20
    char * lpDirectory; // Size=4 Offset=24
    int nShow; // Size=4 Offset=28
    struct HINSTANCE__ * hInstApp; // Size=4 Offset=32
    void * lpIDList; // Size=4 Offset=36
    char * lpClass; // Size=4 Offset=40
    struct HKEY__ * hkeyClass; // Size=4 Offset=44
    unsigned long dwHotKey; // Size=4 Offset=48
    union
    {
        void * hIcon; // Size=4 Offset=52
        void * hMonitor; // Size=4 Offset=52
    };
    void * hProcess; // Size=4 Offset=56
} SHELLEXECUTEINFOA, *PSHELLEXECUTEINFOA;
typedef struct _NTFS_STATISTICS // Size=212
{
    unsigned long LogFileFullExceptions; // Size=4 Offset=0
    unsigned long OtherExceptions; // Size=4 Offset=4
    unsigned long MftReads; // Size=4 Offset=8
    unsigned long MftReadBytes; // Size=4 Offset=12
    unsigned long MftWrites; // Size=4 Offset=16
    unsigned long MftWriteBytes; // Size=4 Offset=20
    struct _NTFS_STATISTICS::___unnamed1538 MftWritesUserLevel; // Size=8 Offset=24
    unsigned short MftWritesFlushForLogFileFull; // Size=2 Offset=32
    unsigned short MftWritesLazyWriter; // Size=2 Offset=34
    unsigned short MftWritesUserRequest; // Size=2 Offset=36
    unsigned long Mft2Writes; // Size=4 Offset=40
    unsigned long Mft2WriteBytes; // Size=4 Offset=44
    struct _NTFS_STATISTICS::___unnamed1538 Mft2WritesUserLevel; // Size=8 Offset=48
    unsigned short Mft2WritesFlushForLogFileFull; // Size=2 Offset=56
    unsigned short Mft2WritesLazyWriter; // Size=2 Offset=58
    unsigned short Mft2WritesUserRequest; // Size=2 Offset=60
    unsigned long RootIndexReads; // Size=4 Offset=64
    unsigned long RootIndexReadBytes; // Size=4 Offset=68
    unsigned long RootIndexWrites; // Size=4 Offset=72
    unsigned long RootIndexWriteBytes; // Size=4 Offset=76
    unsigned long BitmapReads; // Size=4 Offset=80
    unsigned long BitmapReadBytes; // Size=4 Offset=84
    unsigned long BitmapWrites; // Size=4 Offset=88
    unsigned long BitmapWriteBytes; // Size=4 Offset=92
    unsigned short BitmapWritesFlushForLogFileFull; // Size=2 Offset=96
    unsigned short BitmapWritesLazyWriter; // Size=2 Offset=98
    unsigned short BitmapWritesUserRequest; // Size=2 Offset=100
    struct _NTFS_STATISTICS::___unnamed1539 BitmapWritesUserLevel; // Size=6 Offset=102
    unsigned long MftBitmapReads; // Size=4 Offset=108
    unsigned long MftBitmapReadBytes; // Size=4 Offset=112
    unsigned long MftBitmapWrites; // Size=4 Offset=116
    unsigned long MftBitmapWriteBytes; // Size=4 Offset=120
    unsigned short MftBitmapWritesFlushForLogFileFull; // Size=2 Offset=124
    unsigned short MftBitmapWritesLazyWriter; // Size=2 Offset=126
    unsigned short MftBitmapWritesUserRequest; // Size=2 Offset=128
    struct _NTFS_STATISTICS::___unnamed1538 MftBitmapWritesUserLevel; // Size=8 Offset=130
    unsigned long UserIndexReads; // Size=4 Offset=140
    unsigned long UserIndexReadBytes; // Size=4 Offset=144
    unsigned long UserIndexWrites; // Size=4 Offset=148
    unsigned long UserIndexWriteBytes; // Size=4 Offset=152
    unsigned long LogFileReads; // Size=4 Offset=156
    unsigned long LogFileReadBytes; // Size=4 Offset=160
    unsigned long LogFileWrites; // Size=4 Offset=164
    unsigned long LogFileWriteBytes; // Size=4 Offset=168
    struct _NTFS_STATISTICS::___unnamed1540 Allocate; // Size=40 Offset=172
} NTFS_STATISTICS, *PNTFS_STATISTICS;
typedef struct _CERT_AUTHORITY_KEY_ID2_INFO // Size=24
{
    struct _CRYPTOAPI_BLOB KeyId; // Size=8 Offset=0
    struct _CERT_ALT_NAME_INFO AuthorityCertIssuer; // Size=8 Offset=8
    struct _CRYPTOAPI_BLOB AuthorityCertSerialNumber; // Size=8 Offset=16
} CERT_AUTHORITY_KEY_ID2_INFO, *PCERT_AUTHORITY_KEY_ID2_INFO;
typedef struct tagCREATESTRUCTW // Size=48
{
    void * lpCreateParams; // Size=4 Offset=0
    struct HINSTANCE__ * hInstance; // Size=4 Offset=4
    struct HMENU__ * hMenu; // Size=4 Offset=8
    struct HWND__ * hwndParent; // Size=4 Offset=12
    int cy; // Size=4 Offset=16
    int cx; // Size=4 Offset=20
    int y; // Size=4 Offset=24
    int x; // Size=4 Offset=28
    long style; // Size=4 Offset=32
    unsigned short * lpszName; // Size=4 Offset=36
    unsigned short * lpszClass; // Size=4 Offset=40
    unsigned long dwExStyle; // Size=4 Offset=44
} *PtagCREATESTRUCTW;
typedef struct _PERF_DATA_BLOCK // Size=88
{
    unsigned short Signature[4]; // Size=8 Offset=0
    unsigned long LittleEndian; // Size=4 Offset=8
    unsigned long Version; // Size=4 Offset=12
    unsigned long Revision; // Size=4 Offset=16
    unsigned long TotalByteLength; // Size=4 Offset=20
    unsigned long HeaderLength; // Size=4 Offset=24
    unsigned long NumObjectTypes; // Size=4 Offset=28
    long DefaultObject; // Size=4 Offset=32
    struct _SYSTEMTIME SystemTime; // Size=16 Offset=36
    union _LARGE_INTEGER PerfTime; // Size=8 Offset=56
    union _LARGE_INTEGER PerfFreq; // Size=8 Offset=64
    union _LARGE_INTEGER PerfTime100nSec; // Size=8 Offset=72
    unsigned long SystemNameLength; // Size=4 Offset=80
    unsigned long SystemNameOffset; // Size=4 Offset=84
} PERF_DATA_BLOCK, *PPERF_DATA_BLOCK;
typedef struct _PERF_BIN // Size=24
{
    unsigned long NumberOfBins; // Size=4 Offset=0
    unsigned long TypeOfBin; // Size=4 Offset=4
    struct _BIN_RANGE BinsRanges[1]; // Size=16 Offset=8
} PERF_BIN, *PPERF_BIN;
typedef struct _SHELLEXECUTEINFOW // Size=60
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long fMask; // Size=4 Offset=4
    struct HWND__ * hwnd; // Size=4 Offset=8
    unsigned short * lpVerb; // Size=4 Offset=12
    unsigned short * lpFile; // Size=4 Offset=16
    unsigned short * lpParameters; // Size=4 Offset=20
    unsigned short * lpDirectory; // Size=4 Offset=24
    int nShow; // Size=4 Offset=28
    struct HINSTANCE__ * hInstApp; // Size=4 Offset=32
    void * lpIDList; // Size=4 Offset=36
    unsigned short * lpClass; // Size=4 Offset=40
    struct HKEY__ * hkeyClass; // Size=4 Offset=44
    unsigned long dwHotKey; // Size=4 Offset=48
    union
    {
        void * hIcon; // Size=4 Offset=52
        void * hMonitor; // Size=4 Offset=52
    };
    void * hProcess; // Size=4 Offset=56
} SHELLEXECUTEINFOW, *PSHELLEXECUTEINFOW;
typedef struct _CERT_CHAIN // Size=36
{
    unsigned long cCerts; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB * certs; // Size=4 Offset=4
    struct _CRYPT_KEY_PROV_INFO keyLocatorInfo; // Size=28 Offset=8
} CERT_CHAIN, *PCERT_CHAIN;
typedef struct _READ_ELEMENT_ADDRESS_INFO // Size=104
{
    unsigned long NumberOfElements; // Size=4 Offset=0
    struct _CHANGER_ELEMENT_STATUS ElementStatus[1]; // Size=100 Offset=4
} READ_ELEMENT_ADDRESS_INFO, *PREAD_ELEMENT_ADDRESS_INFO;
typedef struct _DRIVE_LAYOUT_INFORMATION // Size=40
{
    unsigned long PartitionCount; // Size=4 Offset=0
    unsigned long Signature; // Size=4 Offset=4
    struct _PARTITION_INFORMATION PartitionEntry[1]; // Size=32 Offset=8
} DRIVE_LAYOUT_INFORMATION, *PDRIVE_LAYOUT_INFORMATION;
typedef struct tagEMRPOLYDRAW16 // Size=36
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long cpts; // Size=4 Offset=24
    struct tagPOINTS apts[1]; // Size=4 Offset=28
    unsigned char abTypes[1]; // Size=1 Offset=32
} *PtagEMRPOLYDRAW16;
typedef struct tagEMRPOLYPOLYLINE16 // Size=40
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long nPolys; // Size=4 Offset=24
    unsigned long cpts; // Size=4 Offset=28
    unsigned long aPolyCounts[1]; // Size=4 Offset=32
    struct tagPOINTS apts[1]; // Size=4 Offset=36
} *PtagEMRPOLYPOLYLINE16;
typedef struct tagEMRCREATEPEN // Size=28
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihPen; // Size=4 Offset=8
    struct tagLOGPEN lopn; // Size=16 Offset=12
} *PtagEMRCREATEPEN;
typedef struct _MIDL_STUBLESS_PROXY_INFO // Size=24
{
    struct _MIDL_STUB_DESC * pStubDesc; // Size=4 Offset=0
    unsigned char * ProcFormatString; // Size=4 Offset=4
    unsigned short * FormatStringOffset; // Size=4 Offset=8
    struct _RPC_SYNTAX_IDENTIFIER * pTransferSyntax; // Size=4 Offset=12
    unsigned long nCount; // Size=4 Offset=16
    struct _MIDL_SYNTAX_INFO * pSyntaxInfo; // Size=4 Offset=20
} MIDL_STUBLESS_PROXY_INFO, *PMIDL_STUBLESS_PROXY_INFO;
typedef struct tagSTATDATA // Size=32
{
    struct tagFORMATETC formatetc; // Size=20 Offset=0
    unsigned long advf; // Size=4 Offset=20
    struct IAdviseSink * pAdvSink; // Size=4 Offset=24
    unsigned long dwConnection; // Size=4 Offset=28
} *PtagSTATDATA;
typedef struct _tagRemBINDINFO // Size=72
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned short * szExtraInfo; // Size=4 Offset=4
    unsigned long grfBindInfoF; // Size=4 Offset=8
    unsigned long dwBindVerb; // Size=4 Offset=12
    unsigned short * szCustomVerb; // Size=4 Offset=16
    unsigned long cbstgmedData; // Size=4 Offset=20
    unsigned long dwOptions; // Size=4 Offset=24
    unsigned long dwOptionsFlags; // Size=4 Offset=28
    unsigned long dwCodePage; // Size=4 Offset=32
    struct _REMSECURITY_ATTRIBUTES securityAttributes; // Size=12 Offset=36
    struct _GUID iid; // Size=16 Offset=48
    struct IUnknown * pUnk; // Size=4 Offset=64
    unsigned long dwReserved; // Size=4 Offset=68
} tagRemBINDINFO, *PtagRemBINDINFO;
typedef struct _CTL_ANY_SUBJECT_INFO // Size=20
{
    struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm; // Size=12 Offset=0
    struct _CRYPTOAPI_BLOB SubjectIdentifier; // Size=8 Offset=12
} CTL_ANY_SUBJECT_INFO, *PCTL_ANY_SUBJECT_INFO;
typedef struct tagEMRMASKBLT // Size=128
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    long xDest; // Size=4 Offset=24
    long yDest; // Size=4 Offset=28
    long cxDest; // Size=4 Offset=32
    long cyDest; // Size=4 Offset=36
    unsigned long dwRop; // Size=4 Offset=40
    long xSrc; // Size=4 Offset=44
    long ySrc; // Size=4 Offset=48
    struct tagXFORM xformSrc; // Size=24 Offset=52
    unsigned long crBkColorSrc; // Size=4 Offset=76
    unsigned long iUsageSrc; // Size=4 Offset=80
    unsigned long offBmiSrc; // Size=4 Offset=84
    unsigned long cbBmiSrc; // Size=4 Offset=88
    unsigned long offBitsSrc; // Size=4 Offset=92
    unsigned long cbBitsSrc; // Size=4 Offset=96
    long xMask; // Size=4 Offset=100
    long yMask; // Size=4 Offset=104
    unsigned long iUsageMask; // Size=4 Offset=108
    unsigned long offBmiMask; // Size=4 Offset=112
    unsigned long cbBmiMask; // Size=4 Offset=116
    unsigned long offBitsMask; // Size=4 Offset=120
    unsigned long cbBitsMask; // Size=4 Offset=124
} *PtagEMRMASKBLT;
typedef struct OPENCARDNAME_EXW // Size=72
{
    unsigned long dwStructSize; // Size=4 Offset=0
    unsigned long hSCardContext; // Size=4 Offset=4
    struct HWND__ * hwndOwner; // Size=4 Offset=8
    unsigned long dwFlags; // Size=4 Offset=12
    unsigned short * lpstrTitle; // Size=4 Offset=16
    unsigned short * lpstrSearchDesc; // Size=4 Offset=20
    struct HICON__ * hIcon; // Size=4 Offset=24
    struct OPENCARD_SEARCH_CRITERIAW * pOpenCardSearchCriteria; // Size=4 Offset=28
    unsigned long ( * lpfnConnect)(unsigned long,unsigned short *,unsigned short *,void *); // Size=4 Offset=32
    void * pvUserData; // Size=4 Offset=36
    unsigned long dwShareMode; // Size=4 Offset=40
    unsigned long dwPreferredProtocols; // Size=4 Offset=44
    unsigned short * lpstrRdr; // Size=4 Offset=48
    unsigned long nMaxRdr; // Size=4 Offset=52
    unsigned short * lpstrCard; // Size=4 Offset=56
    unsigned long nMaxCard; // Size=4 Offset=60
    unsigned long dwActiveProtocol; // Size=4 Offset=64
    unsigned long hCardHandle; // Size=4 Offset=68
} *POPENCARDNAME_EXW;
typedef struct _tagPROTOCOLFILTERDATA // Size=20
{
    unsigned long cbSize; // Size=4 Offset=0
    struct IInternetProtocolSink * pProtocolSink; // Size=4 Offset=4
    struct IInternetProtocol * pProtocol; // Size=4 Offset=8
    struct IUnknown * pUnk; // Size=4 Offset=12
    unsigned long dwFilterFlags; // Size=4 Offset=16
} tagPROTOCOLFILTERDATA, *PtagPROTOCOLFILTERDATA;
typedef struct _IMAGE_NT_HEADERS64 // Size=264
{
    unsigned long Signature; // Size=4 Offset=0
    struct _IMAGE_FILE_HEADER FileHeader; // Size=20 Offset=4
    struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader; // Size=240 Offset=24
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64;
typedef struct tagEMRGRADIENTFILL // Size=52
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long nVer; // Size=4 Offset=24
    unsigned long nTri; // Size=4 Offset=28
    unsigned long ulMode; // Size=4 Offset=32
    struct _TRIVERTEX Ver[1]; // Size=16 Offset=36
} *PtagEMRGRADIENTFILL;
typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO // Size=20
{
    struct _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm; // Size=12 Offset=0
    struct _CRYPTOAPI_BLOB EncryptedPrivateKey; // Size=8 Offset=12
} CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
typedef struct tagEMRCREATEPALETTE // Size=20
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihPal; // Size=4 Offset=8
    struct tagLOGPALETTE lgpl; // Size=8 Offset=12
} *PtagEMRCREATEPALETTE;
typedef struct tagDRAWITEMSTRUCT // Size=48
{
    unsigned int CtlType; // Size=4 Offset=0
    unsigned int CtlID; // Size=4 Offset=4
    unsigned int itemID; // Size=4 Offset=8
    unsigned int itemAction; // Size=4 Offset=12
    unsigned int itemState; // Size=4 Offset=16
    struct HWND__ * hwndItem; // Size=4 Offset=20
    struct HDC__ * hDC; // Size=4 Offset=24
    struct tagRECT rcItem; // Size=16 Offset=28
    unsigned long itemData; // Size=4 Offset=44
} *PtagDRAWITEMSTRUCT;
typedef struct _tagStartParam // Size=24
{
    struct _GUID iid; // Size=16 Offset=0
    struct IBindCtx * pIBindCtx; // Size=4 Offset=16
    struct IUnknown * pItf; // Size=4 Offset=20
} tagStartParam, *PtagStartParam;
typedef struct _DEVICE_MEDIA_INFO::__unnamed::__unnamed // Size=32
{
    union _LARGE_INTEGER Cylinders; // Size=8 Offset=0
    enum _STORAGE_MEDIA_TYPE MediaType; // Size=4 Offset=8
    unsigned long TracksPerCylinder; // Size=4 Offset=12
    unsigned long SectorsPerTrack; // Size=4 Offset=16
    unsigned long BytesPerSector; // Size=4 Offset=20
    unsigned long NumberMediaSides; // Size=4 Offset=24
    unsigned long MediaCharacteristics; // Size=4 Offset=28
} DEVICE_MEDIA_INFO::__unnamed::__unnamed, *PDEVICE_MEDIA_INFO::__unnamed::__unnamed;
typedef struct tagEMRBITBLT // Size=100
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    long xDest; // Size=4 Offset=24
    long yDest; // Size=4 Offset=28
    long cxDest; // Size=4 Offset=32
    long cyDest; // Size=4 Offset=36
    unsigned long dwRop; // Size=4 Offset=40
    long xSrc; // Size=4 Offset=44
    long ySrc; // Size=4 Offset=48
    struct tagXFORM xformSrc; // Size=24 Offset=52
    unsigned long crBkColorSrc; // Size=4 Offset=76
    unsigned long iUsageSrc; // Size=4 Offset=80
    unsigned long offBmiSrc; // Size=4 Offset=84
    unsigned long cbBmiSrc; // Size=4 Offset=88
    unsigned long offBitsSrc; // Size=4 Offset=92
    unsigned long cbBitsSrc; // Size=4 Offset=96
} *PtagEMRBITBLT;
typedef struct _MIDL_SERVER_INFO_ // Size=32
{
    struct _MIDL_STUB_DESC * pStubDesc; // Size=4 Offset=0
    long ( * * DispatchTable)(); // Size=4 Offset=4
    unsigned char * ProcString; // Size=4 Offset=8
    unsigned short * FmtStringOffset; // Size=4 Offset=12
    void ( * * ThunkTable)(struct _MIDL_STUB_MESSAGE *); // Size=4 Offset=16
    struct _RPC_SYNTAX_IDENTIFIER * pTransferSyntax; // Size=4 Offset=20
    unsigned long nCount; // Size=4 Offset=24
    struct _MIDL_SYNTAX_INFO * pSyntaxInfo; // Size=4 Offset=28
} MIDL_SERVER_INFO_, *PMIDL_SERVER_INFO_;
typedef struct _CRYPT_PROVIDER_CERT // Size=60
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _CERT_CONTEXT * pCert; // Size=4 Offset=4
    int fCommercial; // Size=4 Offset=8
    int fTrustedRoot; // Size=4 Offset=12
    int fSelfSigned; // Size=4 Offset=16
    int fTestCert; // Size=4 Offset=20
    unsigned long dwRevokedReason; // Size=4 Offset=24
    unsigned long dwConfidence; // Size=4 Offset=28
    unsigned long dwError; // Size=4 Offset=32
    struct _CTL_CONTEXT * pTrustListContext; // Size=4 Offset=36
    int fTrustListSignerCert; // Size=4 Offset=40
    struct _CTL_CONTEXT * pCtlContext; // Size=4 Offset=44
    unsigned long dwCtlError; // Size=4 Offset=48
    int fIsCyclic; // Size=4 Offset=52
    struct _CERT_CHAIN_ELEMENT * pChainElement; // Size=4 Offset=56
} CRYPT_PROVIDER_CERT, *PCRYPT_PROVIDER_CERT;
typedef struct _tagSTACKFRAME // Size=164
{
    struct _tagADDRESS AddrPC; // Size=12 Offset=0
    struct _tagADDRESS AddrReturn; // Size=12 Offset=12
    struct _tagADDRESS AddrFrame; // Size=12 Offset=24
    struct _tagADDRESS AddrStack; // Size=12 Offset=36
    void * FuncTableEntry; // Size=4 Offset=48
    unsigned long Params[4]; // Size=16 Offset=52
    int Far; // Size=4 Offset=68
    int Virtual; // Size=4 Offset=72
    unsigned long Reserved[3]; // Size=12 Offset=76
    struct _KDHELP KdHelp; // Size=64 Offset=88
    struct _tagADDRESS AddrBStore; // Size=12 Offset=152
} tagSTACKFRAME, *PtagSTACKFRAME;
typedef struct _MINIDUMP_THREAD // Size=48
{
    unsigned int ThreadId; // Size=4 Offset=0
    unsigned int SuspendCount; // Size=4 Offset=4
    unsigned int PriorityClass; // Size=4 Offset=8
    unsigned int Priority; // Size=4 Offset=12
    unsigned __int64 Teb; // Size=8 Offset=16
    struct _MINIDUMP_MEMORY_DESCRIPTOR Stack; // Size=16 Offset=24
    struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext; // Size=8 Offset=40
} MINIDUMP_THREAD, *PMINIDUMP_THREAD;
typedef struct _MINIDUMP_THREAD_EX // Size=64
{
    unsigned int ThreadId; // Size=4 Offset=0
    unsigned int SuspendCount; // Size=4 Offset=4
    unsigned int PriorityClass; // Size=4 Offset=8
    unsigned int Priority; // Size=4 Offset=12
    unsigned __int64 Teb; // Size=8 Offset=16
    struct _MINIDUMP_MEMORY_DESCRIPTOR Stack; // Size=16 Offset=24
    struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext; // Size=8 Offset=40
    struct _MINIDUMP_MEMORY_DESCRIPTOR BackingStore; // Size=16 Offset=48
} MINIDUMP_THREAD_EX, *PMINIDUMP_THREAD_EX;
typedef struct _tagSTACKFRAME64 // Size=264
{
    struct _tagADDRESS64 AddrPC; // Size=16 Offset=0
    struct _tagADDRESS64 AddrReturn; // Size=16 Offset=16
    struct _tagADDRESS64 AddrFrame; // Size=16 Offset=32
    struct _tagADDRESS64 AddrStack; // Size=16 Offset=48
    struct _tagADDRESS64 AddrBStore; // Size=16 Offset=64
    void * FuncTableEntry; // Size=4 Offset=80
    unsigned __int64 Params[4]; // Size=32 Offset=88
    int Far; // Size=4 Offset=120
    int Virtual; // Size=4 Offset=124
    unsigned __int64 Reserved[3]; // Size=24 Offset=128
    struct _KDHELP64 KdHelp; // Size=112 Offset=152
} tagSTACKFRAME64, *PtagSTACKFRAME64;
typedef struct _MINIDUMP_MODULE_LIST // Size=4
{
    unsigned int NumberOfModules; // Size=4 Offset=0
} MINIDUMP_MODULE_LIST, *PMINIDUMP_MODULE_LIST;
typedef struct _MINIDUMP_SYSTEM_INFO // Size=56
{
    unsigned short ProcessorArchitecture; // Size=2 Offset=0
    unsigned short ProcessorLevel; // Size=2 Offset=2
    unsigned short ProcessorRevision; // Size=2 Offset=4
    union
    {
        unsigned short Reserved0; // Size=2 Offset=6
        struct
        {
            unsigned char NumberOfProcessors; // Size=1 Offset=6
            unsigned char ProductType; // Size=1 Offset=7
        };
    };
    unsigned int MajorVersion; // Size=4 Offset=8
    unsigned int MinorVersion; // Size=4 Offset=12
    unsigned int BuildNumber; // Size=4 Offset=16
    unsigned int PlatformId; // Size=4 Offset=20
    unsigned long CSDVersionRva; // Size=4 Offset=24
    union
    {
        unsigned int Reserved1; // Size=4 Offset=28
        struct
        {
            unsigned short SuiteMask; // Size=2 Offset=28
            unsigned short Reserved2; // Size=2 Offset=30
        };
    };
    union _MINIDUMP_SYSTEM_INFO::_CPU_INFORMATION Cpu; // Size=24 Offset=32
} MINIDUMP_SYSTEM_INFO, *PMINIDUMP_SYSTEM_INFO;
typedef struct tagEXCEPTION_VISUALCPP_DEBUG_INFO // Size=24
{
    unsigned long dwType; // Size=4 Offset=0
    union
    {
        struct tagEXCEPTION_VISUALCPP_DEBUG_INFO::___unnamed3055::___unnamed3055 SetName; // Size=12 Offset=4
        struct tagEXCEPTION_VISUALCPP_DEBUG_INFO::___unnamed3056::___unnamed3056 DebuggerProbe; // Size=8 Offset=4
        struct tagEXCEPTION_VISUALCPP_DEBUG_INFO::___unnamed3057::___unnamed3057 RuntimeError; // Size=20 Offset=4
    };
} *PtagEXCEPTION_VISUALCPP_DEBUG_INFO;
typedef struct tagRegion // Size=16836
{
    int indGroupUse; // Size=4 Offset=0
    char cntRegionSize[64]; // Size=64 Offset=4
    unsigned int bitvGroupHi[32]; // Size=128 Offset=68
    unsigned int bitvGroupLo[32]; // Size=128 Offset=196
    struct tagGroup grpHeadList[32]; // Size=16512 Offset=324
} *PtagRegion;
typedef struct _s_FuncInfo // Size=32
{
    struct
    {
        unsigned int magicNumber: 29; // Size=4 Offset=0 BitOffset=0 BitCount=29
        unsigned int bbtFlags: 3; // Size=4 Offset=0 BitOffset=29 BitCount=3
    };
    int maxState; // Size=4 Offset=4
    struct _s_UnwindMapEntry * pUnwindMap; // Size=4 Offset=8
    unsigned int nTryBlocks; // Size=4 Offset=12
    struct _s_TryBlockMapEntry * pTryBlockMap; // Size=4 Offset=16
    unsigned int nIPMapEntries; // Size=4 Offset=20
    void * pIPtoStateMap; // Size=4 Offset=24
    struct _s_ESTypeList * pESTypeList; // Size=4 Offset=28
} s_FuncInfo, *Ps_FuncInfo;
typedef struct EHExceptionRecord // Size=32
{
    unsigned long ExceptionCode; // Size=4 Offset=0
    unsigned long ExceptionFlags; // Size=4 Offset=4
    struct _EXCEPTION_RECORD * ExceptionRecord; // Size=4 Offset=8
    void * ExceptionAddress; // Size=4 Offset=12
    unsigned long NumberParameters; // Size=4 Offset=16
    struct EHExceptionRecord::EHParameters params; // Size=12 Offset=20
} *PEHExceptionRecord;
typedef struct _PROPSHEETPAGEA // Size=48
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    union
    {
        char * pszTemplate; // Size=4 Offset=12
        struct DLGTEMPLATE * pResource; // Size=4 Offset=12
    };
    union
    {
        struct HICON__ * hIcon; // Size=4 Offset=16
        char * pszIcon; // Size=4 Offset=16
    };
    char * pszTitle; // Size=4 Offset=20
    int ( * pfnDlgProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=24
    long lParam; // Size=4 Offset=28
    unsigned int ( * pfnCallback)(struct HWND__ *,unsigned int,struct _PROPSHEETPAGEA *); // Size=4 Offset=32
    unsigned int * pcRefParent; // Size=4 Offset=36
    char * pszHeaderTitle; // Size=4 Offset=40
    char * pszHeaderSubTitle; // Size=4 Offset=44
} PROPSHEETPAGEA, *PPROPSHEETPAGEA;
typedef struct _PROPSHEETPAGEA_V3 // Size=52
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    union
    {
        char * pszTemplate; // Size=4 Offset=12
        struct DLGTEMPLATE * pResource; // Size=4 Offset=12
    };
    union
    {
        struct HICON__ * hIcon; // Size=4 Offset=16
        char * pszIcon; // Size=4 Offset=16
    };
    char * pszTitle; // Size=4 Offset=20
    int ( * pfnDlgProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=24
    long lParam; // Size=4 Offset=28
    unsigned int ( * pfnCallback)(struct HWND__ *,unsigned int,struct _PROPSHEETPAGEA *); // Size=4 Offset=32
    unsigned int * pcRefParent; // Size=4 Offset=36
    char * pszHeaderTitle; // Size=4 Offset=40
    char * pszHeaderSubTitle; // Size=4 Offset=44
    void * hActCtx; // Size=4 Offset=48
} PROPSHEETPAGEA_V3, *PPROPSHEETPAGEA_V3;
typedef struct _CERT_CHAIN_ELEMENT // Size=32
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CERT_CONTEXT * pCertContext; // Size=4 Offset=4
    struct _CERT_TRUST_STATUS TrustStatus; // Size=8 Offset=8
    struct _CERT_REVOCATION_INFO * pRevocationInfo; // Size=4 Offset=16
    struct _CTL_USAGE * pIssuanceUsage; // Size=4 Offset=20
    struct _CTL_USAGE * pApplicationUsage; // Size=4 Offset=24
    unsigned short * pwszExtendedErrorInfo; // Size=4 Offset=28
} CERT_CHAIN_ELEMENT, *PCERT_CHAIN_ELEMENT;
typedef struct _SHCREATEPROCESSINFOW // Size=52
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long fMask; // Size=4 Offset=4
    struct HWND__ * hwnd; // Size=4 Offset=8
    unsigned short * pszFile; // Size=4 Offset=12
    unsigned short * pszParameters; // Size=4 Offset=16
    unsigned short * pszCurrentDirectory; // Size=4 Offset=20
    void * hUserToken; // Size=4 Offset=24
    struct _SECURITY_ATTRIBUTES * lpProcessAttributes; // Size=4 Offset=28
    struct _SECURITY_ATTRIBUTES * lpThreadAttributes; // Size=4 Offset=32
    int bInheritHandles; // Size=4 Offset=36
    unsigned long dwCreationFlags; // Size=4 Offset=40
    struct _STARTUPINFOW * lpStartupInfo; // Size=4 Offset=44
    struct _PROCESS_INFORMATION * lpProcessInformation; // Size=4 Offset=48
} SHCREATEPROCESSINFOW, *PSHCREATEPROCESSINFOW;
typedef struct tagEMREXTCREATEFONTINDIRECTW // Size=332
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihFont; // Size=4 Offset=8
    struct tagEXTLOGFONTW elfw; // Size=320 Offset=12
} *PtagEMREXTCREATEFONTINDIRECTW;
typedef struct tagEMRCREATECOLORSPACEW // Size=612
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihCS; // Size=4 Offset=8
    struct tagLOGCOLORSPACEW lcs; // Size=588 Offset=12
    unsigned long dwFlags; // Size=4 Offset=600
    unsigned long cbData; // Size=4 Offset=604
    unsigned char Data[1]; // Size=1 Offset=608
} *PtagEMRCREATECOLORSPACEW;
typedef struct _CERT_SIGNED_CONTENT_INFO // Size=32
{
    struct _CRYPTOAPI_BLOB ToBeSigned; // Size=8 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm; // Size=12 Offset=8
    struct _CRYPT_BIT_BLOB Signature; // Size=12 Offset=20
} CERT_SIGNED_CONTENT_INFO, *PCERT_SIGNED_CONTENT_INFO;
typedef struct tagWNDCLASSEXA // Size=48
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned int style; // Size=4 Offset=4
    long ( * lpfnWndProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=8
    int cbClsExtra; // Size=4 Offset=12
    int cbWndExtra; // Size=4 Offset=16
    struct HINSTANCE__ * hInstance; // Size=4 Offset=20
    struct HICON__ * hIcon; // Size=4 Offset=24
    struct HICON__ * hCursor; // Size=4 Offset=28
    struct HBRUSH__ * hbrBackground; // Size=4 Offset=32
    char * lpszMenuName; // Size=4 Offset=36
    char * lpszClassName; // Size=4 Offset=40
    struct HICON__ * hIconSm; // Size=4 Offset=44
} *PtagWNDCLASSEXA;
typedef struct tagCHOOSEFONTA // Size=60
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HDC__ * hDC; // Size=4 Offset=8
    struct tagLOGFONTA * lpLogFont; // Size=4 Offset=12
    int iPointSize; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    unsigned long rgbColors; // Size=4 Offset=24
    long lCustData; // Size=4 Offset=28
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=32
    char * lpTemplateName; // Size=4 Offset=36
    struct HINSTANCE__ * hInstance; // Size=4 Offset=40
    char * lpszStyle; // Size=4 Offset=44
    unsigned short nFontType; // Size=2 Offset=48
    unsigned short ___MISSING_ALIGNMENT__; // Size=2 Offset=50
    int nSizeMin; // Size=4 Offset=52
    int nSizeMax; // Size=4 Offset=56
} *PtagCHOOSEFONTA;
typedef struct _BIN_RESULTS // Size=32
{
    unsigned long NumberOfBins; // Size=4 Offset=0
    struct _BIN_COUNT BinCounts[1]; // Size=24 Offset=8
} BIN_RESULTS, *PBIN_RESULTS;
typedef struct _PROPSHEETPAGEW // Size=48
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    union
    {
        unsigned short * pszTemplate; // Size=4 Offset=12
        struct DLGTEMPLATE * pResource; // Size=4 Offset=12
    };
    union
    {
        struct HICON__ * hIcon; // Size=4 Offset=16
        unsigned short * pszIcon; // Size=4 Offset=16
    };
    unsigned short * pszTitle; // Size=4 Offset=20
    int ( * pfnDlgProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=24
    long lParam; // Size=4 Offset=28
    unsigned int ( * pfnCallback)(struct HWND__ *,unsigned int,struct _PROPSHEETPAGEW *); // Size=4 Offset=32
    unsigned int * pcRefParent; // Size=4 Offset=36
    unsigned short * pszHeaderTitle; // Size=4 Offset=40
    unsigned short * pszHeaderSubTitle; // Size=4 Offset=44
} PROPSHEETPAGEW, *PPROPSHEETPAGEW;
typedef struct _MIDL_SYNTAX_INFO // Size=48
{
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax; // Size=20 Offset=0
    struct RPC_DISPATCH_TABLE * DispatchTable; // Size=4 Offset=20
    unsigned char * ProcString; // Size=4 Offset=24
    unsigned short * FmtStringOffset; // Size=4 Offset=28
    unsigned char * TypeString; // Size=4 Offset=32
    void * aUserMarshalQuadruple; // Size=4 Offset=36
    unsigned long pReserved1; // Size=4 Offset=40
    unsigned long pReserved2; // Size=4 Offset=44
} MIDL_SYNTAX_INFO, *PMIDL_SYNTAX_INFO;
typedef struct _GDI_OBJECT // Size=8
{
    unsigned long ObjectType; // Size=4 Offset=0
    union _GDI_OBJECT::__MIDL_IAdviseSink_0002 u; // Size=4 Offset=4
} GDI_OBJECT, *PGDI_OBJECT;
typedef struct tagPSDA // Size=84
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    void * hDevMode; // Size=4 Offset=8
    void * hDevNames; // Size=4 Offset=12
    unsigned long Flags; // Size=4 Offset=16
    struct tagPOINT ptPaperSize; // Size=8 Offset=20
    struct tagRECT rtMinMargin; // Size=16 Offset=28
    struct tagRECT rtMargin; // Size=16 Offset=44
    struct HINSTANCE__ * hInstance; // Size=4 Offset=60
    long lCustData; // Size=4 Offset=64
    unsigned int ( * lpfnPageSetupHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=68
    unsigned int ( * lpfnPagePaintHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=72
    char * lpPageSetupTemplateName; // Size=4 Offset=76
    void * hPageSetupTemplate; // Size=4 Offset=80
} *PtagPSDA;
typedef struct _OUTLINETEXTMETRICA // Size=212
{
    unsigned int otmSize; // Size=4 Offset=0
    struct tagTEXTMETRICA otmTextMetrics; // Size=56 Offset=4
    unsigned char otmFiller; // Size=1 Offset=60
    struct tagPANOSE otmPanoseNumber; // Size=10 Offset=61
    unsigned int otmfsSelection; // Size=4 Offset=72
    unsigned int otmfsType; // Size=4 Offset=76
    int otmsCharSlopeRise; // Size=4 Offset=80
    int otmsCharSlopeRun; // Size=4 Offset=84
    int otmItalicAngle; // Size=4 Offset=88
    unsigned int otmEMSquare; // Size=4 Offset=92
    int otmAscent; // Size=4 Offset=96
    int otmDescent; // Size=4 Offset=100
    unsigned int otmLineGap; // Size=4 Offset=104
    unsigned int otmsCapEmHeight; // Size=4 Offset=108
    unsigned int otmsXHeight; // Size=4 Offset=112
    struct tagRECT otmrcFontBox; // Size=16 Offset=116
    int otmMacAscent; // Size=4 Offset=132
    int otmMacDescent; // Size=4 Offset=136
    unsigned int otmMacLineGap; // Size=4 Offset=140
    unsigned int otmusMinimumPPEM; // Size=4 Offset=144
    struct tagPOINT otmptSubscriptSize; // Size=8 Offset=148
    struct tagPOINT otmptSubscriptOffset; // Size=8 Offset=156
    struct tagPOINT otmptSuperscriptSize; // Size=8 Offset=164
    struct tagPOINT otmptSuperscriptOffset; // Size=8 Offset=172
    unsigned int otmsStrikeoutSize; // Size=4 Offset=180
    int otmsStrikeoutPosition; // Size=4 Offset=184
    int otmsUnderscoreSize; // Size=4 Offset=188
    int otmsUnderscorePosition; // Size=4 Offset=192
    char * otmpFamilyName; // Size=4 Offset=196
    char * otmpFaceName; // Size=4 Offset=200
    char * otmpStyleName; // Size=4 Offset=204
    char * otmpFullName; // Size=4 Offset=208
} OUTLINETEXTMETRICA, *POUTLINETEXTMETRICA;
typedef struct _PROPSHEETPAGEW_V3 // Size=52
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    union
    {
        unsigned short * pszTemplate; // Size=4 Offset=12
        struct DLGTEMPLATE * pResource; // Size=4 Offset=12
    };
    union
    {
        struct HICON__ * hIcon; // Size=4 Offset=16
        unsigned short * pszIcon; // Size=4 Offset=16
    };
    unsigned short * pszTitle; // Size=4 Offset=20
    int ( * pfnDlgProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=24
    long lParam; // Size=4 Offset=28
    unsigned int ( * pfnCallback)(struct HWND__ *,unsigned int,struct _PROPSHEETPAGEW *); // Size=4 Offset=32
    unsigned int * pcRefParent; // Size=4 Offset=36
    unsigned short * pszHeaderTitle; // Size=4 Offset=40
    unsigned short * pszHeaderSubTitle; // Size=4 Offset=44
    void * hActCtx; // Size=4 Offset=48
} PROPSHEETPAGEW_V3, *PPROPSHEETPAGEW_V3;
typedef struct _OUTLINETEXTMETRICW // Size=216
{
    unsigned int otmSize; // Size=4 Offset=0
    struct tagTEXTMETRICW otmTextMetrics; // Size=60 Offset=4
    unsigned char otmFiller; // Size=1 Offset=64
    struct tagPANOSE otmPanoseNumber; // Size=10 Offset=65
    unsigned int otmfsSelection; // Size=4 Offset=76
    unsigned int otmfsType; // Size=4 Offset=80
    int otmsCharSlopeRise; // Size=4 Offset=84
    int otmsCharSlopeRun; // Size=4 Offset=88
    int otmItalicAngle; // Size=4 Offset=92
    unsigned int otmEMSquare; // Size=4 Offset=96
    int otmAscent; // Size=4 Offset=100
    int otmDescent; // Size=4 Offset=104
    unsigned int otmLineGap; // Size=4 Offset=108
    unsigned int otmsCapEmHeight; // Size=4 Offset=112
    unsigned int otmsXHeight; // Size=4 Offset=116
    struct tagRECT otmrcFontBox; // Size=16 Offset=120
    int otmMacAscent; // Size=4 Offset=136
    int otmMacDescent; // Size=4 Offset=140
    unsigned int otmMacLineGap; // Size=4 Offset=144
    unsigned int otmusMinimumPPEM; // Size=4 Offset=148
    struct tagPOINT otmptSubscriptSize; // Size=8 Offset=152
    struct tagPOINT otmptSubscriptOffset; // Size=8 Offset=160
    struct tagPOINT otmptSuperscriptSize; // Size=8 Offset=168
    struct tagPOINT otmptSuperscriptOffset; // Size=8 Offset=176
    unsigned int otmsStrikeoutSize; // Size=4 Offset=184
    int otmsStrikeoutPosition; // Size=4 Offset=188
    int otmsUnderscoreSize; // Size=4 Offset=192
    int otmsUnderscorePosition; // Size=4 Offset=196
    char * otmpFamilyName; // Size=4 Offset=200
    char * otmpFaceName; // Size=4 Offset=204
    char * otmpStyleName; // Size=4 Offset=208
    char * otmpFullName; // Size=4 Offset=212
} OUTLINETEXTMETRICW, *POUTLINETEXTMETRICW;
typedef struct tagWNDCLASSA // Size=40
{
    unsigned int style; // Size=4 Offset=0
    long ( * lpfnWndProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=4
    int cbClsExtra; // Size=4 Offset=8
    int cbWndExtra; // Size=4 Offset=12
    struct HINSTANCE__ * hInstance; // Size=4 Offset=16
    struct HICON__ * hIcon; // Size=4 Offset=20
    struct HICON__ * hCursor; // Size=4 Offset=24
    struct HBRUSH__ * hbrBackground; // Size=4 Offset=28
    char * lpszMenuName; // Size=4 Offset=32
    char * lpszClassName; // Size=4 Offset=36
} *PtagWNDCLASSA;
typedef struct tagWNDCLASSEXW // Size=48
{
    unsigned int cbSize; // Size=4 Offset=0
    unsigned int style; // Size=4 Offset=4
    long ( * lpfnWndProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=8
    int cbClsExtra; // Size=4 Offset=12
    int cbWndExtra; // Size=4 Offset=16
    struct HINSTANCE__ * hInstance; // Size=4 Offset=20
    struct HICON__ * hIcon; // Size=4 Offset=24
    struct HICON__ * hCursor; // Size=4 Offset=28
    struct HBRUSH__ * hbrBackground; // Size=4 Offset=32
    unsigned short * lpszMenuName; // Size=4 Offset=36
    unsigned short * lpszClassName; // Size=4 Offset=40
    struct HICON__ * hIconSm; // Size=4 Offset=44
} *PtagWNDCLASSEXW;
typedef struct _PROPSHEETPAGEA_V1 // Size=40
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    union
    {
        char * pszTemplate; // Size=4 Offset=12
        struct DLGTEMPLATE * pResource; // Size=4 Offset=12
    };
    union
    {
        struct HICON__ * hIcon; // Size=4 Offset=16
        char * pszIcon; // Size=4 Offset=16
    };
    char * pszTitle; // Size=4 Offset=20
    int ( * pfnDlgProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=24
    long lParam; // Size=4 Offset=28
    unsigned int ( * pfnCallback)(struct HWND__ *,unsigned int,struct _PROPSHEETPAGEA *); // Size=4 Offset=32
    unsigned int * pcRefParent; // Size=4 Offset=36
} PROPSHEETPAGEA_V1, *PPROPSHEETPAGEA_V1;
typedef struct _CERT_KEYGEN_REQUEST_INFO // Size=32
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo; // Size=24 Offset=4
    unsigned short * pwszChallengeString; // Size=4 Offset=28
} CERT_KEYGEN_REQUEST_INFO, *PCERT_KEYGEN_REQUEST_INFO;
typedef struct __MIDL___MIDL_itf_wtypes_0003_0001 // Size=36
{
    unsigned long tyspec; // Size=4 Offset=0
    union __MIDL___MIDL_itf_wtypes_0003_0001::__MIDL___MIDL_itf_wtypes_0003_0005 tagged_union; // Size=32 Offset=4
} _MIDL___MIDL_itf_wtypes_0003_0001, *P_MIDL___MIDL_itf_wtypes_0003_0001;
typedef struct tagARRAYDESC // Size=20
{
    struct tagTYPEDESC tdescElem; // Size=8 Offset=0
    unsigned short cDims; // Size=2 Offset=8
    struct tagSAFEARRAYBOUND rgbounds[1]; // Size=8 Offset=12
} *PtagARRAYDESC;
typedef struct tagEMRCREATECOLORSPACE // Size=340
{
    struct tagEMR emr; // Size=8 Offset=0
    unsigned long ihCS; // Size=4 Offset=8
    struct tagLOGCOLORSPACEA lcs; // Size=328 Offset=12
} *PtagEMRCREATECOLORSPACE;
typedef struct _CMSG_SIGNER_ENCODE_INFO // Size=48
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CERT_INFO * pCertInfo; // Size=4 Offset=4
    unsigned long hCryptProv; // Size=4 Offset=8
    unsigned long dwKeySpec; // Size=4 Offset=12
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm; // Size=12 Offset=16
    void * pvHashAuxInfo; // Size=4 Offset=28
    unsigned long cAuthAttr; // Size=4 Offset=32
    struct _CRYPT_ATTRIBUTE * rgAuthAttr; // Size=4 Offset=36
    unsigned long cUnauthAttr; // Size=4 Offset=40
    struct _CRYPT_ATTRIBUTE * rgUnauthAttr; // Size=4 Offset=44
} CMSG_SIGNER_ENCODE_INFO, *PCMSG_SIGNER_ENCODE_INFO;
typedef struct tagCHOOSEFONTW // Size=60
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    struct HDC__ * hDC; // Size=4 Offset=8
    struct tagLOGFONTW * lpLogFont; // Size=4 Offset=12
    int iPointSize; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    unsigned long rgbColors; // Size=4 Offset=24
    long lCustData; // Size=4 Offset=28
    unsigned int ( * lpfnHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=32
    unsigned short * lpTemplateName; // Size=4 Offset=36
    struct HINSTANCE__ * hInstance; // Size=4 Offset=40
    unsigned short * lpszStyle; // Size=4 Offset=44
    unsigned short nFontType; // Size=2 Offset=48
    unsigned short ___MISSING_ALIGNMENT__; // Size=2 Offset=50
    int nSizeMin; // Size=4 Offset=52
    int nSizeMax; // Size=4 Offset=56
} *PtagCHOOSEFONTW;
typedef struct tagWNDCLASSW // Size=40
{
    unsigned int style; // Size=4 Offset=0
    long ( * lpfnWndProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=4
    int cbClsExtra; // Size=4 Offset=8
    int cbWndExtra; // Size=4 Offset=12
    struct HINSTANCE__ * hInstance; // Size=4 Offset=16
    struct HICON__ * hIcon; // Size=4 Offset=20
    struct HICON__ * hCursor; // Size=4 Offset=24
    struct HBRUSH__ * hbrBackground; // Size=4 Offset=28
    unsigned short * lpszMenuName; // Size=4 Offset=32
    unsigned short * lpszClassName; // Size=4 Offset=36
} *PtagWNDCLASSW;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION // Size=112
{
    struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation; // Size=48 Offset=0
    struct _IO_COUNTERS IoInfo; // Size=48 Offset=48
    unsigned long ProcessMemoryLimit; // Size=4 Offset=96
    unsigned long JobMemoryLimit; // Size=4 Offset=100
    unsigned long PeakProcessMemoryUsed; // Size=4 Offset=104
    unsigned long PeakJobMemoryUsed; // Size=4 Offset=108
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef struct tagPSDW // Size=84
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    void * hDevMode; // Size=4 Offset=8
    void * hDevNames; // Size=4 Offset=12
    unsigned long Flags; // Size=4 Offset=16
    struct tagPOINT ptPaperSize; // Size=8 Offset=20
    struct tagRECT rtMinMargin; // Size=16 Offset=28
    struct tagRECT rtMargin; // Size=16 Offset=44
    struct HINSTANCE__ * hInstance; // Size=4 Offset=60
    long lCustData; // Size=4 Offset=64
    unsigned int ( * lpfnPageSetupHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=68
    unsigned int ( * lpfnPagePaintHook)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=72
    unsigned short * lpPageSetupTemplateName; // Size=4 Offset=76
    void * hPageSetupTemplate; // Size=4 Offset=80
} *PtagPSDW;
typedef struct tagEMRPLGBLT // Size=140
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    struct _POINTL aptlDest[3]; // Size=24 Offset=24
    long xSrc; // Size=4 Offset=48
    long ySrc; // Size=4 Offset=52
    long cxSrc; // Size=4 Offset=56
    long cySrc; // Size=4 Offset=60
    struct tagXFORM xformSrc; // Size=24 Offset=64
    unsigned long crBkColorSrc; // Size=4 Offset=88
    unsigned long iUsageSrc; // Size=4 Offset=92
    unsigned long offBmiSrc; // Size=4 Offset=96
    unsigned long cbBmiSrc; // Size=4 Offset=100
    unsigned long offBitsSrc; // Size=4 Offset=104
    unsigned long cbBitsSrc; // Size=4 Offset=108
    long xMask; // Size=4 Offset=112
    long yMask; // Size=4 Offset=116
    unsigned long iUsageMask; // Size=4 Offset=120
    unsigned long offBmiMask; // Size=4 Offset=124
    unsigned long cbBmiMask; // Size=4 Offset=128
    unsigned long offBitsMask; // Size=4 Offset=132
    unsigned long cbBitsMask; // Size=4 Offset=136
} *PtagEMRPLGBLT;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION // Size=96
{
    struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo; // Size=48 Offset=0
    struct _IO_COUNTERS IoInfo; // Size=48 Offset=48
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct _CRYPT_PRIVATE_KEY_INFO // Size=28
{
    unsigned long Version; // Size=4 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm; // Size=12 Offset=4
    struct _CRYPTOAPI_BLOB PrivateKey; // Size=8 Offset=16
    struct _CRYPT_ATTRIBUTES * pAttributes; // Size=4 Offset=24
} CRYPT_PRIVATE_KEY_INFO, *PCRYPT_PRIVATE_KEY_INFO;
typedef struct _PROPSHEETPAGEW_V1 // Size=40
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    struct HINSTANCE__ * hInstance; // Size=4 Offset=8
    union
    {
        unsigned short * pszTemplate; // Size=4 Offset=12
        struct DLGTEMPLATE * pResource; // Size=4 Offset=12
    };
    union
    {
        struct HICON__ * hIcon; // Size=4 Offset=16
        unsigned short * pszIcon; // Size=4 Offset=16
    };
    unsigned short * pszTitle; // Size=4 Offset=20
    int ( * pfnDlgProc)(struct HWND__ *,unsigned int,unsigned int,long); // Size=4 Offset=24
    long lParam; // Size=4 Offset=28
    unsigned int ( * pfnCallback)(struct HWND__ *,unsigned int,struct _PROPSHEETPAGEW *); // Size=4 Offset=32
    unsigned int * pcRefParent; // Size=4 Offset=36
} PROPSHEETPAGEW_V1, *PPROPSHEETPAGEW_V1;
typedef struct _CRL_ISSUING_DIST_POINT // Size=36
{
    struct _CRL_DIST_POINT_NAME DistPointName; // Size=12 Offset=0
    int fOnlyContainsUserCerts; // Size=4 Offset=12
    int fOnlyContainsCACerts; // Size=4 Offset=16
    struct _CRYPT_BIT_BLOB OnlySomeReasonFlags; // Size=12 Offset=20
    int fIndirectCRL; // Size=4 Offset=32
} CRL_ISSUING_DIST_POINT, *PCRL_ISSUING_DIST_POINT;
typedef union _RPC_ASYNC_STATE::__unnamed // Size=16
{
    struct _RPC_ASYNC_STATE::___unnamed2018::___unnamed2018 APC; // Size=8 Offset=0
    struct _RPC_ASYNC_STATE::___unnamed2020::___unnamed2020 IOC; // Size=16 Offset=0
    struct _RPC_ASYNC_STATE::___unnamed2022::___unnamed2022 HWND; // Size=8 Offset=0
    void * hEvent; // Size=4 Offset=0
    void ( * NotificationRoutine)(struct _RPC_ASYNC_STATE *,void *,enum _RPC_ASYNC_EVENT); // Size=4 Offset=0
} RPC_ASYNC_STATE::__unnamed, *PRPC_ASYNC_STATE::__unnamed;
typedef struct tagRPC_EXTENDED_ERROR_INFO // Size=112
{
    unsigned long Version; // Size=4 Offset=0
    unsigned short * ComputerName; // Size=4 Offset=4
    unsigned long ProcessID; // Size=4 Offset=8
    union tagRPC_EXTENDED_ERROR_INFO::___unnamed2096 u; // Size=16 Offset=12
    unsigned long GeneratingComponent; // Size=4 Offset=28
    unsigned long Status; // Size=4 Offset=32
    unsigned short DetectionLocation; // Size=2 Offset=36
    unsigned short Flags; // Size=2 Offset=38
    int NumberOfParameters; // Size=4 Offset=40
    struct tagRPC_EE_INFO_PARAM Parameters[4]; // Size=64 Offset=48
} *PtagRPC_EXTENDED_ERROR_INFO;
typedef struct tagSTATSTG // Size=72
{
    unsigned short * pwcsName; // Size=4 Offset=0
    unsigned long type; // Size=4 Offset=4
    union _ULARGE_INTEGER cbSize; // Size=8 Offset=8
    struct _FILETIME mtime; // Size=8 Offset=16
    struct _FILETIME ctime; // Size=8 Offset=24
    struct _FILETIME atime; // Size=8 Offset=32
    unsigned long grfMode; // Size=4 Offset=40
    unsigned long grfLocksSupported; // Size=4 Offset=44
    struct _GUID clsid; // Size=16 Offset=48
    unsigned long grfStateBits; // Size=4 Offset=64
    unsigned long reserved; // Size=4 Offset=68
} *PtagSTATSTG;
typedef struct _CRYPT_PKCS8_IMPORT_PARAMS // Size=24
{
    struct _CRYPTOAPI_BLOB PrivateKey; // Size=8 Offset=0
    int ( * pResolvehCryptProvFunc)(struct _CRYPT_PRIVATE_KEY_INFO *,unsigned long *,void *); // Size=4 Offset=8
    void * pVoidResolveFunc; // Size=4 Offset=12
    int ( * pDecryptPrivateKeyFunc)(struct _CRYPT_ALGORITHM_IDENTIFIER,struct _CRYPTOAPI_BLOB,unsigned char *,unsigned long *,void *); // Size=4 Offset=16
    void * pVoidDecryptFunc; // Size=4 Offset=20
} CRYPT_PKCS8_IMPORT_PARAMS, *PCRYPT_PKCS8_IMPORT_PARAMS;
typedef struct _CMC_DATA_INFO // Size=32
{
    unsigned long cTaggedAttribute; // Size=4 Offset=0
    struct _CMC_TAGGED_ATTRIBUTE * rgTaggedAttribute; // Size=4 Offset=4
    unsigned long cTaggedRequest; // Size=4 Offset=8
    struct _CMC_TAGGED_REQUEST * rgTaggedRequest; // Size=4 Offset=12
    unsigned long cTaggedContentInfo; // Size=4 Offset=16
    struct _CMC_TAGGED_CONTENT_INFO * rgTaggedContentInfo; // Size=4 Offset=20
    unsigned long cTaggedOtherMsg; // Size=4 Offset=24
    struct _CMC_TAGGED_OTHER_MSG * rgTaggedOtherMsg; // Size=4 Offset=28
} CMC_DATA_INFO, *PCMC_DATA_INFO;
typedef union _WSACOMPLETION::__unnamed // Size=12
{
    struct _WSACOMPLETION::___unnamed2505::___unnamed2505 WindowMessage; // Size=12 Offset=0
    struct _WSACOMPLETION::___unnamed2506::___unnamed2506 Event; // Size=4 Offset=0
    struct _WSACOMPLETION::___unnamed2507::___unnamed2507 Apc; // Size=8 Offset=0
    struct _WSACOMPLETION::___unnamed2509::___unnamed2509 Port; // Size=12 Offset=0
} WSACOMPLETION::__unnamed, *PWSACOMPLETION::__unnamed;
typedef class std::_Iosb<int> // Size=1
{
########################################
} *Pstd::_Iosb<int>;
typedef struct _LOADED_IMAGE // Size=48
{
    char * ModuleName; // Size=4 Offset=0
    void * hFile; // Size=4 Offset=4
    unsigned char * MappedAddress; // Size=4 Offset=8
    struct _IMAGE_NT_HEADERS * FileHeader; // Size=4 Offset=12
    struct _IMAGE_SECTION_HEADER * LastRvaSection; // Size=4 Offset=16
    unsigned long NumberOfSections; // Size=4 Offset=20
    struct _IMAGE_SECTION_HEADER * Sections; // Size=4 Offset=24
    unsigned long Characteristics; // Size=4 Offset=28
    unsigned char fSystemImage; // Size=1 Offset=32
    unsigned char fDOSImage; // Size=1 Offset=33
    struct _LIST_ENTRY Links; // Size=8 Offset=36
    unsigned long SizeOfImage; // Size=4 Offset=44
} LOADED_IMAGE, *PLOADED_IMAGE;
typedef struct _PROVDATA_SIP // Size=40
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _GUID gSubject; // Size=16 Offset=4
    struct SIP_DISPATCH_INFO_ * pSip; // Size=4 Offset=20
    struct SIP_DISPATCH_INFO_ * pCATSip; // Size=4 Offset=24
    struct SIP_SUBJECTINFO_ * psSipSubjectInfo; // Size=4 Offset=28
    struct SIP_SUBJECTINFO_ * psSipCATSubjectInfo; // Size=4 Offset=32
    struct SIP_INDIRECT_DATA_ * psIndirectData; // Size=4 Offset=36
} PROVDATA_SIP, *PPROVDATA_SIP;
typedef struct _MINIDUMP_THREAD_EX_LIST // Size=4
{
    unsigned int NumberOfThreads; // Size=4 Offset=0
} MINIDUMP_THREAD_EX_LIST, *PMINIDUMP_THREAD_EX_LIST;
typedef struct _MINIDUMP_THREAD_LIST // Size=4
{
    unsigned int NumberOfThreads; // Size=4 Offset=0
} MINIDUMP_THREAD_LIST, *PMINIDUMP_THREAD_LIST;
typedef struct ImageInfo // Size=32
{
    unsigned long sig; // Size=4 Offset=0
    unsigned long BaseAddress; // Size=4 Offset=4
    unsigned long BaseSize; // Size=4 Offset=8
    struct HINSTANCE__ * hndl; // Size=4 Offset=12
    struct _IMAGE_NT_HEADERS * img; // Size=4 Offset=16
    struct _IMAGE_SECTION_HEADER * sectHdr; // Size=4 Offset=20
    char * imgName; // Size=4 Offset=24
    struct ImageInfo * next; // Size=4 Offset=28
} *PImageInfo;
typedef struct _WSAQuerySetA // Size=60
{
    unsigned long dwSize; // Size=4 Offset=0
    char * lpszServiceInstanceName; // Size=4 Offset=4
    struct _GUID * lpServiceClassId; // Size=4 Offset=8
    struct _WSAVersion * lpVersion; // Size=4 Offset=12
    char * lpszComment; // Size=4 Offset=16
    unsigned long dwNameSpace; // Size=4 Offset=20
    struct _GUID * lpNSProviderId; // Size=4 Offset=24
    char * lpszContext; // Size=4 Offset=28
    unsigned long dwNumberOfProtocols; // Size=4 Offset=32
    struct _AFPROTOCOLS * lpafpProtocols; // Size=4 Offset=36
    char * lpszQueryString; // Size=4 Offset=40
    unsigned long dwNumberOfCsAddrs; // Size=4 Offset=44
    struct _CSADDR_INFO * lpcsaBuffer; // Size=4 Offset=48
    unsigned long dwOutputFlags; // Size=4 Offset=52
    struct tagBLOB * lpBlob; // Size=4 Offset=56
} WSAQuerySetA, *PWSAQuerySetA;
typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO // Size=52
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=4
    void * pvKeyEncryptionAuxInfo; // Size=4 Offset=16
    unsigned long hCryptProv; // Size=4 Offset=20
    unsigned long dwKeyChoice; // Size=4 Offset=24
    union
    {
        unsigned long hKeyEncryptionKey; // Size=4 Offset=28
        void * pvKeyEncryptionKey; // Size=4 Offset=28
    };
    struct _CRYPTOAPI_BLOB KeyId; // Size=8 Offset=32
    struct _FILETIME Date; // Size=8 Offset=40
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE * pOtherAttr; // Size=4 Offset=48
} CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
typedef struct _CRYPT_SIGN_MESSAGE_PARA // Size=68
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwMsgEncodingType; // Size=4 Offset=4
    struct _CERT_CONTEXT * pSigningCert; // Size=4 Offset=8
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm; // Size=12 Offset=12
    void * pvHashAuxInfo; // Size=4 Offset=24
    unsigned long cMsgCert; // Size=4 Offset=28
    struct _CERT_CONTEXT * * rgpMsgCert; // Size=4 Offset=32
    unsigned long cMsgCrl; // Size=4 Offset=36
    struct _CRL_CONTEXT * * rgpMsgCrl; // Size=4 Offset=40
    unsigned long cAuthAttr; // Size=4 Offset=44
    struct _CRYPT_ATTRIBUTE * rgAuthAttr; // Size=4 Offset=48
    unsigned long cUnauthAttr; // Size=4 Offset=52
    struct _CRYPT_ATTRIBUTE * rgUnauthAttr; // Size=4 Offset=56
    unsigned long dwFlags; // Size=4 Offset=60
    unsigned long dwInnerContentType; // Size=4 Offset=64
} CRYPT_SIGN_MESSAGE_PARA, *PCRYPT_SIGN_MESSAGE_PARA;
typedef struct _CMSG_SIGNER_INFO // Size=68
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Issuer; // Size=8 Offset=4
    struct _CRYPTOAPI_BLOB SerialNumber; // Size=8 Offset=12
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm; // Size=12 Offset=20
    struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm; // Size=12 Offset=32
    struct _CRYPTOAPI_BLOB EncryptedHash; // Size=8 Offset=44
    struct _CRYPT_ATTRIBUTES AuthAttrs; // Size=8 Offset=52
    struct _CRYPT_ATTRIBUTES UnauthAttrs; // Size=8 Offset=60
} CMSG_SIGNER_INFO, *PCMSG_SIGNER_INFO;
typedef struct _WSAQuerySetW // Size=60
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned short * lpszServiceInstanceName; // Size=4 Offset=4
    struct _GUID * lpServiceClassId; // Size=4 Offset=8
    struct _WSAVersion * lpVersion; // Size=4 Offset=12
    unsigned short * lpszComment; // Size=4 Offset=16
    unsigned long dwNameSpace; // Size=4 Offset=20
    struct _GUID * lpNSProviderId; // Size=4 Offset=24
    unsigned short * lpszContext; // Size=4 Offset=28
    unsigned long dwNumberOfProtocols; // Size=4 Offset=32
    struct _AFPROTOCOLS * lpafpProtocols; // Size=4 Offset=36
    unsigned short * lpszQueryString; // Size=4 Offset=40
    unsigned long dwNumberOfCsAddrs; // Size=4 Offset=44
    struct _CSADDR_INFO * lpcsaBuffer; // Size=4 Offset=48
    unsigned long dwOutputFlags; // Size=4 Offset=52
    struct tagBLOB * lpBlob; // Size=4 Offset=56
} WSAQuerySetW, *PWSAQuerySetW;
typedef struct tagEMRPOLYTEXTOUTA // Size=80
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long iGraphicsMode; // Size=4 Offset=24
    float exScale; // Size=4 Offset=28
    float eyScale; // Size=4 Offset=32
    long cStrings; // Size=4 Offset=36
    struct tagEMRTEXT aemrtext[1]; // Size=40 Offset=40
} *PtagEMRPOLYTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA // Size=76
{
    struct tagEMR emr; // Size=8 Offset=0
    struct _RECTL rclBounds; // Size=16 Offset=8
    unsigned long iGraphicsMode; // Size=4 Offset=24
    float exScale; // Size=4 Offset=28
    float eyScale; // Size=4 Offset=32
    struct tagEMRTEXT emrtext; // Size=40 Offset=36
} *PtagEMREXTTEXTOUTA;
typedef struct tagSTGMEDIUM // Size=12
{
    unsigned long tymed; // Size=4 Offset=0
    union
    {
        struct HBITMAP__ * hBitmap; // Size=4 Offset=4
        void * hMetaFilePict; // Size=4 Offset=4
        struct HENHMETAFILE__ * hEnhMetaFile; // Size=4 Offset=4
        void * hGlobal; // Size=4 Offset=4
        unsigned short * lpszFileName; // Size=4 Offset=4
        struct IStream * pstm; // Size=4 Offset=4
        struct IStorage * pstg; // Size=4 Offset=4
    };
    struct IUnknown * pUnkForRelease; // Size=4 Offset=8
} *PtagSTGMEDIUM;
typedef struct _RPC_SERVER_INTERFACE // Size=68
{
    unsigned int Length; // Size=4 Offset=0
    struct _RPC_SYNTAX_IDENTIFIER InterfaceId; // Size=20 Offset=4
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax; // Size=20 Offset=24
    struct RPC_DISPATCH_TABLE * DispatchTable; // Size=4 Offset=44
    unsigned int RpcProtseqEndpointCount; // Size=4 Offset=48
    struct _RPC_PROTSEQ_ENDPOINT * RpcProtseqEndpoint; // Size=4 Offset=52
    void * DefaultManagerEpv; // Size=4 Offset=56
    void * InterpreterInfo; // Size=4 Offset=60
    unsigned int Flags; // Size=4 Offset=64
} RPC_SERVER_INTERFACE, *PRPC_SERVER_INTERFACE;
typedef struct _TOKEN_STATISTICS // Size=56
{
    struct _LUID TokenId; // Size=8 Offset=0
    struct _LUID AuthenticationId; // Size=8 Offset=8
    union _LARGE_INTEGER ExpirationTime; // Size=8 Offset=16
    enum _TOKEN_TYPE TokenType; // Size=4 Offset=24
    enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel; // Size=4 Offset=28
    unsigned long DynamicCharged; // Size=4 Offset=32
    unsigned long DynamicAvailable; // Size=4 Offset=36
    unsigned long GroupCount; // Size=4 Offset=40
    unsigned long PrivilegeCount; // Size=4 Offset=44
    struct _LUID ModifiedId; // Size=8 Offset=48
} TOKEN_STATISTICS, *PTOKEN_STATISTICS;
typedef union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 // Size=4
{
    struct _userHMETAFILEPICT * hMetaFilePict; // Size=4 Offset=0
    struct _userHENHMETAFILE * hHEnhMetaFile; // Size=4 Offset=0
    struct _GDI_OBJECT * hGdiHandle; // Size=4 Offset=0
    struct _userHGLOBAL * hGlobal; // Size=4 Offset=0
    unsigned short * lpszFileName; // Size=4 Offset=0
    struct _BYTE_BLOB * pstm; // Size=4 Offset=0
    struct _BYTE_BLOB * pstg; // Size=4 Offset=0
} userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003, *PuserSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003;
typedef struct _RPC_CLIENT_INTERFACE // Size=68
{
    unsigned int Length; // Size=4 Offset=0
    struct _RPC_SYNTAX_IDENTIFIER InterfaceId; // Size=20 Offset=4
    struct _RPC_SYNTAX_IDENTIFIER TransferSyntax; // Size=20 Offset=24
    struct RPC_DISPATCH_TABLE * DispatchTable; // Size=4 Offset=44
    unsigned int RpcProtseqEndpointCount; // Size=4 Offset=48
    struct _RPC_PROTSEQ_ENDPOINT * RpcProtseqEndpoint; // Size=4 Offset=52
    unsigned long Reserved; // Size=4 Offset=56
    void * InterpreterInfo; // Size=4 Offset=60
    unsigned int Flags; // Size=4 Offset=64
} RPC_CLIENT_INTERFACE, *PRPC_CLIENT_INTERFACE;
typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO // Size=44
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB KeyId; // Size=8 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=12
    struct _CRYPTOAPI_BLOB EncryptedKey; // Size=8 Offset=24
    struct _FILETIME Date; // Size=8 Offset=32
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE * pOtherAttr; // Size=4 Offset=40
} CMSG_MAIL_LIST_RECIPIENT_INFO, *PCMSG_MAIL_LIST_RECIPIENT_INFO;
typedef struct _SPC_INDIRECT_DATA_CONTENT // Size=32
{
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE Data; // Size=12 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER DigestAlgorithm; // Size=12 Offset=12
    struct _CRYPTOAPI_BLOB Digest; // Size=8 Offset=24
} SPC_INDIRECT_DATA_CONTENT, *PSPC_INDIRECT_DATA_CONTENT;
typedef struct _WINTRUST_DATA // Size=44
{
    unsigned long cbStruct; // Size=4 Offset=0
    void * pPolicyCallbackData; // Size=4 Offset=4
    void * pSIPClientData; // Size=4 Offset=8
    unsigned long dwUIChoice; // Size=4 Offset=12
    unsigned long fdwRevocationChecks; // Size=4 Offset=16
    unsigned long dwUnionChoice; // Size=4 Offset=20
    union
    {
        struct WINTRUST_FILE_INFO_ * pFile; // Size=4 Offset=24
        struct WINTRUST_CATALOG_INFO_ * pCatalog; // Size=4 Offset=24
        struct WINTRUST_BLOB_INFO_ * pBlob; // Size=4 Offset=24
        struct WINTRUST_SGNR_INFO_ * pSgnr; // Size=4 Offset=24
        struct WINTRUST_CERT_INFO_ * pCert; // Size=4 Offset=24
    };
    unsigned long dwStateAction; // Size=4 Offset=28
    void * hWVTStateData; // Size=4 Offset=32
    unsigned short * pwszURLReference; // Size=4 Offset=36
    unsigned long dwProvFlags; // Size=4 Offset=40
} WINTRUST_DATA, *PWINTRUST_DATA;
typedef struct _CRYPT_PROVIDER_SGNR // Size=44
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _FILETIME sftVerifyAsOf; // Size=8 Offset=4
    unsigned long csCertChain; // Size=4 Offset=12
    struct _CRYPT_PROVIDER_CERT * pasCertChain; // Size=4 Offset=16
    unsigned long dwSignerType; // Size=4 Offset=20
    struct _CMSG_SIGNER_INFO * psSigner; // Size=4 Offset=24
    unsigned long dwError; // Size=4 Offset=28
    unsigned long csCounterSigners; // Size=4 Offset=32
    struct _CRYPT_PROVIDER_SGNR * pasCounterSigners; // Size=4 Offset=36
    struct _CERT_CHAIN_CONTEXT * pChainContext; // Size=4 Offset=40
} CRYPT_PROVIDER_SGNR, *PCRYPT_PROVIDER_SGNR;
typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO // Size=68
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=4
    void * pvKeyEncryptionAuxInfo; // Size=4 Offset=16
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm; // Size=12 Offset=20
    void * pvKeyWrapAuxInfo; // Size=4 Offset=32
    unsigned long hCryptProv; // Size=4 Offset=36
    unsigned long dwKeySpec; // Size=4 Offset=40
    unsigned long dwKeyChoice; // Size=4 Offset=44
    union
    {
        struct _CRYPT_ALGORITHM_IDENTIFIER * pEphemeralAlgorithm; // Size=4 Offset=48
        struct _CERT_ID * pSenderId; // Size=4 Offset=48
    };
    struct _CRYPTOAPI_BLOB UserKeyingMaterial; // Size=8 Offset=52
    unsigned long cRecipientEncryptedKeys; // Size=4 Offset=60
    struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO * * rgpRecipientEncryptedKeys; // Size=4 Offset=64
} CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
typedef struct tagPDEXA // Size=84
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    void * hDevMode; // Size=4 Offset=8
    void * hDevNames; // Size=4 Offset=12
    struct HDC__ * hDC; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    unsigned long Flags2; // Size=4 Offset=24
    unsigned long ExclusionFlags; // Size=4 Offset=28
    unsigned long nPageRanges; // Size=4 Offset=32
    unsigned long nMaxPageRanges; // Size=4 Offset=36
    struct tagPRINTPAGERANGE * lpPageRanges; // Size=4 Offset=40
    unsigned long nMinPage; // Size=4 Offset=44
    unsigned long nMaxPage; // Size=4 Offset=48
    unsigned long nCopies; // Size=4 Offset=52
    struct HINSTANCE__ * hInstance; // Size=4 Offset=56
    char * lpPrintTemplateName; // Size=4 Offset=60
    struct IUnknown * lpCallback; // Size=4 Offset=64
    unsigned long nPropertyPages; // Size=4 Offset=68
    struct _PSP * * lphPropertyPages; // Size=4 Offset=72
    unsigned long nStartPage; // Size=4 Offset=76
    unsigned long dwResultAction; // Size=4 Offset=80
} *PtagPDEXA;
typedef struct _CRL_INFO // Size=56
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm; // Size=12 Offset=4
    struct _CRYPTOAPI_BLOB Issuer; // Size=8 Offset=16
    struct _FILETIME ThisUpdate; // Size=8 Offset=24
    struct _FILETIME NextUpdate; // Size=8 Offset=32
    unsigned long cCRLEntry; // Size=4 Offset=40
    struct _CRL_ENTRY * rgCRLEntry; // Size=4 Offset=44
    unsigned long cExtension; // Size=4 Offset=48
    struct _CERT_EXTENSION * rgExtension; // Size=4 Offset=52
} CRL_INFO, *PCRL_INFO;
typedef struct tagELEMDESC // Size=16
{
    struct tagTYPEDESC tdesc; // Size=8 Offset=0
    union
    {
        struct tagIDLDESC idldesc; // Size=8 Offset=8
        struct tagPARAMDESC paramdesc; // Size=8 Offset=8
    };
} *PtagELEMDESC;
typedef struct _CERT_REQUEST_INFO // Size=44
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB Subject; // Size=8 Offset=4
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo; // Size=24 Offset=12
    unsigned long cAttribute; // Size=4 Offset=36
    struct _CRYPT_ATTRIBUTE * rgAttribute; // Size=4 Offset=40
} CERT_REQUEST_INFO, *PCERT_REQUEST_INFO;
typedef struct _userSTGMEDIUM::_STGMEDIUM_UNION // Size=8
{
    unsigned long tymed; // Size=4 Offset=0
    union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u; // Size=4 Offset=4
} userSTGMEDIUM::_STGMEDIUM_UNION, *PuserSTGMEDIUM::_STGMEDIUM_UNION;
typedef struct tagTYPEATTR // Size=76
{
    struct _GUID guid; // Size=16 Offset=0
    unsigned long lcid; // Size=4 Offset=16
    unsigned long dwReserved; // Size=4 Offset=20
    long memidConstructor; // Size=4 Offset=24
    long memidDestructor; // Size=4 Offset=28
    unsigned short * lpstrSchema; // Size=4 Offset=32
    unsigned long cbSizeInstance; // Size=4 Offset=36
    enum tagTYPEKIND typekind; // Size=4 Offset=40
    unsigned short cFuncs; // Size=2 Offset=44
    unsigned short cVars; // Size=2 Offset=46
    unsigned short cImplTypes; // Size=2 Offset=48
    unsigned short cbSizeVft; // Size=2 Offset=50
    unsigned short cbAlignment; // Size=2 Offset=52
    unsigned short wTypeFlags; // Size=2 Offset=54
    unsigned short wMajorVerNum; // Size=2 Offset=56
    unsigned short wMinorVerNum; // Size=2 Offset=58
    struct tagTYPEDESC tdescAlias; // Size=8 Offset=60
    struct tagIDLDESC idldescType; // Size=8 Offset=68
} *PtagTYPEATTR;
typedef struct _FLAG_STGMEDIUM // Size=20
{
    long ContextFlags; // Size=4 Offset=0
    long fPassOwnership; // Size=4 Offset=4
    struct tagSTGMEDIUM Stgmed; // Size=12 Offset=8
} FLAG_STGMEDIUM, *PFLAG_STGMEDIUM;
typedef struct _CRL_DIST_POINT // Size=32
{
    struct _CRL_DIST_POINT_NAME DistPointName; // Size=12 Offset=0
    struct _CRYPT_BIT_BLOB ReasonFlags; // Size=12 Offset=12
    struct _CERT_ALT_NAME_INFO CRLIssuer; // Size=8 Offset=24
} CRL_DIST_POINT, *PCRL_DIST_POINT;
typedef struct tagMONCBSTRUCT // Size=120
{
    unsigned int cb; // Size=4 Offset=0
    unsigned long dwTime; // Size=4 Offset=4
    void * hTask; // Size=4 Offset=8
    unsigned long dwRet; // Size=4 Offset=12
    unsigned int wType; // Size=4 Offset=16
    unsigned int wFmt; // Size=4 Offset=20
    struct HCONV__ * hConv; // Size=4 Offset=24
    struct HSZ__ * hsz1; // Size=4 Offset=28
    struct HSZ__ * hsz2; // Size=4 Offset=32
    struct HDDEDATA__ * hData; // Size=4 Offset=36
    unsigned long dwData1; // Size=4 Offset=40
    unsigned long dwData2; // Size=4 Offset=44
    struct tagCONVCONTEXT cc; // Size=36 Offset=48
    unsigned long cbData; // Size=4 Offset=84
    unsigned long Data[8]; // Size=32 Offset=88
} *PtagMONCBSTRUCT;
typedef struct tagPDEXW // Size=84
{
    unsigned long lStructSize; // Size=4 Offset=0
    struct HWND__ * hwndOwner; // Size=4 Offset=4
    void * hDevMode; // Size=4 Offset=8
    void * hDevNames; // Size=4 Offset=12
    struct HDC__ * hDC; // Size=4 Offset=16
    unsigned long Flags; // Size=4 Offset=20
    unsigned long Flags2; // Size=4 Offset=24
    unsigned long ExclusionFlags; // Size=4 Offset=28
    unsigned long nPageRanges; // Size=4 Offset=32
    unsigned long nMaxPageRanges; // Size=4 Offset=36
    struct tagPRINTPAGERANGE * lpPageRanges; // Size=4 Offset=40
    unsigned long nMinPage; // Size=4 Offset=44
    unsigned long nMaxPage; // Size=4 Offset=48
    unsigned long nCopies; // Size=4 Offset=52
    struct HINSTANCE__ * hInstance; // Size=4 Offset=56
    unsigned short * lpPrintTemplateName; // Size=4 Offset=60
    struct IUnknown * lpCallback; // Size=4 Offset=64
    unsigned long nPropertyPages; // Size=4 Offset=68
    struct _PSP * * lphPropertyPages; // Size=4 Offset=72
    unsigned long nStartPage; // Size=4 Offset=76
    unsigned long dwResultAction; // Size=4 Offset=80
} *PtagPDEXW;
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO // Size=40
{
    struct _CERT_ID RecipientId; // Size=20 Offset=0
    struct _CRYPTOAPI_BLOB EncryptedKey; // Size=8 Offset=20
    struct _FILETIME Date; // Size=8 Offset=28
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE * pOtherAttr; // Size=4 Offset=36
} CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
typedef struct _PROPSHEETHEADERW // Size=52
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    struct HWND__ * hwndParent; // Size=4 Offset=8
    struct HINSTANCE__ * hInstance; // Size=4 Offset=12
    union
    {
        struct HICON__ * hIcon; // Size=4 Offset=16
        unsigned short * pszIcon; // Size=4 Offset=16
    };
    unsigned short * pszCaption; // Size=4 Offset=20
    unsigned int nPages; // Size=4 Offset=24
    union
    {
        unsigned int nStartPage; // Size=4 Offset=28
        unsigned short * pStartPage; // Size=4 Offset=28
    };
    union
    {
        struct _PROPSHEETPAGEW * ppsp; // Size=4 Offset=32
        struct _PSP * * phpage; // Size=4 Offset=32
    };
    int ( * pfnCallback)(struct HWND__ *,unsigned int,long); // Size=4 Offset=36
    union
    {
        struct HBITMAP__ * hbmWatermark; // Size=4 Offset=40
        unsigned short * pszbmWatermark; // Size=4 Offset=40
    };
    struct HPALETTE__ * hplWatermark; // Size=4 Offset=44
    union
    {
        struct HBITMAP__ * hbmHeader; // Size=4 Offset=48
        unsigned short * pszbmHeader; // Size=4 Offset=48
    };
} PROPSHEETHEADERW, *PPROPSHEETHEADERW;
typedef struct _MIDL_STUB_DESC // Size=80
{
    void * RpcInterfaceInformation; // Size=4 Offset=0
    void * ( * pfnAllocate)(unsigned int); // Size=4 Offset=4
    void ( * pfnFree)(void *); // Size=4 Offset=8
    union _MIDL_STUB_DESC::___unnamed726 IMPLICIT_HANDLE_INFO; // Size=4 Offset=12
    void ( * * apfnNdrRundownRoutines)(void *); // Size=4 Offset=16
    struct _GENERIC_BINDING_ROUTINE_PAIR * aGenericBindingRoutinePairs; // Size=4 Offset=20
    void ( * * apfnExprEval)(struct _MIDL_STUB_MESSAGE *); // Size=4 Offset=24
    struct _XMIT_ROUTINE_QUINTUPLE * aXmitQuintuple; // Size=4 Offset=28
    unsigned char * pFormatTypes; // Size=4 Offset=32
    int fCheckBounds; // Size=4 Offset=36
    unsigned long Version; // Size=4 Offset=40
    struct _MALLOC_FREE_STRUCT * pMallocFreeStruct; // Size=4 Offset=44
    long MIDLVersion; // Size=4 Offset=48
    struct _COMM_FAULT_OFFSETS * CommFaultOffsets; // Size=4 Offset=52
    struct _USER_MARSHAL_ROUTINE_QUADRUPLE * aUserMarshalQuadruple; // Size=4 Offset=56
    void ( * * NotifyRoutineTable)(); // Size=4 Offset=60
    unsigned long mFlags; // Size=4 Offset=64
    struct _NDR_CS_ROUTINES * CsRoutineTables; // Size=4 Offset=68
    void * Reserved4; // Size=4 Offset=72
    unsigned long Reserved5; // Size=4 Offset=76
} MIDL_STUB_DESC, *PMIDL_STUB_DESC;
typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO // Size=56
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=4
    void * pvKeyEncryptionAuxInfo; // Size=4 Offset=16
    unsigned long hCryptProv; // Size=4 Offset=20
    struct _CRYPT_BIT_BLOB RecipientPublicKey; // Size=12 Offset=24
    struct _CERT_ID RecipientId; // Size=20 Offset=36
} CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
typedef struct tagCONVINFO // Size=96
{
    unsigned long cb; // Size=4 Offset=0
    unsigned long hUser; // Size=4 Offset=4
    struct HCONV__ * hConvPartner; // Size=4 Offset=8
    struct HSZ__ * hszSvcPartner; // Size=4 Offset=12
    struct HSZ__ * hszServiceReq; // Size=4 Offset=16
    struct HSZ__ * hszTopic; // Size=4 Offset=20
    struct HSZ__ * hszItem; // Size=4 Offset=24
    unsigned int wFmt; // Size=4 Offset=28
    unsigned int wType; // Size=4 Offset=32
    unsigned int wStatus; // Size=4 Offset=36
    unsigned int wConvst; // Size=4 Offset=40
    unsigned int wLastError; // Size=4 Offset=44
    struct HCONVLIST__ * hConvList; // Size=4 Offset=48
    struct tagCONVCONTEXT ConvCtxt; // Size=36 Offset=52
    struct HWND__ * hwnd; // Size=4 Offset=88
    struct HWND__ * hwndPartner; // Size=4 Offset=92
} *PtagCONVINFO;
typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO // Size=44
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CERT_ID RecipientId; // Size=20 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=24
    struct _CRYPTOAPI_BLOB EncryptedKey; // Size=8 Offset=36
} CMSG_KEY_TRANS_RECIPIENT_INFO, *PCMSG_KEY_TRANS_RECIPIENT_INFO;
typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO // Size=48
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CRYPT_BIT_BLOB RecipientPublicKey; // Size=12 Offset=4
    struct _CERT_ID RecipientId; // Size=20 Offset=16
    struct _FILETIME Date; // Size=8 Offset=36
    struct _CRYPT_ATTRIBUTE_TYPE_VALUE * pOtherAttr; // Size=4 Offset=44
} CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
typedef struct _PROPSHEETHEADERA // Size=52
{
    unsigned long dwSize; // Size=4 Offset=0
    unsigned long dwFlags; // Size=4 Offset=4
    struct HWND__ * hwndParent; // Size=4 Offset=8
    struct HINSTANCE__ * hInstance; // Size=4 Offset=12
    union
    {
        struct HICON__ * hIcon; // Size=4 Offset=16
        char * pszIcon; // Size=4 Offset=16
    };
    char * pszCaption; // Size=4 Offset=20
    unsigned int nPages; // Size=4 Offset=24
    union
    {
        unsigned int nStartPage; // Size=4 Offset=28
        char * pStartPage; // Size=4 Offset=28
    };
    union
    {
        struct _PROPSHEETPAGEA * ppsp; // Size=4 Offset=32
        struct _PSP * * phpage; // Size=4 Offset=32
    };
    int ( * pfnCallback)(struct HWND__ *,unsigned int,long); // Size=4 Offset=36
    union
    {
        struct HBITMAP__ * hbmWatermark; // Size=4 Offset=40
        char * pszbmWatermark; // Size=4 Offset=40
    };
    struct HPALETTE__ * hplWatermark; // Size=4 Offset=44
    union
    {
        struct HBITMAP__ * hbmHeader; // Size=4 Offset=48
        char * pszbmHeader; // Size=4 Offset=48
    };
} PROPSHEETHEADERA, *PPROPSHEETHEADERA;
typedef struct _CTL_INFO // Size=72
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CTL_USAGE SubjectUsage; // Size=8 Offset=4
    struct _CRYPTOAPI_BLOB ListIdentifier; // Size=8 Offset=12
    struct _CRYPTOAPI_BLOB SequenceNumber; // Size=8 Offset=20
    struct _FILETIME ThisUpdate; // Size=8 Offset=28
    struct _FILETIME NextUpdate; // Size=8 Offset=36
    struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm; // Size=12 Offset=44
    unsigned long cCTLEntry; // Size=4 Offset=56
    struct _CTL_ENTRY * rgCTLEntry; // Size=4 Offset=60
    unsigned long cExtension; // Size=4 Offset=64
    struct _CERT_EXTENSION * rgExtension; // Size=4 Offset=68
} CTL_INFO, *PCTL_INFO;
typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO // Size=64
{
    unsigned long cbSize; // Size=4 Offset=0
    struct _CMSG_SIGNED_ENCODE_INFO SignedInfo; // Size=28 Offset=4
    struct _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo; // Size=32 Offset=32
} CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
typedef struct _SYSTEM_POWER_POLICY // Size=232
{
    unsigned long Revision; // Size=4 Offset=0
    struct POWER_ACTION_POLICY PowerButton; // Size=12 Offset=4
    struct POWER_ACTION_POLICY SleepButton; // Size=12 Offset=16
    struct POWER_ACTION_POLICY LidClose; // Size=12 Offset=28
    enum _SYSTEM_POWER_STATE LidOpenWake; // Size=4 Offset=40
    unsigned long Reserved; // Size=4 Offset=44
    struct POWER_ACTION_POLICY Idle; // Size=12 Offset=48
    unsigned long IdleTimeout; // Size=4 Offset=60
    unsigned char IdleSensitivity; // Size=1 Offset=64
    unsigned char DynamicThrottle; // Size=1 Offset=65
    unsigned char Spare2[2]; // Size=2 Offset=66
    enum _SYSTEM_POWER_STATE MinSleep; // Size=4 Offset=68
    enum _SYSTEM_POWER_STATE MaxSleep; // Size=4 Offset=72
    enum _SYSTEM_POWER_STATE ReducedLatencySleep; // Size=4 Offset=76
    unsigned long WinLogonFlags; // Size=4 Offset=80
    unsigned long Spare3; // Size=4 Offset=84
    unsigned long DozeS4Timeout; // Size=4 Offset=88
    unsigned long BroadcastCapacityResolution; // Size=4 Offset=92
    struct SYSTEM_POWER_LEVEL DischargePolicy[4]; // Size=96 Offset=96
    unsigned long VideoTimeout; // Size=4 Offset=192
    unsigned char VideoDimDisplay; // Size=1 Offset=196
    unsigned long VideoReserved[3]; // Size=12 Offset=200
    unsigned long SpindownTimeout; // Size=4 Offset=212
    unsigned char OptimizeForPower; // Size=1 Offset=216
    unsigned char FanThrottleTolerance; // Size=1 Offset=217
    unsigned char ForcedThrottle; // Size=1 Offset=218
    unsigned char MinThrottle; // Size=1 Offset=219
    struct POWER_ACTION_POLICY OverThrottled; // Size=12 Offset=220
} SYSTEM_POWER_POLICY, *PSYSTEM_POWER_POLICY;
typedef struct _IMAGE_DEBUG_INFORMATION // Size=128
{
    struct _LIST_ENTRY List; // Size=8 Offset=0
    unsigned long ReservedSize; // Size=4 Offset=8
    void * ReservedMappedBase; // Size=4 Offset=12
    unsigned short ReservedMachine; // Size=2 Offset=16
    unsigned short ReservedCharacteristics; // Size=2 Offset=18
    unsigned long ReservedCheckSum; // Size=4 Offset=20
    unsigned long ImageBase; // Size=4 Offset=24
    unsigned long SizeOfImage; // Size=4 Offset=28
    unsigned long ReservedNumberOfSections; // Size=4 Offset=32
    struct _IMAGE_SECTION_HEADER * ReservedSections; // Size=4 Offset=36
    unsigned long ReservedExportedNamesSize; // Size=4 Offset=40
    char * ReservedExportedNames; // Size=4 Offset=44
    unsigned long ReservedNumberOfFunctionTableEntries; // Size=4 Offset=48
    struct _IMAGE_FUNCTION_ENTRY * ReservedFunctionTableEntries; // Size=4 Offset=52
    unsigned long ReservedLowestFunctionStartingAddress; // Size=4 Offset=56
    unsigned long ReservedHighestFunctionEndingAddress; // Size=4 Offset=60
    unsigned long ReservedNumberOfFpoTableEntries; // Size=4 Offset=64
    struct _FPO_DATA * ReservedFpoTableEntries; // Size=4 Offset=68
    unsigned long SizeOfCoffSymbols; // Size=4 Offset=72
    struct _IMAGE_COFF_SYMBOLS_HEADER * CoffSymbols; // Size=4 Offset=76
    unsigned long ReservedSizeOfCodeViewSymbols; // Size=4 Offset=80
    void * ReservedCodeViewSymbols; // Size=4 Offset=84
    char * ImageFilePath; // Size=4 Offset=88
    char * ImageFileName; // Size=4 Offset=92
    char * ReservedDebugFilePath; // Size=4 Offset=96
    unsigned long ReservedTimeDateStamp; // Size=4 Offset=100
    int ReservedRomImage; // Size=4 Offset=104
    struct _IMAGE_DEBUG_DIRECTORY * ReservedDebugDirectory; // Size=4 Offset=108
    unsigned long ReservedNumberOfDebugDirectories; // Size=4 Offset=112
    unsigned long ReservedOriginalFunctionTableBaseAddress; // Size=4 Offset=116
    unsigned long Reserved[2]; // Size=8 Offset=120
} IMAGE_DEBUG_INFORMATION, *PIMAGE_DEBUG_INFORMATION;
typedef union _INPUT_RECORD::__unnamed // Size=16
{
    struct _KEY_EVENT_RECORD KeyEvent; // Size=16 Offset=0
    struct _MOUSE_EVENT_RECORD MouseEvent; // Size=16 Offset=0
    struct _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent; // Size=4 Offset=0
    struct _MENU_EVENT_RECORD MenuEvent; // Size=4 Offset=0
    struct _FOCUS_EVENT_RECORD FocusEvent; // Size=4 Offset=0
} INPUT_RECORD::__unnamed, *PINPUT_RECORD::__unnamed;
typedef struct tagVARIANT // Size=16
{
    union
    {
        struct
        {
            unsigned short vt; // Size=2 Offset=0
            unsigned short wReserved1; // Size=2 Offset=2
            unsigned short wReserved2; // Size=2 Offset=4
            unsigned short wReserved3; // Size=2 Offset=6
            union
            {
                __int64 llVal; // Size=8 Offset=8
                struct
                {
                    long lVal; // Size=4 Offset=8
                    struct IRecordInfo * pRecInfo; // Size=4 Offset=12
                };
                unsigned char bVal; // Size=1 Offset=8
                short iVal; // Size=2 Offset=8
                float fltVal; // Size=4 Offset=8
                double dblVal; // Size=8 Offset=8
                short boolVal; // Size=2 Offset=8
                long scode; // Size=4 Offset=8
                union tagCY cyVal; // Size=8 Offset=8
                double date; // Size=8 Offset=8
                unsigned short * bstrVal; // Size=4 Offset=8
                struct IUnknown * punkVal; // Size=4 Offset=8
                struct IDispatch * pdispVal; // Size=4 Offset=8
                struct tagSAFEARRAY * parray; // Size=4 Offset=8
                unsigned char * pbVal; // Size=4 Offset=8
                short * piVal; // Size=4 Offset=8
                long * plVal; // Size=4 Offset=8
                __int64 * pllVal; // Size=4 Offset=8
                float * pfltVal; // Size=4 Offset=8
                double * pdblVal; // Size=4 Offset=8
                short * pboolVal; // Size=4 Offset=8
                long * pscode; // Size=4 Offset=8
                union tagCY * pcyVal; // Size=4 Offset=8
                double * pdate; // Size=4 Offset=8
                unsigned short * * pbstrVal; // Size=4 Offset=8
                struct IUnknown * * ppunkVal; // Size=4 Offset=8
                struct IDispatch * * ppdispVal; // Size=4 Offset=8
                struct tagSAFEARRAY * * pparray; // Size=4 Offset=8
                struct tagVARIANT * pvarVal; // Size=4 Offset=8
                void * byref; // Size=4 Offset=8
                char cVal; // Size=1 Offset=8
                unsigned short uiVal; // Size=2 Offset=8
                unsigned long ulVal; // Size=4 Offset=8
                unsigned __int64 ullVal; // Size=8 Offset=8
                int intVal; // Size=4 Offset=8
                unsigned int uintVal; // Size=4 Offset=8
                struct tagDEC * pdecVal; // Size=4 Offset=8
                char * pcVal; // Size=4 Offset=8
                unsigned short * puiVal; // Size=4 Offset=8
                unsigned long * pulVal; // Size=4 Offset=8
                unsigned __int64 * pullVal; // Size=4 Offset=8
                int * pintVal; // Size=4 Offset=8
                unsigned int * puintVal; // Size=4 Offset=8
                void * pvRecord; // Size=4 Offset=8
            };
        };
        struct tagDEC decVal; // Size=16 Offset=0
    };
} *PtagVARIANT;
typedef struct _CMSG_CMS_SIGNER_INFO // Size=72
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CERT_ID SignerId; // Size=20 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm; // Size=12 Offset=24
    struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm; // Size=12 Offset=36
    struct _CRYPTOAPI_BLOB EncryptedHash; // Size=8 Offset=48
    struct _CRYPT_ATTRIBUTES AuthAttrs; // Size=8 Offset=56
    struct _CRYPT_ATTRIBUTES UnauthAttrs; // Size=8 Offset=64
} CMSG_CMS_SIGNER_INFO, *PCMSG_CMS_SIGNER_INFO;
typedef struct tagVARDESC // Size=36
{
    long memid; // Size=4 Offset=0
    unsigned short * lpstrSchema; // Size=4 Offset=4
    union
    {
        unsigned long oInst; // Size=4 Offset=8
        struct tagVARIANT * lpvarValue; // Size=4 Offset=8
    };
    struct tagELEMDESC elemdescVar; // Size=16 Offset=12
    unsigned short wVarFlags; // Size=2 Offset=28
    enum tagVARKIND varkind; // Size=4 Offset=32
} *PtagVARDESC;
typedef struct _tagBINDINFO // Size=84
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned short * szExtraInfo; // Size=4 Offset=4
    struct tagSTGMEDIUM stgmedData; // Size=12 Offset=8
    unsigned long grfBindInfoF; // Size=4 Offset=20
    unsigned long dwBindVerb; // Size=4 Offset=24
    unsigned short * szCustomVerb; // Size=4 Offset=28
    unsigned long cbstgmedData; // Size=4 Offset=32
    unsigned long dwOptions; // Size=4 Offset=36
    unsigned long dwOptionsFlags; // Size=4 Offset=40
    unsigned long dwCodePage; // Size=4 Offset=44
    struct _SECURITY_ATTRIBUTES securityAttributes; // Size=12 Offset=48
    struct _GUID iid; // Size=16 Offset=60
    struct IUnknown * pUnk; // Size=4 Offset=76
    unsigned long dwReserved; // Size=4 Offset=80
} tagBINDINFO, *PtagBINDINFO;
typedef struct _CRYPT_PROVIDER_DATA // Size=124
{
    unsigned long cbStruct; // Size=4 Offset=0
    struct _WINTRUST_DATA * pWintrustData; // Size=4 Offset=4
    int fOpenedFile; // Size=4 Offset=8
    struct HWND__ * hWndParent; // Size=4 Offset=12
    struct _GUID * pgActionID; // Size=4 Offset=16
    unsigned long hProv; // Size=4 Offset=20
    unsigned long dwError; // Size=4 Offset=24
    unsigned long dwRegSecuritySettings; // Size=4 Offset=28
    unsigned long dwRegPolicySettings; // Size=4 Offset=32
    struct _CRYPT_PROVIDER_FUNCTIONS * psPfns; // Size=4 Offset=36
    unsigned long cdwTrustStepErrors; // Size=4 Offset=40
    unsigned long * padwTrustStepErrors; // Size=4 Offset=44
    unsigned long chStores; // Size=4 Offset=48
    void * * pahStores; // Size=4 Offset=52
    unsigned long dwEncoding; // Size=4 Offset=56
    void * hMsg; // Size=4 Offset=60
    unsigned long csSigners; // Size=4 Offset=64
    struct _CRYPT_PROVIDER_SGNR * pasSigners; // Size=4 Offset=68
    unsigned long csProvPrivData; // Size=4 Offset=72
    struct _CRYPT_PROVIDER_PRIVDATA * pasProvPrivData; // Size=4 Offset=76
    unsigned long dwSubjectChoice; // Size=4 Offset=80
    struct _PROVDATA_SIP * pPDSip; // Size=4 Offset=84
    char * pszUsageOID; // Size=4 Offset=88
    int fRecallWithState; // Size=4 Offset=92
    struct _FILETIME sftSystemTime; // Size=8 Offset=96
    char * pszCTLSignerUsageOID; // Size=4 Offset=104
    unsigned long dwProvFlags; // Size=4 Offset=108
    unsigned long dwFinalError; // Size=4 Offset=112
    struct _CERT_USAGE_MATCH * pRequestUsage; // Size=4 Offset=116
    unsigned long dwTrustPubSettings; // Size=4 Offset=120
} CRYPT_PROVIDER_DATA, *PCRYPT_PROVIDER_DATA;
typedef struct _CERT_INFO // Size=112
{
    unsigned long dwVersion; // Size=4 Offset=0
    struct _CRYPTOAPI_BLOB SerialNumber; // Size=8 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm; // Size=12 Offset=12
    struct _CRYPTOAPI_BLOB Issuer; // Size=8 Offset=24
    struct _FILETIME NotBefore; // Size=8 Offset=32
    struct _FILETIME NotAfter; // Size=8 Offset=40
    struct _CRYPTOAPI_BLOB Subject; // Size=8 Offset=48
    struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo; // Size=24 Offset=56
    struct _CRYPT_BIT_BLOB IssuerUniqueId; // Size=12 Offset=80
    struct _CRYPT_BIT_BLOB SubjectUniqueId; // Size=12 Offset=92
    unsigned long cExtension; // Size=4 Offset=104
    struct _CERT_EXTENSION * rgExtension; // Size=4 Offset=108
} CERT_INFO, *PCERT_INFO;
typedef struct _wireVARIANT // Size=32
{
    unsigned long clSize; // Size=4 Offset=0
    unsigned long rpcReserved; // Size=4 Offset=4
    unsigned short vt; // Size=2 Offset=8
    unsigned short wReserved1; // Size=2 Offset=10
    unsigned short wReserved2; // Size=2 Offset=12
    unsigned short wReserved3; // Size=2 Offset=14
    union
    {
        __int64 llVal; // Size=8 Offset=16
        long lVal; // Size=4 Offset=16
        unsigned char bVal; // Size=1 Offset=16
        short iVal; // Size=2 Offset=16
        float fltVal; // Size=4 Offset=16
        double dblVal; // Size=8 Offset=16
        short boolVal; // Size=2 Offset=16
        long scode; // Size=4 Offset=16
        union tagCY cyVal; // Size=8 Offset=16
        double date; // Size=8 Offset=16
        struct _FLAGGED_WORD_BLOB * bstrVal; // Size=4 Offset=16
        struct IUnknown * punkVal; // Size=4 Offset=16
        struct IDispatch * pdispVal; // Size=4 Offset=16
        struct _wireSAFEARRAY * * parray; // Size=4 Offset=16
        struct _wireBRECORD * brecVal; // Size=4 Offset=16
        unsigned char * pbVal; // Size=4 Offset=16
        short * piVal; // Size=4 Offset=16
        long * plVal; // Size=4 Offset=16
        __int64 * pllVal; // Size=4 Offset=16
        float * pfltVal; // Size=4 Offset=16
        double * pdblVal; // Size=4 Offset=16
        short * pboolVal; // Size=4 Offset=16
        long * pscode; // Size=4 Offset=16
        union tagCY * pcyVal; // Size=4 Offset=16
        double * pdate; // Size=4 Offset=16
        struct _FLAGGED_WORD_BLOB * * pbstrVal; // Size=4 Offset=16
        struct IUnknown * * ppunkVal; // Size=4 Offset=16
        struct IDispatch * * ppdispVal; // Size=4 Offset=16
        struct _wireSAFEARRAY * * * pparray; // Size=4 Offset=16
        struct _wireVARIANT * * pvarVal; // Size=4 Offset=16
        char cVal; // Size=1 Offset=16
        unsigned short uiVal; // Size=2 Offset=16
        unsigned long ulVal; // Size=4 Offset=16
        unsigned __int64 ullVal; // Size=8 Offset=16
        int intVal; // Size=4 Offset=16
        unsigned int uintVal; // Size=4 Offset=16
        struct tagDEC decVal; // Size=16 Offset=16
        struct tagDEC * pdecVal; // Size=4 Offset=16
        char * pcVal; // Size=4 Offset=16
        unsigned short * puiVal; // Size=4 Offset=16
        unsigned long * pulVal; // Size=4 Offset=16
        unsigned __int64 * pullVal; // Size=4 Offset=16
        int * pintVal; // Size=4 Offset=16
        unsigned int * puintVal; // Size=4 Offset=16
    };
} wireVARIANT, *PwireVARIANT;
typedef struct tagPARAMDESCEX // Size=24
{
    unsigned long cBytes; // Size=4 Offset=0
    struct tagVARIANT varDefaultValue; // Size=16 Offset=8
} *PtagPARAMDESCEX;
typedef struct _MINIDUMP_CALLBACK_INPUT // Size=772
{
    unsigned long ProcessId; // Size=4 Offset=0
    void * ProcessHandle; // Size=4 Offset=4
    unsigned long CallbackType; // Size=4 Offset=8
    union
    {
        struct _MINIDUMP_THREAD_CALLBACK Thread; // Size=744 Offset=12
        struct _MINIDUMP_THREAD_EX_CALLBACK ThreadEx; // Size=760 Offset=12
        struct _MINIDUMP_MODULE_CALLBACK Module; // Size=92 Offset=12
        struct _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread; // Size=4 Offset=12
        struct _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule; // Size=8 Offset=12
    };
} MINIDUMP_CALLBACK_INPUT, *PMINIDUMP_CALLBACK_INPUT;
typedef struct tagCUSTDATAITEM // Size=32
{
    struct _GUID guid; // Size=16 Offset=0
    struct tagVARIANT varValue; // Size=16 Offset=16
} *PtagCUSTDATAITEM;
typedef struct tagFUNCDESC // Size=52
{
    long memid; // Size=4 Offset=0
    long * lprgscode; // Size=4 Offset=4
    struct tagELEMDESC * lprgelemdescParam; // Size=4 Offset=8
    enum tagFUNCKIND funckind; // Size=4 Offset=12
    enum tagINVOKEKIND invkind; // Size=4 Offset=16
    enum tagCALLCONV callconv; // Size=4 Offset=20
    short cParams; // Size=2 Offset=24
    short cParamsOpt; // Size=2 Offset=26
    short oVft; // Size=2 Offset=28
    short cScodes; // Size=2 Offset=30
    struct tagELEMDESC elemdescFunc; // Size=16 Offset=32
    unsigned short wFuncFlags; // Size=2 Offset=48
} *PtagFUNCDESC;
typedef union _DEBUG_EVENT::__unnamed // Size=84
{
    struct _EXCEPTION_DEBUG_INFO Exception; // Size=84 Offset=0
    struct _CREATE_THREAD_DEBUG_INFO CreateThread; // Size=12 Offset=0
    struct _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo; // Size=40 Offset=0
    struct _EXIT_THREAD_DEBUG_INFO ExitThread; // Size=4 Offset=0
    struct _EXIT_PROCESS_DEBUG_INFO ExitProcess; // Size=4 Offset=0
    struct _LOAD_DLL_DEBUG_INFO LoadDll; // Size=24 Offset=0
    struct _UNLOAD_DLL_DEBUG_INFO UnloadDll; // Size=4 Offset=0
    struct _OUTPUT_DEBUG_STRING_INFO DebugString; // Size=8 Offset=0
    struct _RIP_INFO RipInfo; // Size=8 Offset=0
} DEBUG_EVENT::__unnamed, *PDEBUG_EVENT::__unnamed;
typedef struct _MIDL_STUB_MESSAGE // Size=220
{
    struct _RPC_MESSAGE * RpcMsg; // Size=4 Offset=0
    unsigned char * Buffer; // Size=4 Offset=4
    unsigned char * BufferStart; // Size=4 Offset=8
    unsigned char * BufferEnd; // Size=4 Offset=12
    unsigned char * BufferMark; // Size=4 Offset=16
    unsigned long BufferLength; // Size=4 Offset=20
    unsigned long MemorySize; // Size=4 Offset=24
    unsigned char * Memory; // Size=4 Offset=28
    int IsClient; // Size=4 Offset=32
    int ReuseBuffer; // Size=4 Offset=36
    struct NDR_ALLOC_ALL_NODES_CONTEXT * pAllocAllNodesContext; // Size=4 Offset=40
    struct NDR_POINTER_QUEUE_STATE * pPointerQueueState; // Size=4 Offset=44
    int IgnoreEmbeddedPointers; // Size=4 Offset=48
    unsigned char * PointerBufferMark; // Size=4 Offset=52
    unsigned char fBufferValid; // Size=1 Offset=56
    unsigned char uFlags; // Size=1 Offset=57
    unsigned short UniquePtrCount; // Size=2 Offset=58
    unsigned long MaxCount; // Size=4 Offset=60
    unsigned long Offset; // Size=4 Offset=64
    unsigned long ActualCount; // Size=4 Offset=68
    void * ( * pfnAllocate)(unsigned int); // Size=4 Offset=72
    void ( * pfnFree)(void *); // Size=4 Offset=76
    unsigned char * StackTop; // Size=4 Offset=80
    unsigned char * pPresentedType; // Size=4 Offset=84
    unsigned char * pTransmitType; // Size=4 Offset=88
    void * SavedHandle; // Size=4 Offset=92
    struct _MIDL_STUB_DESC * StubDesc; // Size=4 Offset=96
    struct _FULL_PTR_XLAT_TABLES * FullPtrXlatTables; // Size=4 Offset=100
    unsigned long FullPtrRefId; // Size=4 Offset=104
    unsigned long PointerLength; // Size=4 Offset=108
    struct
    {
        int fInDontFree: 1; // Size=4 Offset=112 BitOffset=0 BitCount=1
        int fDontCallFreeInst: 1; // Size=4 Offset=112 BitOffset=1 BitCount=1
        int fInOnlyParam: 1; // Size=4 Offset=112 BitOffset=2 BitCount=1
        int fHasReturn: 1; // Size=4 Offset=112 BitOffset=3 BitCount=1
        int fHasExtensions: 1; // Size=4 Offset=112 BitOffset=4 BitCount=1
        int fHasNewCorrDesc: 1; // Size=4 Offset=112 BitOffset=5 BitCount=1
        int fUnused: 10; // Size=4 Offset=112 BitOffset=6 BitCount=10
        int fUnused2: 16; // Size=4 Offset=112 BitOffset=16 BitCount=16
    };
    unsigned long dwDestContext; // Size=4 Offset=116
    void * pvDestContext; // Size=4 Offset=120
    struct ___unnamed736 * * SavedContextHandles; // Size=4 Offset=124
    long ParamNumber; // Size=4 Offset=128
    struct IRpcChannelBuffer * pRpcChannelBuffer; // Size=4 Offset=132
    struct ARRAY_INFO * pArrayInfo; // Size=4 Offset=136
    unsigned long * SizePtrCountArray; // Size=4 Offset=140
    unsigned long * SizePtrOffsetArray; // Size=4 Offset=144
    unsigned long * SizePtrLengthArray; // Size=4 Offset=148
    void * pArgQueue; // Size=4 Offset=152
    unsigned long dwStubPhase; // Size=4 Offset=156
    void * LowStackMark; // Size=4 Offset=160
    struct _NDR_ASYNC_MESSAGE * pAsyncMsg; // Size=4 Offset=164
    struct _NDR_CORRELATION_INFO * pCorrInfo; // Size=4 Offset=168
    unsigned char * pCorrMemory; // Size=4 Offset=172
    void * pMemoryList; // Size=4 Offset=176
    struct CS_STUB_INFO * pCSInfo; // Size=4 Offset=180
    unsigned char * ConformanceMark; // Size=4 Offset=184
    unsigned char * VarianceMark; // Size=4 Offset=188
    int Unused; // Size=4 Offset=192
    struct _NDR_PROC_CONTEXT * pContext; // Size=4 Offset=196
    int Reserved51_1; // Size=4 Offset=200
    int Reserved51_2; // Size=4 Offset=204
    int Reserved51_3; // Size=4 Offset=208
    int Reserved51_4; // Size=4 Offset=212
    int Reserved51_5; // Size=4 Offset=216
} MIDL_STUB_MESSAGE, *PMIDL_STUB_MESSAGE;
typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO // Size=68
{
    unsigned long cbSize; // Size=4 Offset=0
    unsigned long dwRecipientIndex; // Size=4 Offset=4
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=8
    struct _CRYPTOAPI_BLOB UserKeyingMaterial; // Size=8 Offset=20
    unsigned long dwOriginatorChoice; // Size=4 Offset=28
    union
    {
        struct _CERT_ID OriginatorCertId; // Size=20 Offset=32
        struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo; // Size=24 Offset=32
    };
    unsigned long cKeyAgreeKeyEncryptInfo; // Size=4 Offset=56
    struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO * * rgpKeyAgreeKeyEncryptInfo; // Size=4 Offset=60
    unsigned long dwFlags; // Size=4 Offset=64
} CMSG_KEY_AGREE_ENCRYPT_INFO, *PCMSG_KEY_AGREE_ENCRYPT_INFO;
typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO // Size=60
{
    unsigned long dwVersion; // Size=4 Offset=0
    unsigned long dwOriginatorChoice; // Size=4 Offset=4
    union
    {
        struct _CERT_ID OriginatorCertId; // Size=20 Offset=8
        struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo; // Size=24 Offset=8
    };
    struct _CRYPTOAPI_BLOB UserKeyingMaterial; // Size=8 Offset=32
    struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm; // Size=12 Offset=40
    unsigned long cRecipientEncryptedKeys; // Size=4 Offset=52
    struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO * * rgpRecipientEncryptedKeys; // Size=4 Offset=56
} CMSG_KEY_AGREE_RECIPIENT_INFO, *PCMSG_KEY_AGREE_RECIPIENT_INFO;
typedef union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 // Size=24
{
    struct _wireSAFEARR_BSTR BstrStr; // Size=8 Offset=0
    struct _wireSAFEARR_UNKNOWN UnknownStr; // Size=8 Offset=0
    struct _wireSAFEARR_DISPATCH DispatchStr; // Size=8 Offset=0
    struct _wireSAFEARR_VARIANT VariantStr; // Size=8 Offset=0
    struct _wireSAFEARR_BRECORD RecordStr; // Size=8 Offset=0
    struct _wireSAFEARR_HAVEIID HaveIidStr; // Size=24 Offset=0
    struct _BYTE_SIZEDARR ByteStr; // Size=8 Offset=0
    struct _SHORT_SIZEDARR WordStr; // Size=8 Offset=0
    struct _LONG_SIZEDARR LongStr; // Size=8 Offset=0
    struct _HYPER_SIZEDARR HyperStr; // Size=8 Offset=0
} wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001, *PwireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001;
typedef struct _wireSAFEARRAY_UNION // Size=28
{
    unsigned long sfType; // Size=4 Offset=0
    union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u; // Size=24 Offset=4
} wireSAFEARRAY_UNION, *PwireSAFEARRAY_UNION;
typedef struct _wireSAFEARRAY // Size=48
{
    unsigned short cDims; // Size=2 Offset=0
    unsigned short fFeatures; // Size=2 Offset=2
    unsigned long cbElements; // Size=4 Offset=4
    unsigned long cLocks; // Size=4 Offset=8
    struct _wireSAFEARRAY_UNION uArrayStructs; // Size=28 Offset=12
    struct tagSAFEARRAYBOUND rgsabound[1]; // Size=8 Offset=40
} wireSAFEARRAY, *PwireSAFEARRAY;
typedef struct tagPROPVARIANT // Size=16
{
    union
    {
        struct
        {
            unsigned short vt; // Size=2 Offset=0
            unsigned short wReserved1; // Size=2 Offset=2
            unsigned short wReserved2; // Size=2 Offset=4
            unsigned short wReserved3; // Size=2 Offset=6
            union
            {
                char cVal; // Size=1 Offset=8
                unsigned char bVal; // Size=1 Offset=8
                short iVal; // Size=2 Offset=8
                unsigned short uiVal; // Size=2 Offset=8
                long lVal; // Size=4 Offset=8
                unsigned long ulVal; // Size=4 Offset=8
                int intVal; // Size=4 Offset=8
                unsigned int uintVal; // Size=4 Offset=8
                union _LARGE_INTEGER hVal; // Size=8 Offset=8
                union _ULARGE_INTEGER uhVal; // Size=8 Offset=8
                float fltVal; // Size=4 Offset=8
                double dblVal; // Size=8 Offset=8
                short boolVal; // Size=2 Offset=8
                long scode; // Size=4 Offset=8
                union tagCY cyVal; // Size=8 Offset=8
                double date; // Size=8 Offset=8
                struct _FILETIME filetime; // Size=8 Offset=8
                struct _GUID * puuid; // Size=4 Offset=8
                struct tagCLIPDATA * pclipdata; // Size=4 Offset=8
                unsigned short * bstrVal; // Size=4 Offset=8
                struct tagBSTRBLOB bstrblobVal; // Size=8 Offset=8
                struct tagBLOB blob; // Size=8 Offset=8
                char * pszVal; // Size=4 Offset=8
                unsigned short * pwszVal; // Size=4 Offset=8
                struct IUnknown * punkVal; // Size=4 Offset=8
                struct IDispatch * pdispVal; // Size=4 Offset=8
                struct IStream * pStream; // Size=4 Offset=8
                struct IStorage * pStorage; // Size=4 Offset=8
                struct tagVersionedStream * pVersionedStream; // Size=4 Offset=8
                struct tagSAFEARRAY * parray; // Size=4 Offset=8
                struct tagCAC cac; // Size=8 Offset=8
                struct tagCAUB caub; // Size=8 Offset=8
                struct tagCAI cai; // Size=8 Offset=8
                struct tagCAUI caui; // Size=8 Offset=8
                struct tagCAL cal; // Size=8 Offset=8
                struct tagCAUL caul; // Size=8 Offset=8
                struct tagCAH cah; // Size=8 Offset=8
                struct tagCAUH cauh; // Size=8 Offset=8
                struct tagCAFLT caflt; // Size=8 Offset=8
                struct tagCADBL cadbl; // Size=8 Offset=8
                struct tagCABOOL cabool; // Size=8 Offset=8
                struct tagCASCODE cascode; // Size=8 Offset=8
                struct tagCACY cacy; // Size=8 Offset=8
                struct tagCADATE cadate; // Size=8 Offset=8
                struct tagCAFILETIME cafiletime; // Size=8 Offset=8
                struct tagCACLSID cauuid; // Size=8 Offset=8
                struct tagCACLIPDATA caclipdata; // Size=8 Offset=8
                struct tagCABSTR cabstr; // Size=8 Offset=8
                struct tagCABSTRBLOB cabstrblob; // Size=8 Offset=8
                struct tagCALPSTR calpstr; // Size=8 Offset=8
                struct tagCALPWSTR calpwstr; // Size=8 Offset=8
                struct tagCAPROPVARIANT capropvar; // Size=8 Offset=8
                char * pcVal; // Size=4 Offset=8
                unsigned char * pbVal; // Size=4 Offset=8
                short * piVal; // Size=4 Offset=8
                unsigned short * puiVal; // Size=4 Offset=8
                long * plVal; // Size=4 Offset=8
                unsigned long * pulVal; // Size=4 Offset=8
                int * pintVal; // Size=4 Offset=8
                unsigned int * puintVal; // Size=4 Offset=8
                float * pfltVal; // Size=4 Offset=8
                double * pdblVal; // Size=4 Offset=8
                short * pboolVal; // Size=4 Offset=8
                struct tagDEC * pdecVal; // Size=4 Offset=8
                long * pscode; // Size=4 Offset=8
                union tagCY * pcyVal; // Size=4 Offset=8
                double * pdate; // Size=4 Offset=8
                unsigned short * * pbstrVal; // Size=4 Offset=8
                struct IUnknown * * ppunkVal; // Size=4 Offset=8
                struct IDispatch * * ppdispVal; // Size=4 Offset=8
                struct tagSAFEARRAY * * pparray; // Size=4 Offset=8
                struct tagPROPVARIANT * pvarVal; // Size=4 Offset=8
            };
        };
        struct tagDEC decVal; // Size=16 Offset=0
    };
} *PtagPROPVARIANT;

#endif
